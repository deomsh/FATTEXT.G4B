!BAT
#-#+ FATTEXT.G4B v1.0 (20230319), by deomsh
if exist @uefi && echo FATTEXT.G4B v1.0 is not compatible with grub4efi && goto :eof
setlocal && set /a version=*0x8278 > nul &; if %version%>=20170607 && endlocal ! echo Grub4dos version %version% too old, use version 20170607 or later && endlocal && goto :eof
setlocal && set /A memsect=*0x8298&0xffffffff * 2 > nul &; if %memsect%>=0x24000 && endlocal ! echo FATTEXT.G4B needs installed memory >= 72 MB && endlocal && goto :eof
setlocal && set * && set col=%col% && set oldgoto=%oldgoto% && set "oldfile=%oldfile%" && set colorsts=%colorsts% && set donefile=%donefile% && set texthist=%texthist%
setlocal ;; pause --wait=0 !BAT > (md)0x220+1 ;; pause --wait=0 set oldevice=%~d0 >> (md)0x220+1 && pause --wait=0 set "oldpath=%~p0" >> (md)0x220+1 ;; debug status > nul ;; pause --wait=0 debug %@retval% >> (md)0x220+1 && endlocal
debug 1
debug msg=1
setlocal ;; pager status > nul ;; if %@retval%==1 && set pgsts=on ! set pgsts=off ;; pause --wait=0 pager %pgsts% >> (md)0x220+1 ;; graphicsmode > nul ;; set /A grsts=%@retval% > nul ;; pause --wait=0 set grsts=%grsts% >> (md)0x220+1 ;; pause --wait=0 graphicsmode %grsts% >> (md)0x220+1 ;; if not %grsts%==0x3 && if not %grsts%==0x12 && if not %grsts%==0x100 && if not %grsts%==0x101 && if not %grsts%==0x110 && if not %grsts%==0x111 && if not %grsts%==0x112 && if not %grsts%==0x141 && if not %grsts%==0x142 && graphicsmode 3 ;; echo -n > (md)0x300+1 && color > (md)0x300+1 && raw cat --locate=\x0A64_bit (md)0x300+1 > nul &; set /a skip=%?%-2 > nul &; raw cat --skip=%skip% --length=2 (md)0x300+1 | set colorsts= &; if exist colorsts && checkrange 0x0:0xFF calc 0x%colorsts% > nul && pause --wait=0 color standard=0x%colorsts% >> (md)0x220+1 ;; if %grsts%>=0x100 && set vmax=29 ! set vmax=24 ;; if exist col && set colorsts= ;; endlocal && set vmax=%vmax% && set grsts=%grsts% && set colorsts=%colorsts%
debug msg=0
pager off
if not /i "%~1"=="--help" if not /i "%~1"=="/help" if not /i "%~1"=="/?" if not /i "%~1"=="?" if not /i "%~1"=="--?" |; setlocal && call :setcolors &; set vmax= &; call :help &; endlocal && set vmax= && set colorsts= && goto :eof
delmod -l fat > nul || insmod /fat > nul || insmod (bd)/boot/grub/fat > nul || insmod (bd)/fat > nul || insmod (bd)/grub/fat > nul || insmod (bd)/g4dll/fat > nul || insmod %@root%/fat > nul || set "message1=echo -e \x20Grubutil FAT needed in (bd), (bd)/boot/grub, (bd)/grub, (bd)/g4dll or current or root directory" && goto :eov
set ARG=%~1 &; if /i %ARG:~0,8%==/MDBASE: && set mdbase=%ARG:~8% && shift ;; set ARG=
if not %mdbase%>=0x3000 && set mdbase=0x3000
if exist %~d0%~p0fattext.dat &; cat --length=0 %~d0%~p0fattext.dat > nul &; if %@retval%>=5120 && raw cat --locate=?BAT --length=4 %~d0%~p0fattext.dat > nul && raw cat --locate=?BAT --replace=!BAT --length=4 %~d0%~p0fattext.dat > nul && call %~d0%~p0fattext.dat && set doneini=Y && raw cat --locate=!BAT --replace=?BAT --length=4 %~d0%~p0fattext.dat > nul
if %doneini%==Y &; set doneini= && set /A mdfile=%mdbase%+31 &; cat --skip=512 --locate=!BAT --length=4 %~d0%~p0fattext.dat > nul && raw dd if=%~d0%~p0fattext.dat of=(md)%mdfile%+9 skip=1 > nul && cat --locate=!BAT --length=4 (md)%mdfile%+1 > nul && set texthist=Y
set worksect=0x100 && set callsect=0x1FF &; set /A mdread=%mdbase%+%worksect% &; set /A memsect=%callsect% * 7
echo -n > (md)%mdbase%+31 && set /A worksect=%worksect%-31-9 && set /A mdbase2=%mdbase%+40 &; call :cleanmem "%mdbase2%" "%worksect%" && call :cleanmem "%mdread%" "%memsect%"
set worksect= && set mdbase2= && set memsect=
##MEM IN USE#status!BAT: 0x220+1; Freeworksect: mdbase+4 sectors; mdbase(:writeline)/mdbase1(:writemd)=mdbase+4+3; mdbase2(:findsetp)=mdbase+5+1; mdnofind(idem)=mdbase+7+1; mdrepl(idem+:replace)=mdbase+8+1; vrij:mdbase+9+1; mdbase2(:keybuff)=mdbase+10+3; mdkeybuf(idem)=mdbase+13+16; mdvol=mdbase+40+4; mdfind(:getfile)=mdbase+30-39; mdls (:browsels+sub)mdread+0x200 (255 sectors, 1 left - def 0x3300); mdls2=mdls+0x100 (255 sectors, 1 left - def 0x3400); mdread=mdbase+worksect (def 0x3100); callsect: 0x1FF; mdwrite=callsect+1*4+mdread (def 0x3900); mddraft=callsect+1*2+mdread (def 0x3500) :showfind 0x221+222 [old:+223]; [NOMORE buflen and buf 0x19000+512 in :readfile, :validate; :ddwrite and for conversion (= :?)]; for map (rd) to (fd99) 0x20000+16384 (0x4000000 and 8388608 byte --rd-size=8m NOT taken!); instead :ddwrite etc mdbackup at mdread+3*callsect+3=0x3700 default; [10 sectors in fattext.dat]; mdnhist=0x3000+45+1; mdhistbk=0x3000+46+16
set device=%~d1 ;; if not exist device && set device=%~d0
set "path=%~p1" ;; if not exist path && set "path=%~p0"
set "file=%~nx1" &; if exist file && set "fullfile=%~f1"
call :setcolors &; call :footer && set color= && set grsts= && set colorsts=
call :header "CHECK" "%device%%%path%%%file%" && call :Fn.5 1 1 && echo -n $[]Wait... && if exist file && set SFN= && call :checksfn "FILE" "%file%" &; if %SFN%==N && set SFN= && echo -n %highcol%. Press a key to continue... && pause && goto :eov
if not "%path%"=="/" && set SFN= && call :checksfn "PATH" "%path%" &; if %SFN%==N && set SFN= && echo -n %highcol%. Press a key to continue... && pause && goto :eov
fat dir (fd99)/lastsave > nul && setlocal && call :fatdev (fd99) &; if %freeKB%>=3082 && endlocal ! endlocal && map --unmap=99 && map --rehook
if not %texthist%==Y &; map --unmap=99 &; map --rehook &; map --rd-base=0x4000000 &; map --rd-size=8388608 &; call :cleanmem "0x20000" "16384" &; map --mem --unsafe-boot --heads=0 --sectors-per-track=0 (rd)+1 (fd99) > nul &; map --hook &; fat mkfs (fd99) > nul &; raw write --offset=0x24 (fd99)0+1 \x00 > nul &; vol --write (fd99) BACKUPFILES
if %texthist%==Y &; set texthist= && fat dir (fd99)/lastsave > nul |; map --unmap=99 &; map --rehook &; map --rd-base=0x4000000 &; map --rd-size=8388608 &; call :cleanmem "0x20000" "16384" &; map --mem --unsafe-boot --heads=0 --sectors-per-track=0 (rd)+1 (fd99) > nul &; map --hook &; fat mkfs (fd99) > nul &; raw write --offset=0x24 (fd99)0+1 \x00 > nul &; vol --write (fd99) BACKUPFILES
set success= &; fat dir (fd99)/lastsave > nul |; fat mkdir (fd99)/lastsave > nul || set success=N
if %success%==N && set success= && set continue=zyx &; call :cleanline "1" && call :Fn.5 0 1 && echo -n $[] Backup device (fd99) not available, Continue? %highcol%N$[]o %highcol%Y$[]es && call :Fn.5 0 99 && pause --test-key --wait=180 &; set /A keycode=%@retval%&0xffff > nul &; call :keycodes "%keycode%" "continue" &; call :cleanline "1" && set keycode= &; if not %continue%==Y && set "message1=echo -n %highcol%Abort: loading file (by user)" && goto :eov ! set continue=
if exist file && if not exist %fullfile% && set "message1=echo -e \x20%highcol%%%fullfile% does not exist" && goto :eov
if exist file && call :readfile &; if exist message1 && goto :eov
set filesize= && set fullfile=
if not exist NHistory && call :NHistory
#RESERVED#set /a show=21
set message1=
if exist file && call :Fn.5 0 3 && call :validate &; if not exist message1 && if not %device%==(fd99) && call :getfile "%device%" "%path%" "%file%" "FIRSTRUN" &; if %repaired%==Y && set changed=Y && set repaired=
if exist message1 && if %repair%==N && goto :eov
if exist EOL && set message1=
if exist file && set repair= && if exist message1 &; call :cleanline "1" &; %message1% && set file= && set message1= &; call :header "FILE" && pause --wait=7
if not exist file && if not exist openfile &; set /A mdcheck=%mdbase%+31 &; cat --locate=!BAT (md)%mdcheck%+9 > nul &; set /a vars2mem=%@retval% &; if not exist donefile && set donefile=%vars2mem% && set openfile=%vars2mem% ! set openfile=%vars2mem% &; set vars2mem= && set mdcheck= && if not %donefile%<=%openfile% && set donefile=%openfile%
if not exist file && call :header "SOURCE" "%device%%%path%"
if not exist file &; set "message=Welcome! Choose a menu-key to start with FATTEXT.G4B"
if "%oldfile%"=="%device%%%path%%%file%" && set gotoline=%oldgoto% && set oldgoto= && set oldfile= ! set oldgoto= && set oldfile=
if exist file && set menu=E &; if not exist gotoline && call :editor ! call :edit
:menu
if exist file && call :header "FILE"
if not exist file && call :header "SOURCE" "%device%%%path%"
if exist message && call :footer "call Fn.5 3 24" && echo -n %message%
if exist oldmenu && set menu=%oldmenu% ! set menu=
if exist file && setlocal && call :fileleng "%mdread%" "%callsect%" "0x0" &; if %filelen%>=1 && endlocal ! endlocal && set menu=Q
if %zeros%==1 && set menu=Q
if %menu%==Q && set menu= && goto :eov
setlocal && set mdbase=%mdbase% && set menu=%menu% && set oldmenu=%oldmenu% && set fatdev=%fatdev%
if not exist message && echo -P:2461 -n %lowcol%Inline Help: F1 ;; call :cleanline "1"
set ascol=%highcol% && if not exist file && cat --hex --locate=\x00 --length=1 (md)%mdread%+%callsect% > nul || set file=UNTITLED && set ascol=%lowcol% && call :header "FILE"
set key= && call :cleanline "1"
if not exist fatdev && call :fatdev "%device%"
if not exist oldmenu && if exist file && if exist fatdev && if %fatdev%==Y && set keycode= && echo -n $[] %highcol%E$[]dit %highcol%N$[]ew %highcol%W$[]rite %highcol%O$[]pen %highcol%S$[]ave %ascol%A$[]s %highcol%C$[]onvert %highcol%B$[]ackup %highcol%G$[]raphics %highcol%R$[]efresh %highcol%H$[]elp %highcol%Q$[]uit && call :Fn.5 0 99 && pause --test-key &; set /A keycode=%@retval% &; call :keycodes "%keycode%" "menu" &; set keycode= &; if not %menu%==F1 && call :cleanline "1" ! set menu=%menu% &; if %menu%==zyx && set menu=E
if not exist oldmenu && if exist file && if not exist fatdev && set keycode= && echo -n $[] %highcol%E$[]dit %highcol%N$[]ew %highcol%W$[]rite %highcol%O$[]pen %highcol%S$[]ave %ascol%A$[]s %highcol%C$[]onvert %highcol%B$[]ackup %highcol%G$[]raphics %highcol%R$[]efresh %highcol%H$[]elp %highcol%Q$[]uit && call :Fn.5 0 99 && pause --test-key &; set /A keycode=%@retval% &; call :keycodes "%keycode%" "menu" &; set keycode= &; if not %menu%==F1 && call :cleanline "1" ! set menu=%menu% &; if %menu%==zyx && set menu=E ! if not %menu%==A || set menu=
if not exist oldmenu && if not exist file && set keycode= && echo -n $[] %highcol%N$[]ew %lowcol%W$[]rite %lowcol%E$[]dit %highcol%O$[]pen %lowcol%S$[]ave %lowcol%A$[]s %lowcol%C$[]onvert %lowcol%B$[]ackup %highcol%G$[]raphics %highcol%R$[]efresh %highcol%H$[]elp %highcol%Q$[]uit && call :Fn.5 0 99 && pause --test-key &; set /A keycode=%@retval% &; call :keycodes "%keycode%" "menu" &; set keycode= &; if not %menu%==F1 && call :cleanline "1" ! set menu=%menu% &; if %menu%==zyx && set menu=N ! if not %menu%==E if not %menu%==W if not %menu%==S if not %menu%==A if not %menu%==C if not %menu%==B || set menu=
call :footer "call Fn.5 0 24"
endlocal && set menu=%menu% && set oldmenu=
set message=
if %menu%==R && setlocal && call :refresh &; endlocal && set oldmenu= && call :footer &; if exist gotoline && set menu=X ! goto :menu
if not %menu%==W if not %menu%==S if not %menu%==A if not %menu%==B || cat --locate=\x00 --length=1 (md)%mdread%+%callsect% > nul && set oldmenu= && goto :menu
if %menu%==W && cat --locate=\x00 --length=1 (md)%mdread%+%callsect% > nul && set "message=%highcol%File %file% is empty - try again" && set file= && set oldmenu= && goto :menu
if %menu%==W && call :editor &; set oldmenu= && goto :menu
if %menu%==N && if %changed%==Y &; call :footer "call Fn.5 0 24" &; call Fn.5 3 24
if %menu%==N && if %changed%==Y &; echo -n %highcol%Changes are not saved. Save? &; call :cleanline "1" &; set change=zyx && set keycode= &; echo -n $[] %highcol%S$[]ave %highcol%C$[]ontinue && call :Fn.5 0 99 && pause --wait=180 --test-key &; set /A keycode=%@retval% &; call :keycodes "%keycode%" "change" &; set keycode= && call :cleanline "1" && call :footer
if %menu%==N && if %changed%==Y && if %change%==zyx && set change=S
if %menu%==N && if %changed%==Y && if %change%==S && set change=
if %menu%==N && if %changed%==Y && if %change%==S && if exist file && set replace=R &; call :save
if %menu%==N && if %changed%==Y && if %change%==S && if not exist file && call :saveas
if %menu%==N && if %changed%==Y && if %change%==C && set change= && set changed= && call :footer "call Fn.5 0 24" && setlocal && set "path=%path%" &; if %@retval%>=31 && set "path=%path:~0,14%..%path:~-14,14%" ! set "path=%path%" &; echo -P:2403 -n %highcol%Changes not saved to %device%%%path%%%file% && pause --wait=3 && endlocal
if %menu%==N && call :cleanmem "%mdread%" "%callsect%"
if %menu%==N && set menu=W && set file= && set EOL=\x0D\x0A && call :editor &; set oldmenu= && goto :menu
if %menu%==E && if not exist gotoline && call :editor &; set oldmenu= && goto :menu
if %menu%==E && if exist gotoline && call :edit &; set oldmenu=
if %menu%==O && if %changed%==Y &; call :footer "call Fn.5 3 24"
if %menu%==O && if %changed%==Y &; echo -n %highcol%Changes are not saved. Save? &; call :cleanline "1" &; set change=zyx && set keycode= &; echo -n $[] %highcol%S$[]ave %highcol%C$[]ontinue && call :Fn.5 0 99 && pause --wait=180 --test-key &; set /A keycode=%@retval% &; call :keycodes "%keycode%" "change" &; set keycode= && call :cleanline "1" && call :footer
if %menu%==O && if %changed%==Y && if %change%==zyx && set change=S
if %menu%==O && if %changed%==Y && if %change%==S && set change= && set oldmenu=%menu% && set menu=S
if %menu%==O && if %changed%==Y && if not exist change && set oldmenu= && goto :menu
if %menu%==O && if %changed%==Y && if not %change%==C && set change= &; echo -n %highcol%Changes are not saved to %device%%%path%%%file% && set oldmenu= && goto :menu
if %menu%==O && if %changed%==Y && if %change%==C && set change= && set changed=
if %menu%==O && setlocal && set devorg=%device% && set "pathorg=%path%" && set "fileorg=%file%" && set orggoto=%gotoline% && set orgEOL=%EOL% && call :open &; call :cleanline "3" "23" && call :footer &; if not exist file && set device=%devorg% && set "path=%pathorg%" && set "file=%fileorg%" && set gotoline=%orggoto% && set EOL=%orgEOL% && set menu=X ! if "%device%%%path%%%file%"=="%devorg%%%pathorg%%%fileorg%" && set gotoline=%orggoto% && set menu=X ! set menu=E &; endlocal && set menu=%menu% && set device=%device% && set "path=%path%" && set "file=%file%" && set gotoline=%gotoline% && set EOL=%EOL% && set openfile=%openfile% && set donefile=%donefile% && set zeros=%zeros% &; if exist file && if exist gotoline && if %menu%==E && if not %zeros%==1 && set edit= && set stopline= && set showline= && set oldgoto= && call :edit ! if exist file && if %menu%==E && if not %zeros%==1 && call :editor ! if not %zeros%==1 && if not %menu%==X && set oldmenu= && goto :menu ! if not exist gotoline && set oldmenu= && goto :menu
if %menu%==A && if exist file && call :saveas &; if exist gotoline && set replace= && set menu=X ! set menu= && set replace=
if %menu%==B && if exist file && setlocal && set edit=Ctrl+B && call :saveas "BACKUP AS" &; endlocal && set "message=%message%" && set zeros=%zeros% && set openfile=%openfile% && set donefile=%donefile% &; if exist gotoline && set menu=X ! set menu=
if %menu%==Q && if %changed%==Y &; call :footer "call Fn.5 0 24"
if %menu%==Q && if %changed%==Y &; call Fn.5 3 24
if %menu%==Q && if %changed%==Y && echo -n %highcol%Changes are not saved. Save? &; call :cleanline "1" &; set change=zyx && set keycode= &; echo -n -e $[] %highcol%S$[]ave %highcol%C$[]ontinue && call :Fn.5 0 99 && pause --wait=180 --test-key &; set /A keycode=%@retval% &; call :keycodes "%keycode%" "change" &; set keycode= && call :cleanline "1" && call :footer
if %menu%==Q && if %changed%==Y && if %change%==zyx && set change=S
if %menu%==Q && if %changed%==Y && if %change%==zyx && set change=S
if %menu%==Q && if %changed%==Y && if %change%==S && if exist file && set replace=R &; call :save
if %menu%==Q && if %changed%==Y && if %change%==S && if not exist file && call :saveas
if %menu%==Q && if %change%==S if %change%==C || call :footer "call Fn.5 0 24" &; call Fn.5 3 24
if %menu%==Q && if %change%==S && set menu= && set change= && set changed= &; echo -n -e %message% && goto :eov
if %menu%==Q && if %change%==C && set menu= && set change= && set changed= && setlocal && set "path=%path%" &; if %@retval%>=31 && set "path=%path:~0,14%..%path:~-14,14%" ! set "path=%path%" &; echo -n %highcol%Changes not saved to %device%%%path%%%file% && endlocal && goto :eov
if %menu%==Q && set menu= && goto :eov
if %menu%==C && set menu= && call :convert &; if exist gotoline && set menu=X ! set menu=
if %menu%==S && if exist file && set replace=R &; call :save && set menu= && set replace=
if %menu%==S && if not exist file &; call :saveas &; if exist gotoline && set replace= && set menu=X ! set menu= && set replace=
if %menu%==H && setlocal && call :cleanline "3" "23" && call :help &; endlocal &; if exist gotoline && set menu=X ! set menu=
if %menu%==F1 && setlocal && call :help "MAIN" &; endlocal &; if exist gotoline && set menu=X ! set menu=
if %menu%==G && call :graphics &; if exist gotoline && set menu=X ! set menu=
if %menu%==X && if exist gotoline && set menu=E && set loopedit=XX && call :edit &; set menu=
goto :menu
::---------------------------------------
::SUBROUTINES
::---------------------------------------
:graphics
setlocal && set * && set col=%col% && set vmax=%vmax% && set highcol=%highcol% && set lowcol=%lowcol%
:graphicsloop
call :footer "call Fn.5 0 24" && echo -P:2469 -n %lowcol%Help: F1
if %vmax%==29 && set consocol=%highcol% && set graphcol=%lowcol% ! set consocol=%lowcol% && set graphcol=%highcol%
call :header "GRAPHICS" "MENU" && call :cleanline "1" && set graphics=zyx && set keycode= &; echo -n $[] %highcol%M$[]enu %consocol%T$[]extmode %graphcol%G$[]raphicsmode %highcol%C$[]olor && call :Fn.5 0 99 && pause --wait=180 --test-key &; set /A keycode=%@retval% &; call :keycodes "%keycode%" "graphics" &; set keycode= &; if not %graphics%==F1 && call :cleanline "1" ! set graphics=%graphics% &; if %graphics%==zyx && set graphics=M
if %graphics%==F1 && setlocal && call :help "GRAPHICS" &; endlocal && call :cleanline "3" "23" && set graphics=
if %graphics%==T && if %consocol%==%lowcol% && set graphics= ! if %graphics%==G && if %graphcol%==%lowcol% && set graphics=
if %graphics%==M && endlocal && set col=%col% && set vmax=%vmax% && set highcol=%highcol% && set lowcol=%lowcol% && goto :eof
if %graphics%==T && set graphics= && graphicsmode 3 && set vmax=24 && call :setcolors
if %graphics%==G && set graphics= && graphicsmode -1 640 && set vmax=29 && call :setcolors
if %graphics%==C && call :cleanline "3" "23" && echo -e \x20Color: Change Text/Background color && echo && echo -e \x20\x200 = white/black && echo -e \x20\x201 = white/blue\t\x20\x20\x20\x2021 = blue/black && echo -e \x20\x202 = white/green\t\x20\x20\x20\x2022 = green/black && echo -e \x20\x203 = blue/cyan\t\t\x20\x20\x20\x2023 = cyan/black && echo -e \x20\x204 = yellow/red\t\x20\x20\x20\x2024 = red/black && echo -e \x20\x205 = blue/magenta\t\x20\x20\x20\x2025 = magenta/black && echo -e \x20\x206 = yellow/brown\t\x20\x20\x20\x2026 = brown/black && echo -e \x20\x207 = brown/gray && echo -e \x20\x208 = blue/gray && echo -e \x20\x209 = yellow/light-blue\t\x20\x20\x20\x2029 = light-blue/black && echo -e \x2010 = black/light-green\t\x20\x20\x20\x2030 = light-green/black && echo -e \x2011 = black/light-cyan\t\x20\x20\x20\x2031 = light-cyan/black && echo -e \x2012 = black/light-red\t\x20\x20\x20\x2032 = light-red/black && echo -e \x2013 = black/light-magenta\x20\x20\x2033 = light-magenta/black && echo -e \x2014 = red/yellow\t\x20\x20\x20\x2034 = yellow/black && echo -e \x2015 = black/white
if %graphics%==C && call :footer "call Fn.5 0 24" && echo -P:2403 -n %lowcol%Press Escape to leave dialog
if %graphics%==C && call :cleanline "1" && set color=zyx &; set /p:180 /a "color= Choose color preset: 0-15 or 21-26 or 29-34 > " && call :cleanline "1" &; if not %color%==zyx &; checkrange 16:20 calc %color% > nul && set color=zyx ! checkrange 27:28 calc %color% > nul && set color=zyx ! checkrange 0:34 calc %color% > nul || set color=zyx
if %graphics%==C && read 0x41a > nul &; set /A head=%@retval%&0xff &; if %head%>=0x20 && set /A lastmem=%head%+0x400-2 ! set /A lastmem=0x43C &; read %lastmem% > nul &; set /A lastkey=%@retval%&0xffff &; if %lastkey%==0x11B && call :cleanline "3" "23" && set graphics=
if %graphics%==C && if not %color%==zyx &; if not %color%>=21 && set /A col=%color% ! set /A col=%color%-20 &; set col=%col:~2%%0 && call :setcolors
goto :graphicsloop

:setcolors
if not exist col && set col=%colorsts% && set colorsts=
if not exist col && set col=07 ! if not 0x%col%<=0xFF && set col=07
if "%col:~0,2%"=="0x" && set col=07
if %col:~0,1%==0 && if not "%col%"=="00" && if not "%col%"=="07" && if not "%col%"=="08" && if not "%col%"=="F0" && set /a color=20+0x%col:~1% && set col=%col:~1%%0
if "%col:~1%"=="" && set col=0%col%
if %col:~0,1%==0 &; if not %col:~1,1%==0 if not %col:~1,1%==7 if not %col:~1,1%==8 || color standard=0x07 && set highcol=$[0x0F] && set lowcol=$[0x08] && set col=07
if not %color%>=21 && if %col:~0,1%==1 && color standard=0x17 && set highcol=$[0x1F] && set lowcol=$[0x19] && set col=17
if %color%>=21 && if %col:~0,1%==1 && color standard=0x01 && set highcol=$[0x07] && set lowcol=$[0x08] && set col=01
if not %color%>=21 && if %col:~0,1%==2 && color standard=0x2F && set highcol=$[0x2E] && set lowcol=$[0x2A] && set col=2F
if %color%>=21 && if %col:~0,1%==2 && color standard=0x02 && set highcol=$[0x07] && set lowcol=$[0x08] && set col=02
if not %color%>=21 && if %col:~0,1%==3 && color standard=0x31 && set highcol=$[0x3F] && set lowcol=$[0x39] && set col=31
if %color%>=21 && if %col:~0,1%==3 && color standard=0x03 && set highcol=$[0x07] && set lowcol=$[0x08] && set col=03
if not %color%>=21 && if %col:~0,1%==4 && color standard=0x4E && set highcol=$[0x4F] && set lowcol=$[0x47] && set col=4E
if %color%>=21 && if %col:~0,1%==4 && color standard=0x04 && set highcol=$[0x07] && set lowcol=$[0x08] && set col=04
if not %color%>=21 && if %col:~0,1%==5 && color standard=0x51 && set highcol=$[0x5F] && set lowcol=$[0x59] && set col=51
if %color%>=21 && if %col:~0,1%==5 && color standard=0x05 && set highcol=$[0x07] && set lowcol=$[0x08] && set col=05
if not %color%>=21 &; if %vmax%==29 && if %col:~0,1%==6 && color standard=0x6E && set highcol=$[0x6F] && set lowcol=$[0x67] && set col=6E ! if %col:~0,1%==6 && color standard=0x6E && set highcol=$[0x4F] && set lowcol=$[0x47] && set col=6E
if %color%>=21 &; if %vmax%==29 && if %col:~0,1%==6 && color standard=0x06 && set highcol=$[0x07] && set lowcol=$[0x08] && set col=06 ! if %col:~0,1%==6 && color standard=0x06 && set highcol=$[0x07] && set lowcol=$[0x08] && set col=06
#BAD#if %col:~0,1%==6 && color standard=0x6E && set highcol=$[0x4F] && set lowcol=$[0x47] && set col=6E
if %col:~0,1%==7 && color standard=0x76 && set highcol=$[0x7F] && set lowcol=$[0x78] && set col=76
#NODIFFERENCE#if %color%>=21 && if %col:~0,1%==7 && color standard=0x07 && set highcol=$[0x0F] && set lowcol=$[0x08] && set col=07
if not %color%>=21 && if %col:~0,1%==8 && color standard=0x81 &; if not %vmax%==29 && set highcol=$[0x7F] && set lowcol=$[0x79] ! set highcol=$[0x8F] && set lowcol=$[0x89] &; set col=81
#NODIFFERENCE#if %color%>=21 && if %col:~0,1%==8 && color standard=0x08 &; if not %vmax%==29 && set highcol=$[0x0F] && set lowcol=$[0x08] ! set highcol=$[0x0F] && set lowcol=$[0x08] &; set col=08
if not %color%>=21 && if %col:~0,1%==9 && color standard=0x9E && set highcol=$[0x9F] && set lowcol=$[0x97] && set col=9E
if %color%>=21 && if %col:~0,1%==9 && color standard=0x09 && set highcol=$[0x07] && set lowcol=$[0x08] && set col=09
if not %color%>=21 && if %col:~0,1%==A && color standard=0xA0 && set highcol=$[0xAF] && set lowcol=$[0xA8] && set col=A0
if %color%>=21 && if %col:~0,1%==A && color standard=0x0A && set highcol=$[0x0F] && set lowcol=$[0x08] && set col=0A
if not %color%>=21 && if %col:~0,1%==B && color standard=0xB0 && set highcol=$[0xBF] && set lowcol=$[0xB3] && set col=B0
if %color%>=21 && if %col:~0,1%==B && color standard=0x0B && set highcol=$[0x0F] && set lowcol=$[0x08] && set col=0B
if not %color%>=21 && if %col:~0,1%==C && color standard=0xC0 && set highcol=$[0xCF] && set lowcol=$[0xC8] && set col=C0
if %color%>=21 && if %col:~0,1%==C && color standard=0x0C && set highcol=$[0x0F] && set lowcol=$[0x08] && set col=0C
if not %color%>=21 && if %col:~0,1%==D && color standard=0xD0 && set highcol=$[0xDF] && set lowcol=$[0xD8] && set col=D0
if %color%>=21 && if %col:~0,1%==D && color standard=0x0D && set highcol=$[0x0F] && set lowcol=$[0x08] && set col=0D
if not %color%>=21 && if %col:~0,1%==E && color standard=0xE4 && set highcol=$[0xE0] && set lowcol=$[0xE7] && set col=E4
if %color%>=21 && if %col:~0,1%==E && color standard=0x0E && set highcol=$[0x0F] && set lowcol=$[0x08] && set col=0E
if %col:~0,1%==F && color standard=0xF0 && set highcol=$[0x0F] && set lowcol=$[0xF8] && set col=F0
:refresh
clear && call Fn.70 0
if %vmax%==29 && call :cleanline "25" "29" "$[0x00]" && echo -P:2479 -n - && call Fn.70 1 ! echo -P:2479 -n - && call Fn.70 1
call :cleanline "0" "23" && call Fn.5 0 3
goto :eof

:readfile
setlocal && set * && set mdread=%mdread% && set callsect=%callsect% && set highcol=%highcol% && set device=%device% && set "path=%path%" && set "file=%file%"
set "path=%path%" &; if %@retval%>=31 && set "filemsg=%device%%%path:~0,14%..%path:~-14,14%%%file%" ! set "filemsg=%device%%%path%%%file%"
raw cat --length=0 %device%%%path%%%file% > nul &; set /a filesize=%@retval%
if %filesize%<=0 && endlocal && set "message1=echo -n %highcol%Abort: %filemsg% is 0 bytes" && goto :eof
if not %filesize%<=0x3FDFF && endlocal && set "message1=echo -n %highcol%Abort: %filemsg > 261631 bytes" && goto :eof
set /A mdbuf=%callsect% + 1 * 6 + %mdread% * 0x200 && set /A mdbuflen=256 * 0x400 &; call Fn.24 %mdbuf% 0x00 %mdbuflen%
call :cleanmem "%mdread%" "%callsect%" &; raw dd if=%device%%%path%%%file% of=(md)%mdread%+%callsect% bs=1 count=%filesize% buf=%mdbuf% buflen=%mdbuflen% > nul && cmp %device%%%path%%%file% (md)%mdread%+%callsect%,%filesize% > nul && set success=Y ! set "message1=echo -n %highcol%Abort: Read error - try again"
raw cat --locate=\x00 --number=1 (md)%mdread%+%callsect% > nul ;; set /a memsize=%?% &; if %success%==Y && if not exist memsize && set success= && set "message1=echo -n %highcol%Abort: can not load %filemsg%" ! if %success%==Y && if %memsize%==0 && set success= && set "message1=echo -n %highcol%Abort: can not load %filemsg%" ! if %success%==Y && if not %memsize%==%filesize% && set success= && set "message1=echo -n %highcol%Abort: %filemsg% contains zeros (00)"
if %success%==Y && if not %device%==(fd99) &; fat copy /o %device%%%path%%%file% (fd99) > nul |; set continue=zyx &; call :cleanline "1" && call :Fn.5 0 1 && echo -n $[] Backup device (fd99) not available, Continue? %highcol%N$[]o %highcol%Y$[]es && call :Fn.5 0 99 && pause --test-key --wait=180 &; set /A keycode=%@retval%&0xffff > nul &; call :keycodes "%keycode%" "continue" &; set keycode= && call :cleanline "1" &; if not %continue%==Y && set success= && set "message1=echo -n %highcol%Abort: loading %filemsg% by user" ! set continue=
if %success%==Y && endlocal && set filesize=%filesize% && goto :eof
if not exist success && endlocal && set "message1=%message1%" && goto :eof

:getfile
if "%~1"=="" && goto :eof ! if "%~2"=="" && goto :eof ! if "%~3"=="" && goto :eof
if %nogetfil%==Y && set nogetfil= && goto :eof
setlocal && set * && set mdbase=%mdbase% && set openfile=%openfile% && set donefile=%donefile%
if "%~4"=="FIRSTRUN" && set /A mdfile=%mdbase%+30 && set firstrun=Y ! set /A mdfile=%mdbase%+31
if "%~4"=="FIRSTRUN" && set vars2mem=0 ! set vars2mem=1
cat --locate=\x00\x00 --length=2 (md)%mdfile%+1 > nul || set /A mdfile=%mdfile%+1 && set /a vars2mem=%vars2mem%+1 &; cat --locate=\x00\x00 --length=2 (md)%mdfile%+1 > nul || set /A mdfile=%mdfile%+1 && set /a vars2mem=%vars2mem%+1 &; cat --locate=\x00\x00 --length=2 (md)%mdfile%+1 > nul || set /A mdfile=%mdfile%+1 && set /a vars2mem=%vars2mem%+1 &; cat --locate=\x00\x00 --length=2 (md)%mdfile%+1 > nul || set /A mdfile=%mdfile%+1 && set /a vars2mem=%vars2mem%+1 &; cat --locate=\x00\x00 --length=2 (md)%mdfile%+1 > nul || set /A mdfile=%mdfile%+1 && set /a vars2mem=%vars2mem%+1 &; cat --locate=\x00\x00 --length=2 (md)%mdfile%+1 > nul || set /A mdfile=%mdfile%+1 && set /a vars2mem=%vars2mem%+1 &; cat --locate=\x00\x00 --length=2 (md)%mdfile%+1 > nul || set /A mdfile=%mdfile%+1 && set /a vars2mem=%vars2mem%+1 &; cat --locate=\x00\x00 --length=2 (md)%mdfile%+1 > nul || set /A mdfile=%mdfile%+1 && set /a vars2mem=%vars2mem%+1 &; cat --locate=\x00\x00 --length=2 (md)%mdfile%+1 > nul || set /A mdfile=%mdfile%+1 && set /a vars2mem=%vars2mem%+1
if %vars2mem%<=9 && if not %openfile%>=9 && set /a openfile=%vars2mem%
if %vars2mem%>=10 && if %donefile%>=9 && set /A mdfile=%mdbase%+31 && set vars2mem=1
if %vars2mem%>=10 && if not %donefile%>=9 && set /A mdfile=%mdbase%+31+%donefile% && set /a vars2mem=%donefile%+1
errorcheck off
cat --locate=!BAT --length=4 (md)%mdfile%+1 > nul && call (md)%mdfile%+1 &; if exist file &; fat del (fd99)/%file% > nul && fat del (fd99)/lastsave/%file% > nul && set file= ! set file=
echo !BAT > (md)%mdfile%+1
echo goto :skip >> (md)%mdfile%+1
echo "call echo %^textcol% %^highcol%%%vars2mem%%%^textcol% %~1%~2%~3" >> (md)%mdfile%+1
echo :skip >> (md)%mdfile%+1
echo set "device=%~1" >> (md)%mdfile%+1
echo set "path=%~2" >> (md)%mdfile%+1
echo set "file=%~3" >> (md)%mdfile%+1
if %firstrun%==Y &; set /A mdcheck=%mdbase%+31 &; cat --locate=!BAT (md)%mdcheck%+9 > nul &; set /a vars2mem=%@retval% &; set openfile=%vars2mem%
if not %firstrun%==Y && if %vars2mem%>=1 && set /a donefile=%vars2mem% ! if not exist donefile && if %vars2mem%>=1 && set /a donefile=%vars2mem% ! if not %donefile%<=%openfile% && set donefile=%openfile%
endlocal && set openfile=%openfile% && set donefile=%donefile% && goto :eof

:NHistory
#-# WATCH: do not use 'set /p' before, unless message-part is exactly 6 chars (like 'grub> ') - so 'set /p "var=text> "' is GOOD (without single quotes)!
setlocal && set * && set highcol=%highcol%
raw cat --skip=0x340000 --locate=\x00\x00\x00\x00\x00\x92\x3E\x00 (md)0x0+0x1D00 > nul &; set /A ZHistory=%?%
set /A SHistory=%ZHistory%+0x8
read %SHistory% > nul &; set /A read=%@retval%
if not %read%==0x6 && set /A SHistory=%SHistory%+0x4 &; read %SHistory% > nul &; set /A read=%@retval%
if %read%==0x6 && set /A NHistory=%SHistory%+0x10
if not %read%==0x6 && set NHistory=
if not exist NHistory && call :cleanline "1" && echo -P:0101 -n num_history not found, updating not possible && echo -n %highcol%Press a key to continue... && pause
if exist NHistory && set /A mdnhist=0x3000+45 && set /A mdhistbk=0x3000+46 &; raw dd if=(md)0x0+0x1D00 of=(md)%mdnhist%+1 bs=1 count=4 skip=%NHistory% > nul && raw dd if=(md)0x0+0x1F63 of=(md)%mdhistbk%+16 bs=1 count=8000 skip=0x3EA4C0 > nul
endlocal && set NHistory=%NHistory% && goto :eof

:validate
setlocal && set * && set col=%col% && set highcol=%highcol% && set lowcol=%lowcol% && set vmax=%vmax% && set repaired=%repaired% && set EOL=%EOL% && set mdread=%mdread% && set callsect=%callsect% && set device=%device% && set "path=%path%" && set "file=%file%"
set "path=%path%" &; if %@retval%>=31 && set "msgpath=%path:~0,14%..%path:~-14,14%" ! set "msgpath=%path%"
if not /i "%~1"=="silent" && if exist file && call :header "VALIDATE" && call Fn.5 0 3
raw cat --locate=\x09 (md)%mdread%+%callsect% > nul && endlocal && set "message1=echo -n %highcol%%%device%%%msgpath%%%file% contains horizontal TAB" && set repair=N && goto :eof
raw cat --locate=\x11 (md)%mdread%+%callsect% > nul && endlocal && set "message1=echo -n %highcol%%%device%%%msgpath%%%file% contains vertical TAB" && set repair=N && goto :eof
set numfind=1 && set num0A=0 && set num0D0A=0 && set num0D=0 && set last0A=0 && set last0D=0 && set first00=0 && set room00=0
raw cat --locate=\x0A (md)%mdread%+%callsect% > nul &; set /a last0A=%?%
raw cat --locate=\x0D (md)%mdread%+%callsect% > nul &; set /a last0D=%?%
raw cat --locate=\x00 --number=1 (md)%mdread%+%callsect% > nul &; set /a first00=%?% &; set /a room00=0x3FDFF-%first00%
if %last0A%>=%first00% && endlocal && set "message1=echo -n %highcol%%%device%%%msgpath%%%file% not a normal text-file" && set repair=N && goto :eof
if %last0D%>=%first00% && endlocal && set "message1=echo -n %highcol%%%device%%%msgpath%%%file% not a normal text-file" && set repair=N && goto :eof
cat --locate=\x0D\x0A (md)%mdread%+%callsect% > nul &; set /a num0D0A=%@retval%
cat --locate=\x0A (md)%mdread%+%callsect% > nul &; set /a num0A=%@retval%
cat --locate=\x0D (md)%mdread%+%callsect% > nul &; set /a num0D=%@retval%
if not %num0A%<=%num0D0A% && set /a numdif0A=%num0A%-%num0D0A% &; if not %numdif0A%<=%room00% && endlocal && set "message1=echo -n %highcol%Abort: filesize %file00% Bytes just too big for processing in memory" && set repair=N && goto :eof ! set numdif0A=
if not %num0D%<=%num0D0A% && set /a numdif0D=%num0D%-%num0D0A% &; if not %numdif0D%<=%room00% && endlocal && set "message1=echo -n %highcol%Abort: filesize %file00% Bytes just too big for processing in memory" && set repair=N && goto :eof ! set numdif0D=
if not exist repaired && if %num0D0A%>=1 && if %num0A%>=1 && if %num0D%==%num0A% && if %num0D0A%==%num0A% && endlocal && set EOL=\x0D\x0A && goto :eof
if %repaired%==Y && if not exist EOL && if not /i "%~1"=="silent" && call :cleanline "1" && echo -P:0101 -n Repaired: number of Line Feeds=%num0A% Carriage Returns=%num0D% CR+LF=%num0D0A% && pause --wait=3
if %num0D0A%==0 && if not %num0D%<=%num0A% && set EOL=\x0D
if %num0D0A%==0 && if not %num0A%<=%num0D% && set EOL=\x0A
if not %num0A%==%num0D% && call :cleanline "1" && echo -P:0101 -n Number of Line Feeds=%num0A% Carriage Returns=%num0D% CR+LF=%num0D0A%
if not %num0A%==%num0D% && set "message1=echo -n %highcol%%%device%%%msgpath%%%file% unsupported text-file"
if %num0A%==0 && if %num0D%==0 && endlocal && set "message1=echo -n %highcol%%%device%%%msgpath%%%file% has no supported EOL" && set repair=N && goto :eof
if %num0D0A%>=1 && if %num0A%>=1 && if %num0D%==%num0A% && if %num0D0A%==%num0A% && endlocal && set repaired=%repaired% && set EOL=%EOL% && set "message1=echo -n %highcol%%%device%%%msgpath%%%file% repaired to UNTITLED" && goto :eof
if exist message1 && if not exist EOL && call :Fn.5 3 24 &; %message1%
if exist message1 && if exist EOL && set repair=Y && set message1=
if exist message1 && if not exist EOL && if /i "%~1"=="silent" && set EOL=\x0D\x0A && set repair=Y
if exist message1 && if not exist EOL && if not /i "%~1"=="silent" && set keycode= && call :cleanline "1" && set EOL=\x0D\x0A && set repair=zyx &; call :Fn.5 1 1 &; echo -n Repair? && echo -n -e $[] %highcol%N$[]o %highcol%Y$[]es && call :Fn.5 0 99 && pause --wait=180 --test-key &; set /A keycode=%@retval% &; call :keycodes "%keycode%" "repair" &; set keycode= && call :cleanline "1" &; if %repair%==zyx && set repair=N ! if not %repair%==Y && set repair=N
if %repair%==N && call :cleanline "1" && call :footer "call Fn.5 1 1" && endlocal && set repair=N && set "message1=echo -n No repair - exit" && goto :eof
if %repair%==Y && set repaired= &; call :repair &; if %repaired%==Y && if not exist EOL && set EOL=\x0D\x0A
if exist message1 && if %repaired%==Y && endlocal && set repaired=%repaired% && set EOL=%EOL% && goto :validate
if exist message1 && if not %repair%==Y && if not %repair%==N && endlocal && goto :validate
if not exist message1 && endlocal && set repair=%repair% && set EOL=%EOL%
goto :eof

:repair
setlocal
set /A mdbuf=%callsect% + 1 * 6 + %mdread% * 0x200 && set /A mdbuflen=256 * 0x400 &; call Fn.24 %mdbuf% 0x00 %mdbuflen%
set /A mdwork=%mdread%+%callsect% &; echo -n > (md)%mdwork%+1 && set mdwork= && set /A worksect=%callsect%+1
if %num0A%==0 && if not %num0D%==0 && cat --locate=\x0D --replace=\x0A (md)%mdread%+%callsect% > nul &; set /a num0A=%@retval% && set num0D=0
if not %num0D%<=%num0A% && if not %num0D%<=%num0D0A% && set counter=1 && set address=0 &; call :loop0D &; set counter= && set address=
set numspace= && set skip=0
cat --locate=\x0A (md)%mdread%+%callsect% > nul
set numspace=%@retval%
set /a numspace=%numspace%
if %numspace%==0 && endlocal && goto :eof
:loop0D0A
if %numspace%==0 && endlocal && set repaired=Y && goto :eof
cat --skip=%skip% --locate=\x0A --number=1 (md)%mdread%+%callsect% > nul
set skip=%?%
set /A skip=%skip%
if %skip%>=1 && set /A skipmin1=%skip%-1 ! set skipmin1=0
if %skipmin1%>=1 && cat --skip=%skipmin1% --locate=\x0D --length=1 (md)%mdread%+%callsect% > nul
set skipmin1=%?%
set /A skipmin1=%skipmin1%
if %skipmin1%>=1 && set /A skipmin1=%skipmin1%+1
if %skip%>=1 && if %skip%==%skipmin1% && set /a numspace=%numspace%-1 && set /A skip=%skip%+1 && goto :loop0D0A
set /A seek=%skip%+1
raw dd if=(md)%mdread%+%callsect% of=(md)%mdread%+%worksect% bs=1 skip=%skip% seek=%seek% buf=%mdbuf% buflen=%mdbuflen% > nul
cat --skip=%skip% --locate=\x0A --replace=\x0D --number=1 (md)%mdread%+%callsect% > nul
set /a numspace=%numspace%-1
if %numspace%==0 && endlocal && set repaired=Y && goto :eof
set /A skip=%skip%+2
goto :loop0D0A

:loop0D
cat --skip=%address% --locate=\x0D --number=1 (md)%mdread%+%callsect% > nul &; set /A address=%?% &; if exist address && cat --skip=%address% --locate=\x0D\x0A --length=2 (md)%mdread%+%callsect% > nul || cat --skip=%address% --locate=\x0D --replace=\x0A --number=1 (md)%mdread%+%callsect% > nul
if %counter%==%num0D% && goto :eof
set /a counter=%counter%+1 && set /A address=%address%+1 && goto :loop0D

:editor
set edit= && set write= && set oldgoto= && set lastline= && set showline= && set stopline= && set leftline= && set message= && if %menu%==W && set gotoline=
:edit
if not %edit%==XX && if not %edit%==W && if not %menu%==W && if exist oldgoto && set gotoline=%oldgoto% && set oldgoto=
set close= && set newline= && set cursor= && set lastline= && set gotonext=
if not exist gotoline && set skip=0
if %gotoline%<=1 && set skip=0
cat --locate=\x0D\x0A (md)%mdread%+%callsect% > nul &; set /a lastline=%@retval%
if not exist lastline && set lastline=0
if %lastline%==0 && if not %edit%==XX && if not %write%==XX && set menu=W && set edit= && set write= && set gotoline= && set showline= && set stopline= && set leftline= && set message=
if not exist showline && set showline=0
if not %edit%==I if not %edit%==A if not %edit%==W || set /a lastline=%lastline%+1
if not exist showline && set showline=0
if %menu%==E && if not exist gotoline && set gotoline=1 && set stopline=0 && set firstrun=Y
if not %firstrun%==Y && if %menu%==E && if exist gotoline && if not %gotoline%>=1 && set gotoline=1
if not %firstrun%==Y && if %menu%==W && if not exist gotoline && set /a gotoline=%lastline%+1 && set stopline=0 && set firstrun=Y
#STRANGELINE??#if %menu%==W && if not exist gotoline && set /a gotoline=%lastline%+1 && set stopline=0 && set goto :firstrun
if not %firstrun%==Y && if %menu%==W && if not %newline%==M && set /a gotoline=%lastline%+1
set firstrun=
if not %showline%>=0 && set showline=0
if not %stopline%>=0 && set stopline=0
#OLD_see_line331+(directly after :editcall)#if not %edit%==XX if not %write%==XX || set oldgoto=%gotoline% && set gotoline=%stopline%
if not %menu%==W && if not %gotoline%<=%lastline% && set gotoline=%lastline%
if not %loopedit%==XX && if not %edit%==V && if not %edit%==B && if not %edit%==T && if not %edit%==U && if not %edit%==H && if not %edit%==L && call :cleanline "3" "23" && set cleared=Y ! if not %edit%==V && call :cleanline "3" "23" && set cleared=Y
if %edit%==V && if %gotoline%<=%showline% && call :cleanline "3" "23" && set cleared=Y
if %edit%==V && if not %gotoline%<=%stopline% && call :cleanline "3" "23" && set cleared=Y
if %cleared%==Y && if not %loopedit%==XX && if %menu%==E && if not %edit%==W && call :header "EDIT" && set cleared=
if %cleared%==Y && if not %loopedit%==XX && if %menu%==E && if %edit%==W && call :header "WRITE" && set cleared=
if %cleared%==Y && if not %loopedit%==XX && if %menu%==W && call :header "WRITE" && set cleared=
call Fn.5 0 3
if not %edit%==V && if not %edit%==XX && if not %stopline%<=%showline% && set stopline=%showline%
set linenum=%showline%
if %showline%==0 && set skipshow=0
if %showline%>=1 && cat --locate=\x0D\x0A --number=%showline% (md)%mdread%+%callsect% > nul &; set /A skipshow=%?%
cat --skip=%skipshow% --locate=\x0D\x0A (md)%mdread%+%callsect% | call :editcall
if not %edit%==XX |; cat --locate=\x0D\x0A (md)%mdread%+%callsect% > nul &; set EOLlen=%?% &; if exist EOLlen && if %EOLlen%==2 && set menu= && set edit= && set write= && set changed= && set oldgoto=%gotoline% && set gotoline= && set lastline= && set showline= && set stopline= && set leftline= && set message= && call :cleanline "3" "23" && call :Fn.5 0 3 && goto :eof
if not %edit%==XX if not %write%==XX |; set oldgoto=%gotoline% && set gotonext= && set linenum=%gotoline% &; if %linenum%<=9 && set echonum=000%linenum% ! if %linenum%<=99 && set echonum=00%linenum% ! if %linenum%<=999 && set echonum=0%linenum% ! if %linenum%<=9999 && set echonum=%linenum% ! set echonum=%linenum:~-4,4% &; call :Fn.5 0 %cursor% && echo -n $[]%echonum%
set line1= && set EOLlen=
if %menu%==E && if not %edit%==W && set write= && if exist gotoline && if exist gotonext && if %gotonext%==G && goto :edit
if %menu%==E && if %edit%==W && if not %newline%==E && set write= && goto :edit
if %menu%==E && if %edit%==W && if %newline%==E && set write= && set edit= && goto :edit
if %menu%==W && if %newline%==W && set edit= && if exist gotoline && if exist gotonext && if %gotonext%==G && goto :edit
if %menu%==W && if %newline%==M && set edit= && if exist gotoline && if exist gotonext && if %gotonext%==G && goto :edit
if %menu%==W && if %newline%==E && set write= && set menu=E && if exist gotoline && if exist gotonext && if %gotonext%==G && goto :edit
if %menu%==W && if %newline%==R && set edit= && set write= && set menu=R && if exist gotoline && if exist gotonext && if %gotonext%==L && set menu=R && goto :edit
call :footer "call Fn.5 0 24"
set edit= && set write= && set even= && set close= && set echonum= && set newline= && set gotonext= && set lastline= && set numnext= && set skip= && set length= && set line1= && set linelen= && set linenum= && set length= && set offset= && set ofskip= && set oflength=
goto :eof

:editcall
if "%1"=="" && if %close%==1 && if %write%==M && set write=XX && set close= && set gotonext= && goto :eof
if "%1"=="" && if %close%==1 && if %edit%==M && set edit=XX && set close= && set gotonext= && goto :eof
if "%1"=="" && if %close%==1 && if not %write%==M && if not %edit%==M && set close= && goto :eof
set length= && set line1= && set echonum= && set even=
if %linenum%==0 && set /A skip=0 && set skipshow=
if exist skipshow && if %linenum%==%showline% && set /A skip=0x%1+0x2 && set skipshow= && shift
if not "%1"=="" && set /A length=0x%1
if not "%1"=="" && set /A length=%length%+0x2-%skip%
set /a linenum=%linenum%+1
if %close%==1 && if not %write%==M && if not %edit%==M && set close= && set filelen= && goto :eof
if %close%==1 && if %write%==M && set write=XX && set close= && set filelen= && set gotonext= && goto :eof
if %close%==1 && if %edit%==M && set edit=XX && set close= && set filelen= && set gotonext= && goto :eof
if not %close%==1 && if %menu%==E && if not %gotoline%<=%stopline% && if %linenum%<=%lastline% && set /a showline=%stopline%
if not %close%==1 && if %menu%==E && if %showline%==%stopline% && call :stopline %2 %3 %4 %5 %6 %7 %8 %9
if not %close%==1 && if %menu%==E && if %linenum%<=%showline% && goto :noedit
if not %close%==1 && if %menu%==E && if not %gotoline%<=%showline% && if not %gotoline%<=%stopline% && goto :noedit
if not %close%==1 && if %menu%==W && if not %gotoline%<=%stopline% && if not %linenum%>=%lastline% && set /a showline=%stopline%
if not %close%==1 && if %menu%==W && if %showline%==%stopline% && call :stopline %2 %3 %4 %5 %6 %7 %8 %9
if not %close%==1 && if %menu%==W && if %linenum%<=%showline% && goto :noedit
if not %close%==1 && if %menu%==W && if %linenum%==%gotoline% && goto :noread
if not %close%==1 && if %menu%==W && if not %gotoline%<=%showline% && if not %gotoline%<=%stopline% && goto :noedit
:showread
call :showline %2 %3 %4 %5 %6 %7 %8 %9
if %gotoline%==%linenum% && if %edit%==M && set /a gotoline=%linenum% && set close=1 && set gotonext=G && goto :noedit
if %edit%==W && if %newline%==E && set /a gotoline=%linenum%
if %edit%==W && if %noread%==Y && if %close%==1 && if %gotonext%==G && goto :eof
if %noread%==Y && set noread= && goto :noedit
:noread
if %loopedit%==XX && if %linenum%>=%gotoline% && set loopedit= && set edit=M && set gotonext=G && set close=1 && goto :noedit
if %menu%==E && if not %edit%==XX && if not %edit%==W && if exist gotoline && if %linenum%<=%lastline% && if %linenum%>=%gotoline% &; call :editmenu &; goto :noedit
if %menu%==W && if not %write%==XX && if not %edit%==XX && if exist gotoline && if %linenum%==%gotoline% && call :writeline &; goto :noedit
:noedit
if %write%==XX && if %linenum%==%gotoline% && set gotoline= && set gotonext= && set write=M && set /a close=1 && goto :menuquit
if %edit%==XX && if %linenum%==%stopline% && set gotonext= && set edit=M && set /a close=1 && goto :menuquit
if %write%==M && set write=XX
if %edit%==M && set edit=XX
:menuquit
if %menu%==E && if not %edit%==M && if not %edit%==XX && if %close%==1 && if %gotonext%==G && set close= && goto :eof
if %menu%==W && if not %write%==M && if not %write%==XX && if %close%==1 && if %gotonext%==G && set close= && goto :eof
if %menu%==W && if not %write%==M && if not %write%==XX && if %close%==1 && if %gotonext%==L && set close= && goto :eof
if %linenum%<=%lastline% && if not "%1"=="" && set ofskip= && set oflength= &; set /A ofskip=%skip% && set /A skip=%skip%+%length% &; set /A oflength=%length%
shift
goto :editcall

:stopline
#-# stopline is last full line on a page; showline is last stopline - or 0 (never 'showed'); leftline: number of lines left to print part of last line. Page in textmode: 21 lines * 74 chars = 1554 chars
setlocal && set * && set col=%col% && set highcol=%highcol% && set lowcol=%lowcol% && set vmax=%vmax% && set menu=%menu% && set edit=%edit% && set write=%write% && set linenum=%linenum% && set showline=%showline% && set lastline=%lastline% && set length=%length% && set skip=%skip% && set device=%device% && set "path=%path%" && set "file=%file%" && set gotoline=%gotoline%
set /a showdiff=%linenum%-%showline%
if not %showdiff%==1 && endlocal && goto :eof
set pagelen=1554 && set stopline=0 && set leftline=21 && set usedline=0 && set /a length=%length%-2 && set /a skip=%skip%
if not %edit%==W if not %edit%==A if not %edit%==I || set /a pagelen=%pagelen%-74 && set /a leftline=%leftline%-1
set /a skip=%skip%+%length%+2
call :roomline
:calcstop
if not "%1"=="" && set length=0x%1
if not "%1"=="" && set /a length=%length%
if not "%1"=="" && set /a length=%length%-%skip%
if not "%1"=="" && set /a skip=%skip%+%length%+2
if not "%1"=="" && call :roomline
if not "%1"=="" && if %pagelen%>=74 && shift && goto :calcstop
if "%1"=="" && if %leftline%>=1 &; set /a stopline=%stopline%+%leftline%
if not %edit%==W if not %edit%==A if not %edit%==I || set /a stopline=%stopline%+1 &; if not %leftline%>=0 && set leftline=0
endlocal && set stopline=%stopline% && set leftline=%leftline%
set /a stopline=%stopline%+%showline% &; if not %edit%==V && if not %edit%==W && if %gotoline%<=%stopline% && call :cleanline "3" "23" && call Fn.5 0 3
goto :eof

:roomline
if not %length%<=1554 && set length=45 && if not %edit%==F if not %edit%==N || set length=58
if not %length%<=74 && if %length%<=1554 && set /a pagelen=%pagelen%-74 && set /a usedline=%usedline%+1 && set /a length=%length%-74 && goto :roomline
if %length%>=0 && if %length%<=74 && set /a pagelen=%pagelen%-74 && set /a usedline=%usedline%+1
if %pagelen%>=0 && set /a stopline=%stopline%+1 && set /a leftline=%leftline%-%usedline%
set usedline=0
goto :eof

:showline
setlocal
if not %linenum%<=%lastline% && goto :noshowmd
set numcolor=%lowcol% && set addcolor=%lowcol% &; if %col:~0,1%==8 && set nocol=$[0x70] ! if %col:~0,1%==6 && set nocol=$[0x44] ! set nocol=$[0x%col:~0,1%%0]
if %menu%==E && if not %edit%==M && if not %edit%==XX && if exist gotoline && if %linenum%==%gotoline% && set numcolor=%highcol% && set addcolor=%highcol%
if %menu%==E && if not %edit%==M && if not %edit%==XX && if exist selrange &; checkrange %selrange% calc %linenum% && set addcolor=%highcol% && set numcolor=%highcol%
if %menu%==E && if not %edit%==M && if not %edit%==XX && if exist selrange &; checkrange %selrange% calc %linenum% || set numcolor=%lowcol% && set addcolor=%lowcol%
#-# Works in combination with extra tweaks in :edit en :noshowmd; special routine if %edit%==A/I and I: next full line is >=stopline; II: next part of line is >=stopline
if %menu%==E &; if not %edit%==M if not %edit%==XX || if exist gotoline && if %linenum%==%gotoline% && set numcolor=$[] && set addcolor=$[]
if %linenum%<=%lastline% &; if %linenum%<=9 && set echonum=000%linenum% ! if %linenum%<=99 && set echonum=00%linenum% ! if %linenum%<=999 && set echonum=0%linenum% ! if %linenum%<=9999 && set echonum=%linenum% ! set echonum=%linenum:~-4,4%
if %gotoline%==%linenum% &; call Fn.4 &; set /a cursor=%@retval%>>8
if %gotoline%==%linenum% && if not %gotoline%>=%stopline% && if %edit%==I && echo -e %numcolor%%%echonum%%%nocol%\x20 && set /a linenum=%linenum%+1 && set /a leftlen=23 - %cursor% * 74 && set /a skip=%skip% && set /a length=%length%-2 &; if %leftline%>=1 && if not %linenum%<=%stopline% && if not %length%<=%leftlen% && set length=%leftlen% ! set length=%length% &; if %leftline%>=1 && if not %linenum%<=%stopline% && call :showmore && goto :nomore ! if %linenum%>=%stopline% && call :showmore && set /a linenum=%linenum%+1 && set /a skip=%skip%+%length%+2 && goto :noshowmd ! call :showmore && goto :noshowmd
if %gotoline%==%linenum% && if %gotoline%>=%stopline% && if %edit%==I && echo -e %numcolor%%%echonum%%%nocol%\x20 && set /a linenum=%linenum%+1 && set /a length=%length%-2 && goto :noshowmd
if %gotoline%==%linenum% && if %gotoline%==%lastline% && if %edit%==A && echo -e %numcolor%%%echonum%%%nocol%\x20 && goto :nomore
if %gotoline%==%linenum% && if not %gotoline%>=%stopline% && if %edit%==A && echo -e %numcolor%%%echonum%%%nocol%\x20 && set /a linenum=%linenum%+1 && set /a leftlen=23 - %cursor% * 74 && set /a skip=%skip% && set /a length=%length%-2 &; if %leftline%>=1 && if not %linenum%<=%stopline% && if not %length%<=%leftlen% && set length=%leftlen% ! set length=%length% &; if %leftline%>=1 && if not %linenum%<=%stopline% && call :showmore && goto :nomore ! if %linenum%>=%stopline% && call :showmore && set /a linenum=%linenum%+1 && set /a skip=%skip%+%length%+2 && goto :noshowmd ! call :showmore && goto :noshowmd
if %gotoline%==%linenum% && if %gotoline%>=%stopline% && if %edit%==A && echo -e %numcolor%%%echonum%%%nocol%\x20 && set /a linenum=%linenum%+1 && set /a length=%length%-2 && goto :noshowmd
if %gotoline%==%linenum% && if not %gotoline%>=%stopline% && if %edit%==W && echo -e %numcolor%%%echonum%%%nocol%\x20 && if not %gotoline%>=%stopline% && set /a linenum=%linenum%+1 && set /a length=%length%-2 && call :showmore && goto :noshowmd
if %gotoline%==%linenum% && if %gotoline%>=%stopline% && if %edit%==W && echo -e %numcolor%%%echonum%%%nocol%\x20 && set /a linenum=%linenum%+1 && set /a length=%length%-2 && goto :noshowmd
setlocal && set length=%length%
set /A length=%length%-2 && set shownmd=0
if not %edit%==F if not %edit%==N || if not %menu%==W && if exist STRING && if %gotoline%==%linenum% && if exist pos16 && goto :showfind
if not %length%<=1554 && echo -n %addcolor%%%echonum%%%nocol% %addcolor%Line is above 1554 chars: cannot be displayed - Edit: first 436 chars && endlocal && set numcolor=%numcolor% && set cursor=%cursor% && echo && goto :noshowmd
if %length%<=74 && echo -n -e %addcolor%%%echonum%%%nocol%\x20 && cat --skip=%skip% --length=%length% (md)%mdread%+%callsect% && endlocal && set numcolor=%numcolor% && set cursor=%cursor% && echo && goto :noshowmd
echo -n -e %numcolor%%%echonum%%%nocol%\x20 && cat --skip=%skip% --length=74 (md)%mdread%+%callsect% && set /a lastlen1=%length%-74 &; if %lastlen1%<=0 && endlocal && set /a shownmd=%shownmd% && set numcolor=%numcolor% && set cursor=%cursor% && echo && goto :noshowmd
:showloop
if %lastlen1%<=74 && set /a skip=%skip%+74 &; echo -e -n \x20\x20\x20\x20\x20\x20 && cat --skip=%skip% --length=%lastlen1% (md)%mdread%+%callsect% && endlocal && set numcolor=%numcolor% && set cursor=%cursor% && echo && goto :noshowmd
set /a skip=%skip%+74 &; echo -e -n \x20\x20\x20\x20\x20\x20 && cat --skip=%skip% --length=74 (md)%mdread%+%callsect% && set /a lastlen1=%lastlen1%-74 &; if %lastlen1%<=0 && endlocal && set numcolor=%numcolor% && set cursor=%cursor% && echo && goto :noshowmd
goto :showloop

:showfind
setlocal && set * && set col=%col% && set highcol=%highcol% && set lowcol=%lowcol% && set vmax=%vmax% && set mdread=%mdread% && set callsect=%callsect% && set skip=%skip% && set length=%length% && set pos16=%pos16% && set strinlen=%strinlen% && set numcolor=%numcolor% && set echonum=%echonum% && set nocol=%nocol%
set "prelude=echo -e -n %numcolor%%%echonum%%%nocol%\x20"
set "prelude1=echo -e -n \x20\x20\x20\x20\x20\x20"
set "prelude2=echo -e -n \x20\x20\x20\x20\x20"
set "prelude3=echo -e -n %nocol%\x20\x20\x20\20\x20"
set /a skip=%skip% && set /a length=%length% && set /a pos16=%pos16%
:loopfind
if not %length%<=1554 && echo -n %numcolor%%%echonum%%%nocol% %numcolor%Line is above 1554 chars: found string cannot be displayed && endlocal && set pos16= && echo && goto :noshowmd
if %length%<=0 && endlocal && set pos16= && echo && goto :noshowmd
set skipdif=0 && set skip1=0 && set /a skip2=%pos16% && set lastlen=0 && set lastlen1=0 && set lastlen2=0 && set /a strlen1=%strinlen% && set strlen2=0 && set strlen3=0
set /a skipdiff=%pos16%-%skip%
if %skipdiff%>=0 && if %skipdiff%<=73 && set /a lastlen1=%pos16%-%skip%
if not %length%<=74 && if %skipdiff%>=0 && if %skipdiff%<=73 && set /a lastlen2=74-%lastlen1%-%strinlen%
if not %length%<=74 && if %skipdiff%>=0 && if %skipdiff%<=73 && if not %lastlen2%>=0 && set /a strlen1=74-%lastlen1% && set lastlen2=0
if %length%<=74 && if %skipdiff%>=0 && if %skipdiff%<=73 && set /a lastlen2=%length%-%lastlen1%-%strinlen%
if %skipdiff%>=0 && if %skipdiff%<=73 && set /a skip2=%pos16%+%strinlen%
if not %strlen1%==%strinlen% && set /a strlen2=%strinlen%-%strlen1% &; if not %strlen2%<=74 && set /a strlen3=%strlen2%-74 && set strlen2=74
set cursor= &; call Fn.4 &; set /a cursor=%@retval%>>8
set /a echolen1=%lastlen1%+4
set /a echolen2=%lastlen1%+5+%strinlen%
echo -n > (md)0x222+1 && pause --wait=0 %col:~0,1% > (md)0x222+1
if not %length%<=74 && if not %skipdiff%<=73 &; %prelude% &; cat --skip=%skip% --length=74 (md)%mdread%+%callsect% && set "prelude=%prelude2%" && set /a length=%length%-74 && set /a skip=%skip%+74 && echo -e \r && goto :loopfind
if not %length%<=74 && if %skipdiff%>=0 && if %skipdiff%<=73 && if %strlen1%==%strinlen% && call :echostr %cursor% %echolen1% %echolen2% %strinlen% %pos16% %strlen1% %mdread% %callsect% &; call Fn.5 0 %cursor%
if not %length%<=74 && if %skipdiff%>=0 && if %skipdiff%<=73 && if %strlen1%==%strinlen% &; %prelude% &; cat --skip=%skip% --length=%lastlen1% (md)%mdread%+%callsect% &; call Fn.5 %echolen2% %cursor%
if not %length%<=74 && if %skipdiff%>=0 && if %skipdiff%<=73 && if %strlen1%==%strinlen% && cat --skip=%skip2% --length=%lastlen2% (md)%mdread%+%callsect% && set "prelude=%prelude1%" && set /a length=%length%-74 && set /a skip=%skip%+74 && goto :loopfind
#BADORG?#if not %length%<=74 && if %skipdiff%>=0 && if %skipdiff%<=73 && if %strlen1%==%strinlen% && cat --skip=%skip2% --length=%lastlen2% (md)%mdread%+%callsect% && set "prelude=%prelude1%" && set /a length=%length%-74 && set /a skip=%skip%+74 > nul&& echo -e \r && goto :loopfind
if %length%<=74 && if %skipdiff%>=0 && if %skipdiff%<=73 && if %strlen1%==%strinlen% && call :echostr %cursor% %echolen1% %echolen2% %strinlen% %pos16% %strlen1% %mdread% %callsect% &; call Fn.5 0 %cursor%
if %length%<=74 && if %skipdiff%>=0 && if %skipdiff%<=73 && if %strlen1%==%strinlen% &; %prelude% &; cat --skip=%skip% --length=%lastlen1% (md)%mdread%+%callsect% &; call Fn.5 %echolen2% %cursor%
if %length%<=74 && if %skipdiff%>=0 && if %skipdiff%<=73 && if %strlen1%==%strinlen% && cat --skip=%skip2% --length=%lastlen2% (md)%mdread%+%callsect% && endlocal && set pos16= && echo && goto :noshowmd
if not %length%<=74 && if %skipdiff%>=0 && if %skipdiff%<=73 && if %strlen1%>=1 && if not %strlen1%==%strinlen% && if not %strlen3%>=1 && set /a echolen2=%lastlen1%+5+%strlen1% &; call :echostr %cursor% %echolen1% %echolen2% %strinlen% %pos16% %strlen1% %mdread% %callsect% &; call Fn.5 0 %cursor%
if not %length%<=74 && if %skipdiff%>=0 && if %skipdiff%<=73 && if %strlen1%>=1 && if not %strlen1%==%strinlen% && if not %strlen3%>=1 &; %prelude% &; cat --skip=%skip% --length=%lastlen1% (md)%mdread%+%callsect% && set "prelude=%prelude3%" && set /a length=%length%-74 && set /a skip=%skip%+74 && echo -e \r
if %skipdiff%>=0 && if %skipdiff%<=73 && if %strlen2%>=1 && if not %strlen3%>=1 && set echolen1=4 && set /a posfind=%pos16%+%strlen1% && set /a echolen2=5+%strlen2% && set /a cursor=%cursor%+1 &; call :echostr %cursor% %echolen1% %echolen2% %strinlen% %posfind% %strlen2% %mdread% %callsect% &; call Fn.5 %echolen2% %cursor%
if not %length%<=74 && if %skipdiff%>=0 && if %skipdiff%<=73 && if %strlen2%>=1 && if not %strlen3%>=1 && set /a skip1=%skip%+%strlen2% && set /a lastlen=74-%strlen2% &; cat --skip=%skip1% --length=%lastlen% (md)%mdread%+%callsect% && set "prelude=%prelude2%" && set /a length=%length%-74 && set /a skip=%skip%+74 && echo -e \r && goto :loopfind
if %length%<=74 && if %skipdiff%>=0 && if %skipdiff%<=73 && if %strlen2%>=1 && if not %strlen3%>=1 && set /a skip1=%skip%+%strlen2% && set /a lastlen=%length%-%strlen2% &; cat --skip=%skip1% --length=%lastlen% (md)%mdread%+%callsect% && endlocal && set pos16= && echo && goto :noshowmd
if not %length%<=74 && if %skipdiff%>=0 && if %skipdiff%<=73 && if %strlen1%>=1 && if not %strlen1%==%strinlen% && if %strlen3%>=1 && set /a echolen2=%lastlen1%+5+%strlen1% &; call :echostr %cursor% %echolen1% %echolen2% %strinlen% %pos16% %strlen1% %mdread% %callsect% &; call Fn.5 0 %cursor%
if not %length%<=74 && if %skipdiff%>=0 && if %skipdiff%<=73 && if %strlen1%>=1 && if not %strlen1%==%strinlen% && if %strlen3%>=1 &; %prelude% &; cat --skip=%skip% --length=%lastlen1% (md)%mdread%+%callsect% && set /a length=%length%-74 && set /a skip=%skip%+74 && echo -e \r
if %skipdiff%>=0 && if %skipdiff%<=73 && if %strlen3%>=1 && set echolen1=4 && set /a posfind=%pos16%+%strlen1% && set /a echolen2=79 && set /a cursor=%cursor%+1 &; call :echostr %cursor% %echolen1% %echolen2% %strinlen% %posfind% %strlen2% %mdread% %callsect% &; set /a length=%length%-74 && set /a skip=%skip%+74 &; call Fn.5 0 %cursor%
if %skipdiff%>=0 && if %skipdiff%<=73 && if %strlen3%>=1 && set echolen1=4 && set /a posfind=%pos16%+%strlen1%+%strlen2% && set /a echolen2=5+%strlen3% && set /a cursor=%cursor%+1 &; call :echostr %cursor% %echolen1% %echolen2% %strinlen% %posfind% %strlen3% %mdread% %callsect% &; call Fn.5 %echolen2% %cursor%
if not %length%<=74 && if %skipdiff%>=0 && if %skipdiff%<=73 && if %strlen3%>=1 && set /a skip1=%skip%+%strlen3% && set /a lastlen=74-%strlen3% &; cat --skip=%skip1% --length=%lastlen% (md)%mdread%+%callsect% && set "prelude=%prelude2%" && set /a length=%length%-74 && set /a skip=%skip%+74 && echo -e \r && goto :loopfind
if %length%<=74 && if %skipdiff%>=0 && if %skipdiff%<=73 && if %strlen3%>=1 && set /a skip1=%skip%+%strlen3% && set /a lastlen=%length%-%strlen3% &; cat --skip=%skip1% --length=%lastlen% (md)%mdread%+%callsect% && endlocal && set pos16= && echo && goto :noshowmd
if not %length%<=74 && if not %skipdiff%>=0 &; %prelude% &; cat --skip=%skip% --length=74 (md)%mdread%+%callsect% && set "prelude=%prelude2%" && set /a length=%length%-74 && set /a skip=%skip%+74 && echo -e \r && goto :loopfind
if %length%<=74 && if not %skipdiff%>=0 &; %prelude% &; cat --skip=%skip% --length=%length% (md)%mdread%+%callsect% && endlocal && set pos16= && echo && goto :noshowmd
goto :loopfind

:echostr
setlocal && set *
echo -n > (md)0x221+1
raw dd if=(md)%7+%8 of=(md)0x221+1 bs=1 count=%6 skip=%5 > nul
cat (md)0x222+1 | set col=
set skip00=0 && set skip01=0
set /a h=%~2+1 &; call Fn.5 %h% %1
:echostrloop
if %col%==F && cat --skip=%skip00% --length=1 (md)0x221+1 | echo -n $[0x0F] ! if %col%==E && cat --skip=%skip00% --length=1 (md)0x221+1 | echo -n $[0x4E] ! cat --skip=%skip00% --length=1 (md)0x221+1 | echo -n $[0xF%%col%]
set /a skip00=%skip00%+1
if %skip00%<=%~6 && goto :echostrloop
call Fn.5 5 %1
endlocal && goto :eof

:noshowmd
if %menu%==W && goto :eof
if %menu%==E && if not %edit%==XX && if not exist selrange && if not "%numcolor%"=="%highcol%" && goto :nomore
if %menu%==E && if not %edit%==XX && if exist selrange && if not %linenum%==%gotoline% && goto :nomore
#-# works in combination with extra tweaks in :edit en :showline
if %menu%==E && if %edit%==XX && if not "%numcolor%"=="$[]" && goto :nomore
if %menu%==E && if %linenum%>=%lastline% && goto :nomore
#-# solution for strange new page, DONE: check leftline-routine
if %menu%==E && if %edit%==W && set /a leftmore=%stopline%-%gotoline%
#-# menu=R/E => leftmore=stopline-gotoline-goto :copymore-call :showmore-leftmore=0-goto :copyback-leftline-leftlen-length-call :showmore-goto :findleft-leftline=0- & A/I/W and F/N possibly separate or combinate? & with edit=F and edit=N must first: skip+2 & NOTGOOD!: if %edit%==N && if not exist numnext && set edit=
if %menu%==E && if not %edit%==A && if not %edit%==I && if not %edit%==W && if not %edit%==F && if not %edit%==N && setlocal && set /a leftmore=%stopline%-%gotoline% &; if %leftmore%>=1 && set /a skip=%skip%+%length% && goto :copymore
if %menu%==E && if %edit%==A && setlocal && set /a leftmore=%stopline%-%gotoline%-1 &; if %leftmore%>=1 && set /a skip=%skip%+%length%+2 && goto :copymore
if %menu%==E && if %edit%==I && setlocal && set /a leftmore=%stopline%-%gotoline%-1 &; if %leftmore%>=1 && set /a skip=%skip%+%length%+2 && goto :copymore
if %menu%==E && if %edit%==W && setlocal && set /a leftmore=%stopline%-%gotoline%-1 &; if %leftmore%>=1 && set /a skip=%skip%+%length%+2 && goto :copymore
if %menu%==E && if %edit%==F && setlocal && set /a linenum=%linenum% && set /a leftmore=%stopline%-%gotoline% &; if %leftmore%>=1 && set /a skip=%skip%+%length%+2 && goto :copymore
if %menu%==E && if %edit%==N && setlocal && set /a linenum=%linenum% && set /a leftmore=%stopline%-%gotoline% &; if %leftmore%>=1 && set /a skip=%skip%+%length%+2 && goto :copymore
:copyback
if %menu%==E && if %leftline%<=0 && endlocal && set leftmore=%leftmore% && goto :nomore
if not %edit%==W && if not %edit%==A && if not %edit%==I && if not %edit%==F && if not %edit%==N && if %stopline%==%gotoline% && set /a skip=%skip%-2
if %edit%==I && set /a leftmore=%stopline%-%gotoline%-1 &; if not %leftmore%>=1 && set /a skip=%skip%-%length%-2 && set /a linenum=%linenum%-1
if %edit%==A && set /a leftmore=%stopline%-%gotoline%-1 &; if not %leftmore%>=1 && set /a skip=%skip%-%length%-2 && set /a linenum=%linenum%-1
if %edit%==W && set /a leftmore=%stopline%-%gotoline%-1 &; if not %leftmore%>=1 && set /a skip=%skip%-%length%-2 && set /a linenum=%linenum%-1
:findleft
set /a leftlen=74 * %leftline%
set /a skip=%skip%+%length%+2
if not "%1"=="" && set length=0x%1
if not "%1"=="" && set /a length=%length%
if not "%1"=="" && set /a length=%length%-%skip%
if %length%<=%leftlen% && set /a leftlen=%leftlen%-%length% &; if %leftlen%>=74 && set /a leftline=%leftlen%/74 ! set leftline=0
if not %length%<=%leftlen% && set /a length=%leftlen% && set leftline=0
if not "%1"=="" && if not %linenum%>=%lastline% && set /a linenum=%linenum%+1
if not "%1"=="" && if %menu%==E && call :showmore
if not "%1"=="" && if %menu%==E && if %leftline%>=1 && set /a leftline=%leftline%-1 && shift && goto :findleft
if %menu%==E && endlocal && set leftmore=%leftmore% && goto :nomore

:copymore
set /a leftmore=%leftmore%-1
if not "%1"=="" && set length=0x%1
if not "%1"=="" && set /a length=%length%
if not "%1"=="" && set /a length=%length%-%skip%
if not %linenum%>=%lastline% && set /a linenum=%linenum%+1
if not "%1"=="" && if %menu%==E && if %linenum%<=%lastline% && call :showmore
if not %linenum%>=%lastline% && if %leftmore%>=1 && shift && set /a skip=%skip%+%length%+2 && goto :copymore
shift
goto :copyback

:showmore
setlocal
set numcolor=%lowcol%
if %menu%==E && if exist selrange &; checkrange %selrange% calc %linenum% && set numcolor=%highcol%
if %linenum%<=9 && set echonum=000%linenum% ! if %linenum%<=99 && set echonum=00%linenum% ! if %linenum%<=999 && set echonum=0%linenum% ! if %linenum%<=9999 && set echonum=%linenum% ! set echonum=%linenum:~-4,4%
if not %length%<=1554 && echo -n %numcolor%%%echonum%%%nocol% %numcolor%Line is above 1554 chars: cannot be displayed - Edit: first 436 chars && endlocal && set leftmore=%leftmore% && echo && goto :eof
if %menu%==E && if %length%<=74 && echo -n -e %numcolor%%%echonum%%%nocol%\x20 && cat --skip=%skip% --length=%length% (md)%mdread%+%callsect% && endlocal && set leftmore=%leftmore% && echo && goto :eof
if %menu%==E && echo -n -e %numcolor%%%echonum%%%nocol%\x20 && cat --skip=%skip% --length=74 (md)%mdread%+%callsect% && set /a lastlen1=%length%-74 &; if %lastlen1%<=0 && endlocal && set leftmore=%leftmore% && echo && goto :eof
:loopmore
if %menu%==E && if %lastlen1%<=74 && set /a skip=%skip%+74 &; echo -e -n \x20\x20\x20\x20\x20\x20 && cat --skip=%skip% --length=%lastlen1% (md)%mdread%+%callsect% && endlocal && set leftmore=%leftmore% && echo && goto :eof
if %menu%==E && set /a skip=%skip%+74 &; echo -e -n \x20\x20\x20\x20\x20\x20 && cat --skip=%skip% --length=74 (md)%mdread%+%callsect% && set /a lastlen1=%lastlen1%-74 &; if %lastlen1%<=0 && endlocal && set leftmore=%leftmore% && echo && goto :eof
goto :loopmore

:nomore
endlocal && set leftline=%leftline% && set cursor=%cursor%
if %gotoline%==%linenum% && if %edit%==E && call :subst &; set noread=Y && set close=1 && set gotonext=G && call :cleanline "3" "23" &; call :header "EDIT" &; if not %edit%==M && set edit=V && set stopline=%showline%
if %gotoline%==%linenum% && if %edit%==I && call :insert &; set noread=Y && set close=1 && set gotonext=G && call :cleanline "3" "23" && call :header "EDIT" && if not %edit%==M && set edit=V && set stopline=%showline%
if %gotoline%==%linenum% && if %edit%==A && call :add &; set noread=Y && set close=1 && set gotonext=G && call :cleanline "3" "23" && call :header "EDIT" && if not %edit%==M && set edit=V && set stopline=%showline%
if %gotoline%==%linenum% && if %edit%==W && call :writeline &; set noread=Y && set close=1 && set gotonext=G && if not %newline%==E && set /a gotoline=%linenum%+1 && set stopline=%showline%
if %gotoline%==%linenum% && if exist STRING && if %numnext%==0 && set numnext=
set line1=
goto :eof

:pageup
setlocal && set * && set showline=%showline% && set mdread=%mdread% && set callsect=%callsect%
set /a linenum=%showline%
set upline=0 && set leftline=21 && set pagelen=1554 && set usedline=0
if %linenum%>=1 && cat --locate=\x0D\x0A --number=%linenum% (md)%mdread%+%callsect% > nul &; set /a skipA=%?%
if %linenum%>=1 && set /a linenum=%linenum%-1
:uploop
set skip B=
if %linenum%>=1 && cat --locate=\x0D\x0A --number=%linenum% (md)%mdread%+%callsect% > nul &; set /a skipB=%?%
if %linenum%>=1 && set /a length=%skipA%-%skipB%-2
if %linenum%==0 && set /a length=%skipA%
if %length%>=0 &; call :upline
if %linenum%>=1 && if %pagelen%>=74 && set /a skipA=%skipB% && set /a linenum=%linenum%-1 && goto :uploop
endlocal && set upline=%upline% && set leftline=%leftline%
set /a showline=%showline%-%upline% &; if %gotoline%<=%showline% && call :cleanline "3" "23" && call Fn.5 0 3
goto :eof

:upline
if not %length%<=1554 && set length=45 && if not %edit%==F if not %edit%==N || set length=58
if not %length%<=74 && if %length%<=1554 && set /a pagelen=%pagelen%-74 && set /a usedline=%usedline%+1 && set /a length=%length%-74 && goto :upline
if %length%>=0 && if %length%<=74 && set /a pagelen=%pagelen%-74 && set /a usedline=%usedline%+1
if %pagelen%>=0 && set /a upline=%upline%+1 && set /a leftline=%leftline%-%usedline%
set usedline=0
goto :eof

:editmenu
if not exist file && cat --locate=\x00 --length=1 (md)%mdread%+%callsect% > nul || set changed=Y
if not %edit%==Ctrl+O if not %edit%==F if not %edit%==N if not %edit%==R if not %edit%==A if not %edit%==I if not %edit%==E if not %edit%==W if not %edit%==J if not %edit%==P if not %edit%==X if not %edit%==D if not %edit%==Ctrl+Del if not %edit%==B if not %edit%==U if not %edit%==T if not %edit%==H if not %edit%==L || call :header "EDIT"
if %zeros%==1 && set edit=M && set gotoline=%linenum% && set gotonext=G && set close=1 && set message= && set selrange= && goto :eof
setlocal && set * && set col=%col% && set highcol=%highcol% && set lowcol=%lowcol% && set vmax=%vmax% && set edit=%edit% && set numnext=%numnext% && set paste=%paste% && set "message=%message%" && set found=%found% && set mdread=%mdread% && set callsect=%callsect% && set selrange=%selrange% && set length=%length% && set linenum=%linenum%
set /A mdwrite=%callsect% + 1 * 4 + %mdread%
if %numnext%==0 && set numnext=
set nextcol=%lowcol% && if exist numnext && set nextcol=%highcol%
set substcol=%lowcol% && set delcol=%lowcol%
if exist found && if %found%==Y && set substcol=%highcol%
set delcol=%highcol%
set pastecol=%lowcol% && cat --locate=\x00 --length=1 (md)%mdwrite%+1 > nul || set pastecol=%highcol%
if not %edit%==V && call :footer "call Fn.5 0 24" &; if not %edit%==F && call Fn.5 3 24
if %edit%==V && echo -P:2400 -n --- && echo -P:2475 -n ----
if not exist message && setlocal && set /a length=%length%-2 &; if not %length%<=9999 && set lencol=%highcol% && set "length=>10k" ! if %length%>=468 && set lencol=%highcol% ! set lencol=$[] &; echo -P:2403 -n %lowcol%Moving line: ArrowUp/Down-B/V PageUp/Down-U/T Home/End-H/L Help: F1 %lencol%Len:%length% && endlocal
if not %edit%==V && if exist message && echo -n %message% && if not exist selrange && set message=
if %edit%==V && if exist message && call Fn.11 "%message%" "cat\x20" && call :footer "call Fn.5 0 24" &; echo -n %lowcol%Not found from line %linenum%: &; %message% && set message=
if %edit%==V && if exist message && call :footer "call Fn.5 3 24" &; echo -n %message% && set message=
if not %edit%==B if not %edit%==U if not %edit%==T if not %edit%==H if not %edit%==L || set edit=V
if not %edit%==V && call :cleanline "1" ! call Fn.5 0 1
if not %numnext%<=9999 && set numnext=10k+
set edit= && set keycode= &; echo -n $[] %highcol%A$[]dd %highcol%I$[]ns %highcol%E$[]dit %highcol%W$[]rite %highcol%J$[]oin %highcol%S$[]el %highcol%C$[]opy %highcol%X$[]ut %pastecol%P$[]aste %highcol%G$[]oto %highcol%F$[]ind %nextcol%N$[]ext%nextcol%%%numnext% %delcol%D$[]el %substcol%R$[]eplace %highcol%M$[]enu && call :Fn.5 0 99 && pause --test-key &; set /A keycode=%@retval% &; call :keycodes "%keycode%" "edit" &; set keycode= && if not %edit%==F1 && if not %edit%==V && if not %edit%==B && if not %edit%==T && if not %edit%==U && if not %edit%==H && if not %edit%==L && call :cleanline "1"
endlocal && set edit=%edit% && set "message=%message%"
if not exist numnext && if %edit%==N && set edit= && goto :editmenu
set close= && set gotonext= && set line1= && set linelen= && if not exist selrange && set message=
if not %edit%==H && if not %edit%==L && if not %edit%==T && if not %edit%==U && if not %edit%==NumlockOff+Shift+Arrow-Up && if not %edit%==NumlockOff+Shift+Arrow-Down && if not %edit%==C && if not %edit%==X && if not %edit%==D && if not %edit%==Ctrl+Del && if not %edit%==F1 && if exist selrange && set selrange= && set selstart= && set selend= && set selzero= && set message=
if %edit%==F5 && setlocal && call :refresh &; endlocal && set close=1 && set gotonext=G && set gotoline=%linenum%
if %edit%==zyx && set edit=A
if %edit%==V && set close=1 && set gotonext=G && set /a gotoline=%linenum%+1
if %edit%==Ctrl+S && setlocal && set edit=%edit% && set replace=R && set string= && set found= && set numnext= && set REPLACE= && set strnlenR= && set i= &; call :save &; endlocal && set device=%device% && set "path=%path%" && set "file=%file%" && set changed=%changed% && set "message=%message%" && set openfile=%openfile% && set donefile=%donefile% && set zeros=%zeros% &; if not %zeros%==1 && set edit=V && set gotoline=%linenum% && set gotonext=G && set close=1 && call :header "EDIT" ! set edit=Alt+F4 && set changed=
if %edit%==Ctrl+B && setlocal && set edit=%edit% && set replace= && set string= && set found= && set numnext= && set REPLACE= && set strnlenR= && set i= &; call :saveas "BACKUP AS" &; endlocal && set "message=%message%" && set openfile=%openfile% && set donefile=%donefile% && set zeros=%zeros% &; call :header "EDIT" &; if not %zeros%==1 && if not exist message && set edit=V && set gotoline=%linenum% && set gotonext=G && set close=1 && set message= ! if not %zeros%==1 && set gotoline=%linenum% && set gotonext=G && set close=1 ! set edit=Alt+F4 && set changed=
if %edit%==Ctrl+O && if %changed%==Y && set olchange=Y && setlocal &; call :footer && echo -P:2403 -n %highcol%Changes are not saved, Save? && set keycode= && call :cleanline "1" && call :Fn.5 1 1 &; echo -n %highcol%Y$[]es %highcol%N$[]o %highcol%C$[]ontinue && call :Fn.5 0 99 && pause --wait=180 --test-key &; set /A keycode=%@retval% &; call :keycodes "%keycode%" "continue" &; set keycode= && call :cleanline "1" &; if %continue%==C && if not exist file && endlocal && set gotoline=1 && set linenum=1 && set changed= && set olchange= ! if %continue%==C && endlocal && set changed= && set olchange= ! if not %continue%==Y && if not %continue%==zyx && endlocal && set changed=%olchange% && set "message=%highcol%Changes not saved" && set edit= && set olchange= && call :header "EDIT" && goto :editmenu ! endlocal
if %edit%==Ctrl+O && if %changed%==Y && setlocal && set "fullfile=%device%%%path%%%file%" && set replace=R && set string= && set found= && set numnext= && set REPLACE= && set strnlenR= && set i= && set message= && call :save &; if %changed%==Y && if exist file && if "%fullfile%"=="%device%%%path%%%file%" && endlocal && set "message=%message%" && set zeros=%zeros% && goto :editmenu ! if not %changed%==Y && if exist file && endlocal && set device=%device% && set "path=%path%" && set "file=%file%" && set changed=%changed% && set openfile=%openfile% && set donefile=%donefile% && set zeros=%zeros% && set "message=%message%" && set edit=Ctrl+O ! if %changed%==Y && endlocal && set message=%message% && set zeros=%zeros% && set changed=%changed% && set edit=V && set gotoline=%linenum% && set gotonext=G && set close=1 && call :header "EDIT"
if %edit%==Ctrl+O && set "fileorg=set device=%device% && set "path=%path%" && set "file=%file%" && set gotoline=%linenum%" && set gotoline=%linenum% && setlocal &; set "fullfile=%device%%%path%%%file%" && call :cleanline "3" "23" &; call :open &; if not exist file && endlocal && %fileorg% && set message= ! if "%fullfile%"=="%device%%%path%%%file%" && endlocal && set message= ! endlocal && set device=%device% && set "path=%path%" && set "file=%file%" && set EOL=%EOL% && set gotoline=%gotoline% && set openfile=%openfile% && set donefile=%donefile% && set "message=%message%" && set zeros=%zeros% && set linenum=0 && set showline=0 && set stopline=0 && set leftline= && call :header "EDIT"
if %edit%==Ctrl+O && set close=1 && set gotonext=G && set cursor= && set cursorB= && set fileorg= && set fullfile= && set lastline= && set skip= && set length= && set ofskip= && set oflength= && set fileorg= && set olchange= && if not exist gotoline && set gotoline=1
if %edit%==Ctrl+R && set REPLACE= && set strnlenR= && set edit=R
if %edit%==Ctrl+A && set selstart=1 && set selend=%lastline% &; set "selrange=%selstart%:%selend%" &; set "message=Selected range: lines %selrange% - View: PageUp/Down-(U/T), Home/End-(H/E)" && set edit=L
if %edit%==NumlockOff+Shift+Arrow-Down && if not exist selrange && set selzero=%gotoline% && set selstart=%linenum% && set /a selend=%linenum%+1 &; set "selrange=%selstart%:%selend%" &; set "message=Selected range: lines %selrange% - View: PageUp/Down (U/T), Home/End (H/L)" && set edit=Z
if %edit%==NumlockOff+Shift+Arrow-Down && if exist selrange && set edit=Z &; call :select &; set edit=NumlockOff+Shift+Arrow-Down
if %edit%==NumlockOff+Shift+Arrow-Down && if exist selrange && if %selstart%==%selzero% && set edit=Z && if %selend%<=%lastline% && set /a selend=%selend%+1 &; set "selrange=%selstart%:%selend%" &; set "message=Selected range: lines %selrange% - View: PageUp/Down (U/T), Home/End (H/L)"
if %edit%==NumlockOff+Shift+Arrow-Down && if exist selrange && if %selend%==%selzero% && set edit=Z && if not %selstart%>=%lastline% && set /a selstart=%selstart%+1 &; set "selrange=%selstart%:%selend%" &; set "message=Selected range: lines %selrange% - View: PageUp/Down (U/T), Home/End (H/L)"
if %edit%==NumlockOff+Shift+Arrow-Up && if not exist selrange && set selzero=%gotoline% && set /a selstart=%linenum%-1 && set /a selend=%linenum% &; set "selrange=%selstart%:%selend%" &; set "message=Selected range: lines %selrange% - View: PageUp/Down (U/T), Home/End (H/L)" && set edit=Z
if %edit%==NumlockOff+Shift+Arrow-Up && if exist selrange && set edit=Z &; call :select &; set edit=NumlockOff+Shift+Arrow-Up
if %edit%==NumlockOff+Shift+Arrow-Up && if exist selrange && if %selstart%==%selzero% && set edit=Z && if not %selend%<=1 && set /a selend=%selend%-1 &; set "selrange=%selstart%:%selend%" &; set "message=Selected range: lines %selstart%:%selend% - View: PageUp/Down (U/T), Home/End (H/L)"
if %edit%==NumlockOff+Shift+Arrow-Up && if exist selrange && if %selend%==%selzero% && set edit=Z && if not %selstart%<=1 && set /a selstart=%selstart%-1 &; set "selrange=%selstart%:%selend%" &; set "message=Selected range: lines %selstart%:%selend% - View: PageUp/Down (U/T), Home/End (H/L)"
if %edit%==Z && set gotoline=%selend% && if %selstart%>=%selend% && set selrange= && set selzero= && set selstart= && set selend= && set message=
if %edit%==Z && set close=1 && set gotonext=G && set gotoline=%gotoline% && set selstart= && set selend= &; if not %gotoline%<=%lastline% && set gotoline=%lastline%
if %edit%==Z && if %gotoline%<=%showline% && set showline=0
#-# V instead of P for 'next line' (V stands for 'volgende', Dutch for 'next') & T instead of D for Page Down ('T' stands for 'Turn page')
if %edit%==V && if not %gotoline%<=%lastline% && set gotoline=%lastline%
if not %edit%==U if not %edit%==H || if %linenum%==1 && goto :editmenu
if not %edit%==T if not %edit%==L || if %linenum%==%lastline% && goto :editmenu
if %edit%==B &; if %gotoline%>=2 && set /a gotoline=%linenum%-1 ! set gotoline=1 &; if %gotoline%<=%showline% && call :pageup &; set stopline=%showline% && call :cleanline "3" "23" && call Fn.5 0 3
if %edit%==B && set close=1 && set gotonext=G && set edit=V
if %edit%==U && call :pageup &; if %showline%>=0 && set /a gotoline=%showline%+1 ! set showline=0 && set gotoline=1
if %edit%==U && set gotonext=G && set leftline= && set close=1 && set stopline=%showline%
if %edit%==T && if not %linenum%>=%lastline% && if not %stopline%>=%lastline% && set /a gotoline=%stopline%+1 && set showline=%stopline% && set gotonext=G && set close=1
if %edit%==T && if %stopline%>=%lastline% && set gotoline=%lastline% && set gotonext=G && set close=1
if %edit%==T && if not %gotoline%<=%lastline% && set gotoline=%lastline%
if %edit%==H && set showline=0 && set gotoline=1 && set close=1 && set gotonext=G
if %edit%==L && set gotoline=%lastline% && set showline=0 && set close=1 && set gotonext=G
if %edit%==A && set /a gotoline=%linenum%+1 && set close=1 && set gotonext=G
if %edit%==I && set gotoline=%linenum% && set close=1 && set gotonext=G
if %edit%==E && if %length%>=470 && call :writedd "mdreadinsertEOL" "436" "%skip%"
#OKE#if %edit%==E && if %length%>=513 && call :writedd "mdreadinsertEOL" "436" "%skip%"
#ORG#if %edit%==E && if %length%>=513 && call :writedd "mdreadinsertEOL" "510" "%skip%"
if %edit%==E && set /a gotoline=%linenum% && set close=1 && set gotonext=G
if %edit%==W && if %gotoline%==%lastline% && set menu=W && set newline=W
if %edit%==W && set /a gotoline=%linenum%+1 &; if not %menu%==W && set /a stopline=%stopline%+%leftline% ! set stopline=%stopline% &; set gotonext=G && set close=1 &; if not %gotoline%<=%stopline% && set showline=%stopline%
#-# J = join lines (up to max 1536 chars - here 1530 if max set /p cmdlen=510; gives 1530+4 for 2x 0D0A), also Backspace - no room for 'tear' (scheuren) must be done with other combi (cut or Ctrl+X ?)
if %edit%==J && set maxlen= &; set /a maxlen=%length%+%oflength%-4
if %edit%==J && if not %maxlen%<=1554 && call :footer "call Fn.5 0 24" &; call Fn.5 1 24
if %edit%==J && if not %maxlen%<=1554 && echo -n %highcol%Joined line cannot be displayed. Press Enter to confirm, other key to continue && call :Fn.5 0 99 && pause --test-key --wait=180 &; set /A keycode=%@retval% && call :Fn.5 0 23 && call :footer &; if %keycode%==0x1C0D && set showline=0 ! set edit= && set maxlen=
if %edit%==J && if %length%>=1 &; call :writedd "mdread2mdbase1" "%length%" "%skip%" &; call :keybuff "%length%" &; if exist oflength && if %oflength%>=1 &; call :writedd "mdread2mdbase1" "%oflength%" "%ofskip%" &; call :keybuff "%oflength%"
if %edit%==J && if exist ofskip && set /A joinskip=%skip%-0x2 &; call :writedd "mdreadcutselection" "0x2" "%joinskip%" &; set joinskip=
if %edit%==J && if exist ofskip && set /a stopline=%showline% && set /a gotoline=%linenum%-1 &; if %gotoline%<=%showline% && set showline=0 && set stopline=0
if %edit%==J && set close=1 && set gotonext=G && set edit=V && if not exist ofskip && set /a gotoline=%linenum%
if %edit%==S && set selrange= &; call :select
if %edit%==S && if exist selrange && call :selrange &; if exist selrange && set selzero=%selstart% && set /a gotoline=%selend% && set selstart= && set selend= && set close=1 && set gotonext=G &; if %gotoline%<=%showline% && set showline=0
if %edit%==S && if not exist selrange && set close=1 && set gotonext=G && set gotoline=%linenum%
if %edit%==C && if not exist selrange && if %length%>=1 &; call :writedd "mdread2mdbase1" "%length%" "%skip%"
if %edit%==C && if not exist selrange && call :keybuff
if %edit%==C && set copylen=%length% &; if exist selrange &; call :select &; call :selrange
if %edit%==C && if exist copylen &; call :writedd "mdread2mdwrite" "%copylen%" "%skip%" &; set copylen= && if exist oldskip && set skip=%oldskip% && set oldskip=
if not %edit%==D if not %edit%==Ctrl+Del || if %lastline%==1 && call :cleanmem "%mdread%" "%callsect%" && raw write --offset=0 (md)%mdread%+1 \x0D\x0A > nul && set close=1 && set gotonext=G && set gotoline=1 && set edit=T
if %edit%==D && if not exist found && set delete=Y && set edit=X
if %edit%==Ctrl+Del && set delete=Y && set edit=X && if %found%==Y && if not %skip%<=%pos16% && set findskip=%skip% && set pos16=%skip%
if %edit%==X && if not exist selrange && if %length%>=1 &; call :writedd "mdread2mdbase1" "%length%" "%skip%"
if %edit%==X && if not exist selrange && call :keybuff
if %edit%==X && set copylen=%length% &; if exist selrange && call :select &; call :selrange
if %edit%==X && if not exist delete && if exist copylen &; call :writedd "mdread2mdwrite" "%copylen%" "%skip%"
if %edit%==X && if exist selrange && set oldlen=%length% && set /A length=%copylen% && set copylen=
if %edit%==X && if %length%>=1 && call :writedd "mdreadcutselection" "%length%" "%skip%" &; set changed=Y && set delete= && if exist oldskip && set skip=%oldskip% && set oldskip=
if %edit%==X && if exist length && if exist oldlen && set length=%oldlen% && set oldlen=
if %edit%==X && if not exist selrange && set line1= && set stopline=%showline% && set /a lastline=%lastline%-1 && set /a linenum=%linenum% &; set /a gotoline=%linenum%
if %edit%==X && if exist selrange && set line1= && set /a lastline=%lastline%-%selend%+%selstart% && set /a linenum=%selstart% &; set /a gotoline=%linenum% &; if %gotoline%<=0 && set gotoline=1 && set linenum=1
if %edit%==X && if %gotoline%>=%lastline% && set gotoline=%lastline%
if %edit%==X && if %gotoline%<=%showline% && set showline=0
if %edit%==X && set close=1 && set gotonext=G && set stopline=%showline%
if %edit%==P && if not exist copylen && set /A copylen=0x0
if %edit%==P && call :writedd "mdwrite2mdread" "%copylen%" "%skip%" &; set changed=Y && set copylen= && if exist message && set edit= && set changed=
if %edit%==P && set /a gotoline=%linenum% && set /a stopline=%showline%
if %edit%==P && set close=1 && set gotonext=G
if %edit%==G && call :gotomenu &; if %gotoline%<=%showline% && set showline=0
if %edit%==G && set close=1 && set gotonext=G
if %edit%==F && set REPLACE= && set strnlenR= && set i=i
if %edit%==Alt+F && set REPLACE= && set strnlenR= && set i= && set edit=F
if %edit%==F && set numnext= && set findskip=%skip% &; call :find "%i%" &; if exist numline && set found=Y && set /a gotoline=%numline% &; if %gotoline%<=%showline% && set showline=0
if %edit%==F && if not exist numline && set found= && set /a gotoline=%linenum% &; if %gotoline%<=%showline% && set showline=0
if %edit%==F && set close=1 && set gotonext=G && set numline= && if not exist found && set edit=V
if %edit%==N && if exist numnext &; if not %skip%<=%pos16% && set findskip=%skip% && set pos16=%skip% && set numnext= ! set numnext=%numnext% &; call :find "%i%" &; if exist numline && set found=Y && set /a gotoline=%numline% &; if %gotoline%<=%showline% && set showline=0
if %edit%==N && if not exist numline && set edit= && set found= && set /a gotoline=%linenum% && set close=1 && set gotonext=G && set numline= &; if %gotoline%<=%showline% && set showline=0
if %edit%==N && set close=1 && set gotonext=G && set numline= && if not exist found && set edit=V
if %edit%==D && if exist found && if %found%==Y && if %length%>=1 &; call :writedd "mdread2mdbase1" "%length%" "%skip%"
if %edit%==D && if exist found && if %found%==Y &; call :keybuff
if %edit%==D && if exist found && if %found%==Y && set REPLACE= && set strnlenR= &; call :replace &; set found=
if %edit%==D && set /a gotoline=%linenum% && set gotonext=G && set close=1 && set /a stopline=%showline%
#-# Ctrl+R = new input - Alt+R for 'Replace All' = NOT IMPLEMENTED
if %edit%==R && if exist found && if %found%==Y && if not exist REPLACE &; call :find "%i%"
if %edit%==R && if exist found && if %found%==Y && if exist REPLACE && if %length%>=1 &; call :writedd "mdread2mdbase1" "%length%" "%skip%"
if %edit%==R && if exist found && if %found%==Y && if exist REPLACE &; call :keybuff
if %edit%==R && if exist found && if %found%==Y && if exist REPLACE &; call :replace &; set found=
if %edit%==R && set /a gotoline=%linenum% && set gotonext=G && set close=1 && set edit=V && set /a stopline=%showline%
if %edit%==Alt+F4 && set edit=M && call :Key2Bios "0x1051"
if %zeros%==1 && set edit=M
if %edit%==M && set gotoline=%linenum% && set gotonext=G
if %edit%==M && set close=1 && set message= && if exist selrange && set selrange=
if %numnext%==0 && set numnext=
if not %edit%==F && if not %edit%==N && if not %edit%==R && if not %edit%==D && if exist found && if %found%==Y && set found=
if not %edit%==S && if not %edit%==Z && if not %edit%==H && if not %edit%==U && if not %edit%==L && if not %edit%==T && if not %edit%==F1 && if not %edit%==C && if exist selrange && set selrange= && set selzero= && set selstart= && set selend= && set message=
if %edit%==F1 && setlocal && call :help "EDIT" &; endlocal && call :header "EDIT" && set edit=V && set gotoline=%linenum% && set gotonext=G && set close=1 && if not exist selrange && set message=
cat --locate=\x00\x00 --length=2 (md)%mdread%+%callsect% > nul && raw write (md)%mdread%+%callsect% \x0D\x0A\x00 > nul
if not %edit%==V && if not %edit%==X && if not %edit%==E && if not %edit%==I && if not %edit%==A && if not %edit%==U && if not %edit%==T && if not %edit%==H && if not %edit%==L && if not %edit%==F && if not %edit%==N && if not %edit%==D && if not %edit%==R && if not %edit%==G && if not %edit%==W && if not %edit%==J && if not %edit%==S && if not %edit%==Z && if not %edit%==P && if not %edit%==Ctrl+O && if not %edit%==M && if not %edit%==Ctrl+B && if not %edit%==F5 && goto :editmenu
call Fn.5 0 3
goto :eof

:select
setlocal && set * && set mdbase=%mdbase% && set selrange=%selrange% && set edit=%edit% && set lastline=%lastline% && set lowcol=%lowcol%
:selmenu
call :footer && call :cleanline "1"
echo -n > (md)%mdbase%+1
if not %edit%==Z && if not %edit%==C && if not %edit%==X && echo -P:2403 -n %lowcol%Separators: - , ; :  Or use: Shift+Numlock+2/+8  Leave dialog: Press Escape && set selrange=zyx &; set /p "selrange=Select line-number range (max %lastline%) > " && cleanline "1"
if %selrange%==zyx && endlocal && goto :eof
pause --wait=1 %selrange% > (md)%mdbase%+1
cat --locate=\x2C --replace=\x3A (md)%mdbase%+1 > nul
cat --locate=\x2D --replace=\x3A (md)%mdbase%+1 > nul
cat --locate=\x3B --replace=\x3A (md)%mdbase%+1 > nul
cat --locate=\x3A (md)%mdbase%+1 > nul || goto :selmenu
cat (md)%mdbase%+1 | set selrange=
cat --locate=\x3A --replace=\x0A (md)%mdbase%+1 > nul
cat (md)%mdbase%+1 | set selstart=
set /a selstart=%selstart% &; if %selstart%<=0 && set selstart= && goto :selmenu
cat --locate=\x0A --number=1 (md)%mdbase%+1 > nul &; set /a selskip=%?%
cat --skip=%selskip% (md)%mdbase%+1 | set selend=
set /a selend=%selend% &; if %selend%<=0 && set selend= && goto :selmenu ! if not %selend%<=%lastline% && set selend=%lastline% && set selrange=%selstart%:%lastline%
if %selstart%>=%selend% && set selstart= && set selend= && goto :selmenu
echo -n > (md)%mdbase%+1
endlocal && set selrange=%selrange% && set selstart=%selstart% && set selend=%selend% &; if exist selstart && if exist selend && if exist selrange && set "message=Selected range: lines %selrange% - View: PageUp/Down-(U/T), Home/End-(H/L)"
goto :eof

:selrange
setlocal && set * && set selrange=%selrange% && set selstart=%selstart% && set selend=%selend% && set mdread=%mdread% && set callsect=%callsect% && set skip=%skip%
if %selend%<=1 && endlocal && set selrange= && set selstart= && set selend= && goto :eof
set /a selskip=%selstart%-1
if %selskip%>=1 && cat --locate=\x0D\x0A --number=%selskip% (md)%mdread%+%callsect% > nul &; set /A selskip=%?%+0x2
if %selstart%==1 && set /A selskip=0x0
cat --locate=\x0D\x0A --number=%selend% (md)%mdread%+%callsect% > nul &; set /A sellen=%?%+0x2-%selskip%
endlocal && set copylen=%sellen% && set oldskip=%skip% && set skip=%selskip%
goto :eof

:subst
#-# sub-routine for editing a line. call's :writedd "mdread2mdbase1"=copy to mdbase..; :keybuff=copy/split to History Buffer; :numecho=linenum2echonum; :writedd "mdreadcutselection"=cut selected line; if line is not empty: :Key2Bios for ArrowUp & Home; :oddcheck=write var line1 to mem and check for set /p incompatibilities; :writemd=insert edited line;
setlocal && call :fileleng "%mdread%" "%callsect%" &; set /a room=256k-%filelen% &; if %room%<=1535 && endlocal && set "message=%highcol%Not enough space in %file% - 1536 bytes needed" && goto :eof ! endlocal
if %length%>=1 && call :writedd "mdread2mdbase1" "%length%" "%skip%"
call :keybuff
call :cleanline "1" &; echo -P:0101 -n %lowcol%ArrowUp/Down: get line from History - Cheat: underscore is starting space
if %linenum%<=9 && set echonum=000%linenum% ! if %linenum%<=99 && set echonum=00%linenum% ! if %linenum%<=999 && set echonum=0%linenum% ! if %linenum%<=9999 && set echonum=%linenum% ! set echonum=%linenum:~-4,4%
if %length%>=1 && call :writedd "mdreadcutselection" "%length%" "%skip%"
set changed=Y && set /a gotoline=%linenum% && set close=1 && set gotonext=G
:subsloop
call :footer "call Fn.5 3 24" && echo -n %lowcol%Done: Enter - Press Escape to leave dialog
if not %length%<=2 && call :Key2Bios "0x4800" "0x4700"
#OLD#if not %length%<=2 && bios int=0x16 eax=0x0500 ecx=0x4800 > nul && if not %length%<=512 &; bios int=0x16 eax=0x0500 ecx=0x4800 > nul && if not %length%<=1022 &; bios int=0x16 eax=0x0500 ecx=0x4800 > nul
#OLD#if not %length%<=2 && bios int=0x16 eax=0x0500 ecx=0x4700 > nul
call :Fn.5 0 %cursor% && set /p "line1=%echonum%>"
set /A linelen=%@retval%
read 0x41a > nul &; set /A head=%@retval%&0xff &; if %head%>=0x20 && set /A lastmem=%head%+0x400-2 ! set /A lastmem=0x43C &; read %lastmem% > nul &; set /A lastkey=%@retval%&0xffff &; if %lastkey%==0x11B && if not %length%<=2 && call :Key2Bios "0x4800" "0x4700" "0x1C0D" && call :Fn.5 0 %cursor% && set /p "line1=%echonum%>" &; set /A linelen=%@retval%
if %linelen%==0 && set line1=zyx
set lastkey= && set head= && set lastmem=
call :oddcheck
if %even%==N && goto :subsloop
if %even%==Y &; call :writemd &; set even= && set changed=Y
goto :eof

:Key2Bios
setlocal && set * && set c=0
read 0x41A > nul ;; set /A read41a=%@retval% ;; set /A head=%read41a:~0,4% && set /A tail=0x%read41a:~-2,2% ;; set /A headmem=%head%+0x400
:LoopKey2Bios
if %headmem%>=0x43E && set /A headmem=0x41E
raw write --bytes=2 %headmem% %~1 > nul
set /a c=%c%+1 ;; shift
if %c%<=14 && if not "%~1"=="" && set /A headmem=%headmem%+2 && goto :LoopKey2Bios
set /A newtail=%head%
:LoopNewTail
set /A newtail=%newtail%+0x02 &; if %newtail%>=0x3E && set /A newtail=0x1E
set /a c=%c%-1
if %c%>=1 && goto :LoopNewTail
raw write --bytes=1 0x41C %newtail% > nul
endlocal && goto :eof

:insert
#-# sub-routine for inserting a line above selected line. call's
setlocal && call :fileleng "%mdread%" "%callsect%" &; set /a room=256k-%filelen% &; if %room%<=1535 && endlocal && set "message=%highcol%Not enough space in %file% - 1536 bytes needed" && goto :eof ! endlocal
call :cleanline "1" &; echo -P:0101 -n %lowcol%ArrowUp/Down: get line from History - Cheat: underscore is starting space
if %linenum%<=9 && set echonum=000%linenum% ! if %linenum%<=99 && set echonum=00%linenum% ! if %linenum%<=999 && set echonum=0%linenum% ! if %linenum%<=9999 && set echonum=%linenum% ! set echonum=%linenum:~-4,4%
:insloop
call :footer "call Fn.5 3 24" && echo -n %lowcol%Press Enter to make empty line - Press Escape to leave dialog
call :Fn.5 0 %cursor% && set /p "line1=%echonum%>"
set /A linelen=%@retval%
read 0x41a > nul &; set /A head=%@retval%&0xff &; if %head%>=0x20 && set /A lastmem=%head%+0x400-2 ! set /A lastmem=0x43C &; read %lastmem% > nul &; set /A lastkey=%@retval%&0xffff &; if %lastkey%==0x11B && set lastkey= && set head= && set lastmem= && goto :eof ! set lastkey= && set head= && set lastmem=
if %linelen%==0 && set line1=zyx
call :oddcheck
if %even%==N && goto :insloop
if %even%==Y &; call :writemd &; set even= && set changed=Y && set /a stopline=%stopline%+1 && set /a lastline=%lastline%+1
goto :eof

:add
#-# sub-routine for inserting a line below selected line. call's
setlocal && call :fileleng "%mdread%" "%callsect%" &; set /a room=256k-%filelen% &; if %room%<=1535 && endlocal && set "message=%highcol%Not enough space in %file% - 1536 bytes needed" && goto :eof ! endlocal
if %edit%==W &; call Fn.5 0 1
if %edit%==W && call :cleanline "1" &; echo -P:0101 -n %lowcol%Cursor on empty line: press Enter for Menu - Cheat: underscore is starting space
if not %edit%==W && call :cleanline "1" &; echo -P:0101 -n %lowcol%ArrowUp/Down: get line from History - Cheat: underscore is starting space
if %linenum%<=9 && set echonum=000%linenum% ! if %linenum%<=99 && set echonum=00%linenum% ! if %linenum%<=999 && set echonum=0%linenum% ! if %linenum%<=9999 && set echonum=%linenum% ! set echonum=%linenum:~-4,4%
:addloop
call :footer "call Fn.5 3 24" && echo -n %lowcol%Press Enter to make empty line - Press Escape to leave dialog
call :Fn.5 0 %cursor% && set /p "line1=%echonum%>"
set /A linelen=%@retval%
read 0x41a > nul &; set /A head=%@retval%&0xff &; if %head%>=0x20 && set /A lastmem=%head%+0x400-2 ! set /A lastmem=0x43C &; read %lastmem% > nul &; set /A lastkey=%@retval%&0xffff && set /a line=%showline%+1 &; if %lastkey%==0x11B && if %gotoline%==%line% && set /a gotoline=%gotoline%-1 && set showline=0 && set stopline=0 && set lastkey= && set head= && set lastmem= && set line= && goto :eof ! if %lastkey%==0x11B && set /a gotoline=%gotoline%-1 && set lastkey= && set head= && set lastmem= && set line= && goto :eof ! set lastkey= && set head= && set lastmem= && set line=
if %linelen%==0 && set line1=zyx
call :oddcheck
if %even%==N && set line1= && set linelen= && goto :addloop
if %edit%==W && if %even%==Y && if not %linelen%==0 && call :writemd &; set changed=Y && if not %edit%==W && set even=
if not %edit%==W && if %even%==Y && call :writemd &; set changed=Y && if not %edit%==W && set even=
if not %edit%==W && if %even%==Y && set /a gotoline=%linenum% && set close=1 && set gotonext=G && set /a lastline=%lastline%+1 && set /a stopline=%stopline%+1
goto :eof

:keybuff
setlocal && set * && set length=%length% && set mdbase=%mdbase% && set NHistory=%NHistory%
if not "%~1"=="" && set /A fulllen=%~1 && set length=
if "%~1"=="" && set /A fulllen=%length% && set length=
#-#new: now 'length' = without 0D0A!
set /A fulllen=%fulllen%-0x2
set /A length=%fulllen%
if %fulllen%==0x0 && endlocal && goto :eof
set skip=0x0
set /A mdbase1=%mdbase%+10
set /A mdkeybuf=%mdbase%+13
#NEW:ZEROSinHISTORYforLENGTH>3sectors!#
if not %fulllen%<=1534 && set fulllen=1534
#AlwaysTwoLeft#if not %fulllen%<=1536 && set fulllen=1536
:buffloop
echo -n > (md)%mdkeybuf%+16
#-#now +3! Normal 'length' = without 0D0A!
set /A length=%fulllen%
set /A entrylen=%fulllen%+0x3
#-#not +3! Normal 'length' = including 0D0A!
if %fulllen%>=0x1FF && set /A length=0x1FE && set /A entrylen=0x201
if %entrylen%>=0x201 && set bufentry=\x01\x02 && set /A entrylen=0x201
if %entrylen%<=0x200 && set bufentry=\x%entrylen:~3,2%\x0%entrylen:~2,1%
if %entrylen%<=0xFF && set bufentry=\x%entrylen:~2%\x00
if %entrylen%<=0xF && set bufentry=\x0%entrylen:~2,1%\x00
raw write (md)%mdkeybuf%+16 %bufentry%\x00 > nul
raw dd if=(md)%mdbase1%+3 of=(md)%mdkeybuf%+16 bs=1 count=%length% skip=%skip% seek=0x2 > nul
set /A bufflen=0x1F40-%entrylen%
raw dd if=(md)0x0+0x1F63 of=(md)%mdkeybuf%+16 bs=1 count=%bufflen% skip=0x3EA4C0 seek=%entrylen% > nul
call Fn.24 0x3EA4C0 0x00 0x1F40
raw dd if=(md)%mdkeybuf%+16 of=(md)0x0+0x1F63 bs=0x1 count=0x1F40 skip=0x0 seek=0x3EA4C0 > nul
if %fulllen%>=0x1FF && set /A fulllen=%fulllen%-0x1FE && set /A skip=%skip%+0x1FE && goto :buffloop
if exist NHistory && set addskip=195 &; raw cat --skip=%addskip% --locate=\x00\x00\x00\x00 --length=7993 --number=1 (md)0x1F52+16 > nul &; set /a addlen=%?%
if exist NHistory && if not exist addlen && raw cat --skip=%addskip% --locate=\x00 --length=7993 (md)0x1F52+16 > nul &; set /a addlen=%?%
if exist NHistory && setlocal && set * && set NHistory=%NHistory% && set addskip=%addskip% && set addlen=%addlen% && set checklen=%addlen% && set numhist=0 && call :add_hist &; endlocal
endlocal && call Fn.5 0 3
goto :eof

:add_hist
raw cat --skip=%addskip% --locate=\x00 --length=%checklen% --number=1 (md)0x1F52+16 > nul &; set /a locate00=%?%
set /a numhist=%numhist%+1 && if exist locate00 && if %addskip%<=8187 && if %checklen%>=4 && set /a addskip=%locate00%+3 &; set /a checklen=%addlen%-%addskip% && set locate00= && goto :add_hist
raw write --bytes=2 %NHistory% %numhist% > nul
goto :eof

:writeline
call Fn.4 ;; set /a cursorB=%@retval%>>8
call :footer && echo -P:2401 -n %lowcol%Enter if line is ready (max 511 chars)/ Enter for Menu if cursor on empty line
if %edit%==W && set newline= && set cursorB=
if %edit%==W && call :add &; call Fn.5 0 24
if not %edit%==W && set /a lastline=%lastline%+1
if not %edit%==W && set linelen= && set gotoline= && set gotonext= && set newline=
if not %edit%==W && if not %even%==N &; if %linenum%<=9 && set echonum=000%linenum% ! if %linenum%<=99 && set echonum=00%linenum% ! if %linenum%<=999 && set echonum=0%linenum% ! if %linenum%<=9999 && set echonum=%linenum% ! set echonum=%linenum:~-4,4%
if not %edit%==W && set even=
if not %edit%==W && echo -P:0101 -n %lowcol%Cheat: underscore for starting space
if not %edit%==W && set "line1=zyx" && set "newline=zyx" && set linelen=0x0
if not %edit%==W && set /p "line1=%echonum%>" &; set /A linelen=%@retval%
if not %edit%==W && call :oddcheck
if not %edit%==W && if %even%==N && set even=
if not %edit%==W && if not exist even && if %menu%==W && set close=1 && set gotoline=%linenum% && set gotonext=G && set line1= && set newline= && set linelen= && goto :eof
if %linelen%==0 && setlocal && set /A mdbase=%mdbase%+0x4 &; echo -n > (md)%mdbase%+3 && endlocal
if not %edit%==W && if not %linelen%==0 && if %even%==Y && call :writemd %0 &; set changed=Y && call :endwrite &; if %leftline%<=0 && set showline=%stopline%
if not %edit%==W && if not %linelen%==0 && set /a gotoline=%linenum%+1 && set close=1 && set newline=W && set gotonext=G && set line1= && set linelen= && set even= && set leftline= &; if %gotoline%<=%showline% && set showline=0 ! set showline=%showline% &; goto :eof
if %edit%==W && if not %linelen%==0 && set /a lastline=%lastline%+1 && set /a gotoline=%linenum%+1 &; if %gotoline%<=%showline% && set showline=0 ! if not %gotoline%<=%stopline && set stopline=%showline% &; goto :eof
:newline
setlocal && set * && set col=%col% && set highcol=%highcol% && set lowcol=%lowcol% && set vmax=%vmax% && set edit=%edit%
if not %edit%==W && call :footer && echo -P:2469 -n %lowcol%Help: F1
if not %edit%==W && set newline=zyx && set keycode= && set key= && call :cleanline "1" &; echo -n $[] %highcol%P$[]ass %highcol%E$[]dit %highcol%M$[]enu && call :Fn.5 0 99 && pause --test-key &; set /A keycode=%@retval% &; call :keycodes "%keycode%" "newline" &; set keycode= && if not %newline%==F1 && call :cleanline "1"
if %edit%==W && set newline=zyx && set keycode= && set key= && call :cleanline "1" &; echo -n $[] %highcol%P$[]ass %highcol%E$[]nd && call :Fn.5 0 99 && pause --test-key &; set /A keycode=%@retval% &; call :keycodes "%keycode%" "newline" &; set keycode= && call :cleanline "1" &; if not %newline%==M if not %newline%==F1 || set newline=
call :footer "call Fn.5 0 24" &; call Fn.5 3 24
endlocal && set newline=%newline%
if not exist newline && goto :newline ! if not %newline%==zyx && if not %newline%==P && if not %newline%==E && if not %newline%==F1 && if not %newline%==M && if not %newline%==F5 && goto :newline
if not %edit%==W && if %newline%==E && if %line1%==zyx && if %linenum%==1 && if %linelen%==0 && cat --locate=\x00\x00 --length=2 --replace=\x0D\x0A (md)%mdread%+%callsect% > nul && set menu=E && set edit= && set write= && set newline= && set gotoline=%linenum% && set gotonext=G && set close=1 && set line1= && set linelen= && set even= && set leftline= && set changed=Y && goto :eof
if exist line1 && if %linelen%==0 && set line1= && set linelen= &; call :oddcheck
if not %edit%==W && if %newline%==zyx && set newline=P
if %edit%==W && if %newline%==zyx && set newline=P
if not %edit%==W && if %newline%==P && call :writemd %0 &; set changed=Y && call :endwrite &; if %leftline%<=0 && set showline=%stopline%
if %edit%==W && if %newline%==P && if %even%==Y && if not %linelen%==0 &; call :writemd %0 &; set changed=Y && set even=
if %edit%==W && if %newline%==P && set stopline=0 && set showline=0
if %edit%==W && if %newline%==P && set /a gotoline=%gotoline%+1 && set close=1 && set gotonext=G && set newline= && set line1= && set linelen= && set even= && goto :eof
if %zeros%==1 &; if %edit%==W && set newline=E ! set newline=M
if %edit%==W && if %newline%==E &; if %linenum%>=2 && set /a linenum=%linenum%-1 && set /a lastline=%lastline%-1 ! set lastline=1 &; set gotoline=%linenum% &; if %gotoline%<=%showline% && set showline=0 ! set showline=%showline%
if %edit%==W && if %newline%==E && set edit= && goto :eof
if not %edit%==W && if %newline%==F1 && setlocal && call :help "WRITE" &; endlocal && set gotoline=%linenum% && set lastline=%lastline% && set close=1 && set gotonext=G && set newline=W && goto :eof
if not %edit%==W && if %newline%==F5 && setlocal && call :refresh &; endlocal && set gotoline=%linenum% && set lastline=%lastline% && set close=1 && set gotonext=G && set newline=W && goto :eof
if not %edit%==W && if %newline%==M && set echonum= && if %linenum%>=2 && set /a linenum=%linenum%-1 &; if %linenum%<=9 && set echonum=000%linenum% ! if %linenum%<=99 && set echonum=00%linenum% ! if %linenum%<=999 && set echonum=0%linenum% ! if %linenum%<=9999 && set echonum=%linenum% ! set echonum=%linenum:~-4,4%
if not %edit%==W && if %newline%==M && call :cleanline "%cursorB%" && set /a charlen=%oflength%-2 &; if %charlen%<=74 && set /a cursorB=%cursorB%-1 ! set /a cursorB=-%charlen%/74+%cursorB% &; if not %charlen%<=74 && calc %charlen% % 74 > nul && set /a cursorB=%cursorB%-1
if not %edit%==W && if %newline%==M && if %cursorB%==2 && set charlen= && set cursorB= && set close=1 && set file= && set gotoline=1 && set write=M && goto :eof
if not %edit%==W && if %newline%==M && set charlen= &; if %cursorB%<=9 && set cursorB=0%cursorB% ! set cursorB=%cursorB% &; if exist echonum && echo -P:%cursorB%%00 -n $[]%echonum% ! set linenum= &; set /a gotoline=%linenum% && set close=1 && set write=M && goto :eof
if not %edit%==W && if %newline%==P && set /a linenum=%linenum%+1 &; set gotoline=%linenum% && set close=1 && set gotonext=G && set newline=W && goto :eof
#MAYBEforSAFETY:#
if not %edit%==W && if %newline%==E && cat --locate=\x00\x00 --length=2 --replace=\x0D\x0A (md)%mdread%+%callsect% > nul &; call :cleanline "3" && set close=1 && set gotonext= && set write=M && goto :eof
#REGULARcase#
if not %edit%==W && if %newline%==E && set menu=E && set edit= && set write= && set newline= && set line1= && set linelen= && set even= && set leftline= &; if %linenum%>=2 && set /a linenum=%linenum%-1 && set /a lastline=%lastline%-1 ! set lastline=1 &; set gotoline=%linenum% && set gotonext=G && set close=1 &; if %gotoline%<=%showline% && set showline=0 ! set showline=%showline%
if not %edit%==W && if %newline%==E && goto :eof
if not %edit%==W && if not %newline%==P && if not %newline%==R && if not %newline%==E && if not %newline%==G && if not %newline%==M && set newline=W && set gotoline=%linenum% && set gotonext=G && set close=1 && set line1= && set linelen= && set even= && set leftline= && goto :eof
if %edit%==W && if not %newline%==P && if not %newline%==E && set newline=E && set linelen= && set even= && set leftline= && goto :eof
goto :newline

:endwrite
setlocal && set * && set linelen=%linelen% && set leftline=%leftline%
set /a usedline=%linelen%/74
set /a taillen=-74 * %usedline% + %linelen%
if %taillen%>=1 && set /a usedline=%usedline%+1
set /a leftline=%leftline%-%usedline%
endlocal && set leftline=%leftline%
goto :eof

:gotomenu
setlocal && set * && set col=%col% && set highcol=%highcol% && set lowcol=%lowcol% && set vmax=%vmax% && set linenum=%linenum% && set lastline=%lastline%
call :footer && call :cleanline "1" && echo -P:2403 -n %lowcol%Press Escape to leave dialog
set gotoline= &; set /p /a "gotoline= Goto line-number 1-%lastline% > " && call :cleanline "1"
if not exist gotoline && set /a gotoline=%linenum%
if %gotoline%<=0 && set /a gotoline=%linenum%
call :footer
endlocal && set gotoline=%gotoline%
goto :eof

:keycodes
setlocal && set *
set keycode=%~1
set keylabel=%~2
#-# order: uppercase (shift+), lowercase, other key.
if %keycode%==0x1 && set key=M
if %keycode%==0x11B &; if %keylabel%==convert && set key=B ! set key=M
if %keycode%==0x1C0D && set key=zyx
if %keycode%==0xB30 && set key=0
if %keycode%==0x231 && set key=1
if %keycode%==0x332 && set key=2
if %keycode%==0x433 && set key=3
if %keycode%==0x534 && set key=4
if %keycode%==0x635 && set key=5
if %keycode%==0x736 && set key=6
if %keycode%==0x837 && set key=7
if %keycode%==0x938 && set key=8
if %keycode%==0xA39 && set key=9
if not %keycode%==0x1E41 if not %keycode%==0x1E61 || set key=A
if not %keycode%==0x3042 if not %keycode%==0x3062 || set key=B
if not %keycode%==0x2E43 if not %keycode%==0x2E63 if not %keycode%==0x2E03 || set key=C
if not %keylabel%==edit && if not %keylabel%==lsmenu && if %keycode%==0x2E03 && set key=M
if not %keycode%==0x2044 if not %keycode%==0x2064 || set key=D
if not %keylabel%==edit && if not %keylabel%==lsmenu && if %keycode%==0x5100 && set key=M
if not %keycode%==0x1245 if not %keycode%==0x1265 || set key=E
if %keylabel%==edit && if %keycode%==0x4F00 && set key=L
if not %keylabel%==edit && if not %keylabel%==lsmenu && if %keycode%==0x4F00 && set key=M
if not %keycode%==0x2146 if not %keycode%==0x2166 if not %keycode%==0x2106 || set key=F
if not %keylabel%==edit && if not %keylabel%==lsmenu && if %keycode%==0x2106 && set key=M
if not %keycode%==0x2247 if not %keycode%==0x2267 || set key=G
if not %keycode%==0x2348 if not %keycode%==0x2368 if not %keycode%==0x4700 || set key=H
if not %keylabel%==edit && if not %keylabel%==lsmenu && if %keycode%==0x4700 && set key=M
if not %keycode%==0x1749 if not %keycode%==0x1769 || set key=I
if not %keycode%==0x244A if not %keycode%==0x246A if not %keycode%==0xE08 || set key=J
if not %keycode%==0x264C if not %keycode%==0x266C || set key=L
if not %keycode%==0x324D if not %keycode%==0x326D || set key=M
if not %keycode%==0x314E if not %keycode%==0x316E if not %keycode%==0x3D00 || set key=N
if not %keylabel%==edit && if not %keylabel%==lsmenu && if %keycode%==0x3D00 && set key=M
if not %keycode%==0x184F if not %keycode%==0x186F if not %keycode%==0x180F || set key=O
if not %keycode%==0x1950 if not %keycode%==0x1970 if not %keycode%==0x2F16 || set key=P
if not %keylabel%==edit && if not %keylabel%==lsmenu && if %keycode%==0x1910 && set key=M
if not %keycode%==0x1051 if not %keycode%==0x1071 || set key=Q
if not %keycode%==0x1352 if not %keycode%==0x1372 || set key=R
if %keycode%==0x1312 && set key=Ctrl+R
if not %keycode%==0x1F53 if not %keycode%==0x1F73 || set key=S
if not %keycode%==0x1655 if not %keycode%==0x1675 if not %keycode%==0x4900 || set key=U
if not %keylabel%==edit && if not %keylabel%==lsmenu && if %keycode%==0x4900 && set key=M
if not %keycode%==0x1454 if not %keycode%==0x1474 || set key=T
if not %keycode%==0x2F56 if not %keycode%==0x2F76 || set key=V
if not %keylabel%==edit && if not %keylabel%==lsmenu && if %keycode%==0x2f16 && set key=M
if not %keycode%==0x1157 if not %keycode%==0x1177 || set key=W
if not %keycode%==0x2D58 if not %keycode%==0x2D78 if not %keycode%==0x2D18 || set key=X
if not %keycode%==0x1559 if not %keycode%==0x1579 || set key=Y
if %keylabel%==edit && if %keycode%==0x3920 && set key=V
if %keylabel%==edit && if %keycode%==0x4800 && set key=B
if %keylabel%==lsmenu && if %keycode%==0x5100 && set key=D
if %keylabel%==lsmenu && if %keycode%==0x4900 && set key=U
if %keylabel%==lsmenu && if %keycode%==0xE08 && set key=B
if %keylabel%==lsmenu && if %keycode%==0x4F00 && set key=E
if %keylabel%==edit && if %keycode%==0x5000 && set key=V
if %keylabel%==edit && if %keycode%==0x5100 && set key=T
if %keylabel%==edit && if %keycode%==0x5300 && set key=D
if %keylabel%==edit && if %keycode%==0x1E01 && set key=Ctrl+A
if %keycode%==0x1F13 &; if %keylabel%==edit && set key=Ctrl+S ! if %keylabel%==menu && set key=S
if %keycode%==0x180F &; if %keylabel%==edit && set key=Ctrl+O ! if %keylabel%==menu && set key=O
if %keylabel%==edit && if %keycode%==0x5032 && set key=NumlockOff+Shift+Arrow-Down
if %keylabel%==edit && if %keycode%==0x4838 && set key=NumlockOff+Shift+Arrow-Up
if %keylabel%==edit && if %keycode%==0x2100 && set key=Alt+F
if %keylabel%==edit && if %keycode%==0x6B00 && set key=Alt+F4
if %keylabel%==menu && if %keycode%==0x6B00 && set key=Q
if %keycode%==0x3B00 && set key=F1
if %keycode%==0x3002 &; if %keylabel%==edit && set key=Ctrl+B ! if %keylabel%==menu && set key=B
if %keylabel%==edit && if %keycode%==0x2207 && set key=G
if %keycode%==0x3F00 &; if %keylabel%==menu && set key=R ! set key=F5
if %keycode%==0x9300 && set key=Ctrl+Del
#-# Ctrl+ A=0x1E01; B=0x3002; C=0x2E03; F=0x2106; H=0x2308 ;S=0x1F13; V=0x2F16; X=0x2D18; Alt+F4=0x6B00; F1=0x3B00 F5=0x3F00
endlocal && set %keylabel%=%key% && set key= && set keylabel= && goto :eof

:find
setlocal && set col=%col% &; if %col:~0,1%==F && set invcol=$[0x0F] ! if %col:~0,1%==E && set invcol=$[0x4E] ! set invcol=$[0xF%col:~0,1%]
if not %edit%==F || set STRING= && set STRING2= && set STRING3= && set STRING4= && set STRING5= && set string= && set strinlen= && set numline= && set pos16= && set numnext=
if %edit%==R && set REPLACE=
set numline= && set i=%~1
if %edit%==N && if %numnext%==0 && endlocal && goto :eof
if %edit%==N && if exist STRING &; call :findline "%mdread%" "%callsect%" "%STRING%" "%STRING2%" "%STRING3%" "%STRING4%" "%STRING5%"
if %edit%==N && endlocal && set message=%message% && set "STRING=%STRING%" && set "STRING2=%STRING2%" && set "STRING3=%STRING3%" && set "STRING4=%STRING4%" && set "STRING5=%STRING5%" && set "string=%string%" && set pos16=%pos16% && set strinlen=%strinlen% && set numline=%numline% && set numnext=%numnext% && goto :eof
call :findsetp "%i%" "%read%" "%edit%" "%mdbase%" "%mdread%" "%callsect%" "%invcol%" &; if not exist edit && endlocal && set edit=%edit% && set "message=%message%" && goto :eof
if %edit%==R && endlocal && set "REPLACE=%REPLACE%" && set strnlenR=%strnlenR% && set "message=%message%" && goto :eof
call :findline "%mdread%" "%callsect%" "%STRING%" "%STRING2%" "%STRING3%" "%STRING4%" "%STRING5%" "%string%"
endlocal && set edit=%edit% && set "message=%message%" && set "STRING=%STRING%" && set "STRING2=%STRING2%" && set "STRING3=%STRING3%" && set "STRING4=%STRING4%" && set "STRING5=%STRING5%" && set pos16=%pos16% && set strinlen=%strinlen% && set numline=%numline% && set numnext=%numnext% && set "string=%string%"
goto :eof

:findsetp
setlocal && set * && set col=%col% && set highcol=%highcol% && set lowcol=%lowcol% && set vmax=%vmax%
set i=%~1
if not "%~3"=="F" if not "%~2"=="F" || call :footer && call :cleanline "1" &; if exist i && echo -P:2403 -n %lowcol%Find: max 80 chars. Underscore: starting space. Leave: Escape (Alt+F: case) ! echo -P:2403 -n %lowcol%Find: max 80 chars. Case-sensitive search and find underscore. Leave: Escape
if "%~3"=="R" && call :footer && call :cleanline "1" && echo -P:2400 -n %lowcol%Replace string with max 510 chars. R: one dialog, Ctrl+R: again. Leave: Escape
set strinlen=0 && call Fn.5 0 1
if "%~2"=="F" && set /p "line1= Find > " &; set /a strinlen=%@retval%
if "%~3"=="F" && set /p "line1= Find > " &; set /a strinlen=%@retval%
if "%~3"=="R" && set /p "line1= Replace > " &; set /a strinlen=%@retval%
call :footer && call :cleanline "1" &; if "%~3"=="R" && echo -n $[] Replacing... ! echo -n $[] Searching...
if not exist line1 && set line1=zyx
#nextlines2avoidproblemsin'if "%line1%"=="zyx"'NEEDED:&;#
if %strinlen%==0 &; if "%line1%"=="zyx" && if "%~3"=="F" && endlocal && set STRING= && set STRING2= && set STRING3= && set STRING4= && set STRING5= && set string= && set strinlen= && set REPLACE= && set strnlenR= && set pos16= && set "message=Abort Find: no input given!" && set edit= && goto :eof
if %strinlen%==0 &; if "%line1%"=="zyx" && if "%~2"=="F" && endlocal && set STRING= && set STRING2= && set STRING3= && set STRING4= && set STRING5= && set string= && set strinlen= && set REPLACE= && set strnlenR= && set pos16= && set "message=echo -n No input!" && goto :eof
if %strinlen%==0 &; if "%line1%"=="zyx" && if "%~3"=="R" && endlocal && set REPLACE= && set strnlenR= && set "message=Abort Replace: no input given!" && set edit= && goto :eof
if not "%~3"=="R" && if exist strinlen && if not %strinlen%<=80 && set /a strinlen=80
set /A mdnofind=%~4+7
if %strinlen%>=1 && echo -n > (md)%mdnofind%+1 && raw dd if=(md)0x0+0x1F63 of=(md)%mdnofind%+1 bs=1 count=%strinlen% skip=0x3EA4C2 > nul
setlocal
set /A mdbase=%~4
set /A mdread=%~5
set /A callsect=%~6
set invcol=%~7
call :oddcheck "%0"
endlocal && set even=%even%
if %even%==N && endlocal && goto :findsetp
set even=
#BAD#set STRING=%line1:~0,80%
set line1=
if "%~3"=="R" && if exist strinlen && if not %strinlen%<=510 && set /a strinlen=510
set string=EXIST
set /A mdbase=%~4
set /A mdread=%~5
set /A callsect=%~6
if %strinlen%>=1 && set /A mdbase1=%mdbase%+4 &; set /A mdbase2=%mdbase1%+1 &; echo -n > (md)%mdbase2%+1
#-# new for REPLACE: no real limits, except max varlen=511; saved in mdrepl (mdbase+8), to be used in :replace with raw dd, not write anymore
if "%~3"=="R" && if %strinlen%>=1 && raw dd if=(md)%mdbase1%+1 of=(md)%mdbase2%+1 bs=1 count=%strinlen% skip=1 > nul
set /A mdrepl=%mdbase%+8 &; echo -n > (md)%mdrepl%+1
if "%~3"=="R" && raw dd if=(md)%mdbase1%+1 of=(md)%mdrepl%+1 bs=1 count=%strinlen% skip=1 > nul
if "%~3"=="R" && call Fn.5 0 1
if "%~3"=="R" && endlocal && set "REPLACE=dummy" && set strnlenR=%strinlen% && goto :eof
#-# new hexfind #-# strinlen b.v. 31
if %strinlen%>=1 && set sn=16
if %strinlen%>=17 && set sn=32
if %strinlen%>=33 && set sn=48
if %strinlen%>=49 && set sn=64
if %strinlen%>=65 && set sn=80
set /a strnmax=%sn%-16 &; if not exist strntail && if %strnmax%>=1 && set /a strntail=%strinlen%-%strnmax%
if not %strntail%<=16 && set /a strntail=%strntail%-16 &; if not %strntail%<=16 && set /a strntail=%strntail%-16 &; if not %strntail%<=16 && set /a strntail=%strntail%-16
if %strntail%==16 && set strntail=
if %strinlen%<=15 && set /a strntail=%strinlen%
:hexcall
echo -n > (md)%mdbase2%+1
#-#         16        =    32     - 16                             16      =          15          + 1
set /a strnmax=%sn%-16 &; set /a strnskip=%strnmax%+1
if exist strntail && raw dd if=(md)%mdbase1%+1 of=(md)%mdbase2%+1 bs=1 count=%strntail% skip=%strnskip% > nul
if not exist strntail && raw dd if=(md)%mdbase1%+1 of=(md)%mdbase2%+1 bs=1 count=16 skip=%strnskip% > nul
if exist strntail && raw write --offset=%strntail% (md)%mdbase2%+1 \x00\x00\x00\x00\x00 > nul
if not exist strntail && raw write --offset=16 (md)%mdbase2%+1 \x00\x00\x00\x00\x00 > nul
setlocal
#-#"33" = 3 ; "58" = X ; "78" = x : not working!
#-#nogo:       \    space  #     %     #!       "       $      &      '      *        +      -       /       :       ;       <      =      >      @      [       ]       ^     _       |       ~
#-#'\'First! "5C" "20" "23" "25" "21" "22" "24" "26" "27" "2A" "2B" "2D" "2F" "3A" "3B" "3C" "3D" "3E" "40" "5B" "5D" "5E" "5F" "7C" "7E"
call :findhex "5C" "20" "23" "25" "21" "22" "24" "26" "27" "2A" "2D" "2F" "3A" "3B" "3C" "3D" "3E" "40" "5B" "5D" "5E" "5F" "7C" "7E"
endlocal && set "STRING%sn%=%STRING%" && set STRING=
if not %sn%<=16 && set /a sn=%sn%-16 && set strntail= && goto :hexcall
endlocal && set "STRINGA=%STRING16%" && set "STRINGB=%STRING32%" && set "STRINGC=%STRING48%" && set "STRINGD=%STRING64%" && set "STRINGE=%STRING80%" && set strnlen=%strinlen% && set "stringA=%string%"
if %edit%==F && set "STRING=%STRINGA%" && set STRINGA= && set "STRING2=%STRINGB%" && set STRINGB= && set "STRING3=%STRINGC%" && set STRINGC= && set "STRING4=%STRINGD%" && set STRINGD= && set "STRING5=%STRINGE%" && set STRINGE= && set strinlen=%strnlen% && set strnlen= && set REPLACE= && set "string=%stringA%"
if %edit%==R && set "REPLACE=%STRINGA%%%STRINGB%%%STRINGC%%%STRINGD%%%STRINGE%" && set STRINGA= && set STRINGB= && set STRINGC= && set STRINGD= && set STRINGE= && set stringA= && set strnlenR=%strnlen% && set strnlen=
set stringA=
goto :eof

:findhex
if "%1"=="" && cat (md)%mdbase2%+1 | set STRING= && goto :eof
set message=%~1
set hexcatch=
cat --locate=\x%message% (md)%mdbase2%+1 > nul && set hexcatch=1
if %hexcatch%==1 && call :hexconv %message%
shift
goto :findhex

:hexconv
set numhex= ;; set skiphex=0
cat --locate=\x%message% (md)%mdbase2%+1 > nul
set /a numhex=%@retval%
:hexloop
if %numhex%==0 && goto :eof
cat --skip=%skiphex% --locate=\x%message% --number=1 (md)%mdbase2%+1 > nul
set skiphex=%?%
set /a skiphex=%skiphex%+1
set /a seekroom=%skiphex%+3
raw dd if=(md)%mdbase2%+1 of=(md)%mdbase2%+1 bs=1 skip=%skiphex% seek=%seekroom% > nul
set /a skipmin1=%skiphex%-1
cat --skip=%skipmin1% --locate=\x%message% --replace=\x5Cx%message% --number=1 (md)%mdbase2%+1 > nul
set /a numhex=%numhex%-1
if %numhex%==0 && goto :eof
set /a skiphex=%skiphex%+3
goto :hexloop

:findline
setlocal && set * && set mdbase=%mdbase% && set numnext=%numnext% && set i=%i% && set strinlen=%strinlen% && set findskip=%findskip% && set skip16=%findskip% && set linenum=%linenum%
set /A mem=%~1
set /A sect=%~2
if not exist STRING && if %strinlen%>=1 && set "STRING=%~3" && set /a strlen16=%strinlen%
if not exist STRING2 && if %strinlen%>=17 && set "STRING2=%~4" && set strlen16=16 && set /a strlen32=%strinlen%-16
if not exist STRING3 && if %strinlen%>=33 && set "STRING3=%~5" && set strlen16=16 && set strlen32=16 && set /a strlen48=%strinlen%-32
if not exist STRING4 && if %strinlen%>=49 && set "STRING4=%~6" && set strlen16=16 && set strlen32=16 && set strlen48=16 && set /a strlen64=%strinlen%-48
if not exist STRING5 && if %strinlen%>=65 && set "STRING5=%~7" && set strlen16=16 && set strlen32=16 && set strlen48=16 && set strlen64=16 && set /a strlen80=%strinlen%-64
if not exist string && set "string=%~8"
if not exist numnext && set numfind=0
if not exist skip16 && set skip16=0
set pos16= && set num16=1 && set maxfound=0 && set found=0
setlocal
:maxloop
set skip32= && set skip48= && set skip64= && set skip80= && set pos32= && set pos48= && set pos64= && set pos80= && set posdiff=
if %strinlen%>=1 && if %maxfound%==0 && cat --skip=%skip16% --locate%i%="%STRING%" --number=1 (md)%mem%+%sect% > nul &; set /A pos16=%?% &; if exist pos16 && if %strinlen%>=1 && if %strinlen%<=16 && set /a found=%found%+1
if %strinlen%>=1 && if %maxfound%>=1 && if %strinlen%>=1 && cat --skip=%skip16% --locate%i%="%STRING%" --number=%num16% (md)%mem%+%sect% > nul &; set /A pos16=%?% &; if exist pos16 && if %strinlen%>=1 && if %strinlen%<=16 && set /a found=%found%+1
if %strinlen%>=17 && if exist pos16 && set /A skip16=%pos16% && set /A skip32=%pos16%+0x10 && set /A skip48=%pos16%+0x20 && set /A skip64=%pos16%+0x30 && set /A skip80=%pos16%+0x40
if %strinlen%>=17 && if %strinlen%<=32 && if exist pos16 && cat --skip=%skip16% --locate%i%="%STRING%" --length=%strlen16% (md)%mem%+%sect% > nul &; set /A pos16=%?% &; if exist pos16 && cat --skip=%skip32% --locate%i%="%STRING2%" --length=%strlen32% (md)%mem%+%sect% > nul &; set /A pos32=%?% &; if exist pos32 && set /A posdiff=%pos32%-%pos16% &; if %posdiff%==0x10 && set /a found=%found%+1
if %strinlen%>=33 && if %strinlen%<=48 && if exist pos16 && cat --skip=%skip16% --locate%i%="%STRING%" --length=%strlen16% (md)%mem%+%sect% > nul &; set /A pos16=%?% &; if exist pos16 && cat --skip=%skip32% --locate%i%="%STRING2%" --length=%strlen32% (md)%mem%+%sect% > nul &; set /A pos32=%?% &; if exist pos32 && set /A posdiff=%pos32%-%pos16% &; if %posdiff%==0x10 && cat --skip=%skip48% --locate%i%="%STRING3%" --length=%strlen48% (md)%mem%+%sect% > nul &; set /A pos48=%?% &; if exist pos48 && set /A posdiff=%pos48%-%pos32% &; if %posdiff%==0x10 && set /a found=%found%+1
if %strinlen%>=49 && if %strinlen%<=64 && if exist pos16 && cat --skip=%skip16% --locate%i%="%STRING%" --length=%strlen16% (md)%mem%+%sect% > nul &; set /A pos16=%?% &; if exist pos16 && cat --skip=%skip32% --locate%i%="%STRING2%" --length=%strlen32% (md)%mem%+%sect% > nul &; set /A pos32=%?% &; if exist pos32 && set /A posdiff=%pos32%-%pos16% &; if %posdiff%==0x10 && cat --skip=%skip48% --locate%i%="%STRING3%" --length=%strlen48% (md)%mem%+%sect% > nul &; set /A pos48=%?% &; if exist pos48 && set /A posdiff=%pos48%-%pos32% &; if %posdiff%==0x10 && cat --skip=%skip64% --locate%i%="%STRING4%" --length=%strlen64% (md)%mem%+%sect% > nul &; set /A pos64=%?% &; if exist pos64 && set /A posdiff=%pos64%-%pos48% &; if %posdiff%==0x10 && set /a found=%found%+1
if %strinlen%>=65 && if %strinlen%<=80 && if exist pos16 && cat --skip=%skip16% --locate%i%="%STRING%" --length=%strlen16% (md)%mem%+%sect% > nul &; set /A pos16=%?% &; if exist pos16 && cat --skip=%skip32% --locate%i%="%STRING2%" --length=%strlen32% (md)%mem%+%sect% > nul &; set /A pos32=%?% &; if exist pos32 && set /A posdiff=%pos32%-%pos16% &; if %posdiff%==0x10 && cat --skip=%skip48% --locate%i%="%STRING3%" --length=%strlen48% (md)%mem%+%sect% > nul &; set /A pos48=%?% &; if exist pos48 && set /A posdiff=%pos48%-%pos32% &; if %posdiff%==0x10 && cat --skip=%skip64% --locate%i%="%STRING4%" --length=%strlen64% (md)%mem%+%sect% > nul &; set /A pos64=%?% &; if exist pos64 && set /A posdiff=%pos64%-%pos48% &; if %posdiff%==0x10 && cat --skip=%skip80% --locate%i%="%STRING5%" --length=%strlen80% (md)%mem%+%sect% > nul &; set /A pos80=%?% &; if exist pos80 && set /A posdiff=%pos80%-%pos64% &; if %posdiff%==0x10 && set /a found=%found%+1
if exist pos16 && if %maxfound%==0 && set /A skip16=%pos16%+%strlen16% && set pos16= && goto :maxloop
if %maxfound%==0 && if %found%>=1 && set /a maxfound=%found% && set num16=0 && set found=0
if not exist numnext && set /a numnext=%maxfound%
if not exist findnum && if exist numnext && set /a findnum=%maxfound%-%numnext%+1
if %maxfound%>=1 && if not %found%>=%findnum% && set /A skip16=%findskip% && set pos16= && set /a num16=%num16%+1 && goto :maxloop
endlocal && set maxfound=%maxfound% && set pos16=%pos16% && set found=%found% && set num16= && set skip16=
set /A mdnofind=%mdbase%+7
if %maxfound%>=1 if exist pos16 |; if exist string &; if %col:~0,1%==F && set invcol=$[0x07] ! set invcol=$[0x70] &; cat --locate=_\x20\x20 --length=3 (md)%mdnofind%+1 > nul && set "message=echo -n -e %invcol%\x20\x20\x20 && cat --skip=3 --length=50 (md)%mdnofind%+1" && set invcol= ! cat --locate=_\x20 --length=2 (md)%mdnofind%+1 > nul && set "message=echo -n -e %invcol%\x20\x20 && cat --skip=2 --length=51 (md)%mdnofind%+1" && set invcol= ! cat --locate=_ --length=1 (md)%mdnofind%+1 > nul && set "message=echo -n -e %invcol%\x20 && cat --skip=1 --length=52 (md)%mdnofind%+1" && set invcol= ! set "message=cat --length=53 (md)%mdnofind%+1" && set invcol=
if not %maxfound%>=1 && endlocal && set STRING= && set STRING2= && set STRING3= && set STRING4= && set STRING5= && set strinlen= && set numline= && set pos16= && set numnext= && set "message=%message%" && set string= && goto :eof
if not exist pos16 && endlocal && set STRING= && set STRING2= && set STRING3= && set STRING4= && set STRING5= && set string= && set strinlen= && set numline= && set pos16= && set numnext= && set "message=%message%" && goto :eof
cat --locate=\x0D\x0A --number=1 (md)%mem%+%sect% > nul &; set /A endline1=%?%
set numline=
if %pos16%>=%endline1% && cat --locate=\x0D\x0A --length=%pos16% (md)%mem%+%sect% > nul &; set /a numline=%@retval%
set /a numline=%numline%+1
if not %pos16%>=%endline1% && set numline=1
set /a numnext=%maxfound%-%found%
endlocal && set pos16=%pos16% && set numline=%numline% && set numnext=%numnext% && goto :eof

:replace
if not %strinlen%>=1 && goto :eof
if not exist pos16 && goto :eof
setlocal
call :writedd "mdreadcutselection" "%strinlen%" "%pos16%" &; set changed=Y
if %strnlenR%>=1 && call :writedd "mdreadroomselection" "%strnlenR%" "%pos16%"
set /A mdrepl=%mdbase%+8
if %strnlenR%>=1 && raw dd if=(md)%mdrepl%+1 of=(md)%mdread%+%callsect% bs=1 count=%strnlenR% seek=%pos16% > nul
endlocal && set changed=%changed% && set found=
if %numnext%==0 && set numnext=
if not exist numnext && set STRING= && set string= && set strinlen= && set REPLACE= && set strnlenR= && set pos16=
goto :eof

:writemd
setlocal && set * && set col=%col% && set highcol=%highcol% && set lowcol=%lowcol% && set vmax=%vmax% && set mdbase=%mdbase% && set mdread=%mdread% && set callsect=%callsect% && set even=%even% && set device=%device% && set "path=%path%" && set "file=%file%" && set skip=%skip% && set length=%length% && set edit=%edit% && set lastline=%lastline%
set /A mdbase=%mdbase%+0x4
if not %even%==Y && endlocal && goto :eof
cat --locate=\x22 --length=1 (md)%mdbase%+3 > nul &; set /A skipdq=0x1
if not %skipdq%==0x1 && endlocal && goto :eof
cat --locate=\x22\x0A\x00 (md)%mdbase%+3 > nul &; set /A baselen=%?%
if not exist baselen && endlocal && goto :eof
cat --skip=%baselen% --locate=\x22\x0A\x00 --replace=\x0D\x0A\x00 (md)%mdbase%+3 > nul
set /A baselen=%baselen%+1 && set /A mdbase=%mdbase%-0x4
call :writedd "mdbase22mdread" "%baselen%" "%skipdq%" "%skip%"
if "%~1"==":writeline" && set /A skip=%skip%+%baselen%
endlocal && set skip=%skip% && set zeros=%zeros% && set "message=%message%"
goto :eof

:oddcheck
set even=
setlocal && set invcol=$[0xF%col:~0,1%]
set even=N && set skiplen=
call Fn.5 0 1
if not "%~1"==":findsetp" && if %linelen%>=0x1 &; call :histline "1"
if "%~1"==":findsetp" && if %strinlen%>=0x1 &; call :histline "1"
set /A mdbase=%mdbase%+0x4
if not "%~1"==":findsetp" && if not %linelen%>=0x1 && echo -n > (md)%mdbase%+3 &; raw write --offset=0 (md)%mdbase%+3 \x22\x22\x0A\x00 > nul
set /A skiplen=%linelen%+0x1 && if "%~1"==":findsetp" && if exist strinlen && set /A skiplen=%strinlen%+0x1
cat --locate=\x22 --length=1 (md)%mdbase%+3 > nul && cat --skip=%skiplen% --locate=\x22\x0A\x00 (md)%mdbase%+3 > nul && set even=Y
if %even%==N && call Fn.5 0 1
if %even%==N && echo -n -e \x20%invcol%Input rejected, check (odd?) number of double qoutes! Press a key to continue
if %even%==N &; call :footer "call Fn.5 3 24"
if %even%==N && echo -n %highcol%Try$[] $[0xF0]_'$[] %highcol%or$[] $[0xF0]'_$[] %highcol%instead$[] %highcol%of$[] $[0xF0] "$[] %highcol%or$[] $[0xF0]" %highcol%;$[] %highcol%also$[] $[0xF0]>_$[] %highcol%instead$[] %highcol%of$[] $[0xF0]> && pause
if %even%==N && call :cleanline "1"
if %even%==N &; call Fn.5 3 1
if %even%==N && echo -n %highcol%Try again...
#-#Alt+F: no cheating with starting underscore _
if %even%==Y &; if "%~1"==":findsetp" && if exist i && cat --skip=1 --locate=\x5F --replace=\x20 --length=1 (md)%mdbase%+3 > nul ! if not "%~1"==":findsetp" && cat --skip=1 --locate=\x5F --replace=\x20 --length=1 (md)%mdbase%+3 > nul
endlocal && set even=%even% && set "message=%message%" &; if %even%==N && set line1= && set linelen=
goto :eof

:histline
#-# get entry from History Buffer and copy to memory: max 510 chars; argument of the call is entry-number in History Buffer
setlocal && set * && set mdbase=%mdbase%
set /a histline=%~1 && set address=0x3EA4C0 &; set entrylen=0x0 && raw read %address% > nul &; set /A entrylen=%@retval%
set /A mdbase=%mdbase%+0x4
:histloop
#-#searches for entry-number defined by var 'histline'
if not %address%<=0x3EC3FF && endlocal && set success=N && goto :eof
set /A entrylen=*%address% & 0xFFFF &; set /A entrylen=%entrylen%-0x2 &; if %entrylen%<=0x0 && endlocal && set success=N && goto :eof
set /a histline=%histline%-1 &; if not %histline%==0 && set /A address=%address%+%entrylen%+0x2 && goto :histloop
set /A buffskip=%address%+0x2 &; echo -n > (md)%mdbase%+3
if %entrylen%>=0x201 && set /A entrylen=0x201
raw dd if=(md)0x0+0x1F63 of=(md)%mdbase%+3 bs=1 count=%entrylen% skip=%buffskip% seek=1 > nul
raw write --offset=0 (md)%mdbase%+3 \x22 > nul
cat --locate=\x00 --replace=\x22\x0A\x00 --number=1 (md)%mdbase%+3 > nul
endlocal && set success=Y && goto :eof

:writedd
#-#mode1=file2mdread (1x); mode2=mdread2mdbase1 (8x); mode3=mdread2mdwrite (2x); mode4=mdwrite2mdread (1x); mode5=mdreadfull2mdwrite (1x); mode6=mdwritefull2mdread (1x); mode7=mdbase22mdread (1x); mode8=mdreadcutselection (4x); mode9=mdreadroomselection (1x); roomleft: if space less than needed no writing of mdbase2 or pasting of mdwrite to mdread. N.B. cleaning with 'echo -n > ' NOT good for bigger files (max 511 sectors???)!
setlocal && set * && set col=%col% && set highcol=%highcol% && set lowcol=%lowcol% && set vmax=%vmax% && set mdbase=%mdbase% && set mdread=%mdread% && set callsect=%callsect% && set device=%device% && set "path=%path%" && set "file=%file%" && set EOL=%EOL% && set edit=%edit% && set lastline=%lastline%
set "mode=%~1"
set /A filelen=%~2
set /A skip=%~3
set /A seek=%~4
cat --locate=\x0D\x0A (md)%mdread%+%callsect% > nul ;; set /A roomleft=%?% ;; set /A roomleft=0x3FDFF-%roomleft%
set /A mdwrite=%callsect% + 1 * 4 + %mdread%
set /A mddraft=%callsect% + 1 * 2 + %mdread% ;; call :cleanmem "%mddraft%" "%callsect%"
set /A mdbase1=%mdbase%+10
set /A mdbase2=%mdbase%+0x4
set /A mdbuf=%callsect% + 1 * 6 + %mdread% * 0x200 && set /A mdbuflen=256 * 0x400 &; call Fn.24 %mdbuf% 0x00 %mdbuflen%
if %mode%==file2mdread && call :cleanmem "%mdread%" "%callsect%"
if %mode%==file2mdread && if exist filelen && if %filelen%>=0x2 &; raw dd if=%device%%%path%%%file% of=(md)%mdread%+%callsect% bs=1 count=%filelen% skip=0 seek=0 buf=%mdbuf% buflen=%mdbuflen% > nul && set filelen=
if %mode%==mdread2mdbase1 && echo -n > (md)%mdbase1%+3
if %mode%==mdread2mdbase1 && if exist filelen && if not %filelen%<=0x2 &; raw dd if=(md)%mdread%+%callsect% of=(md)%mdbase1%+3 bs=1 count=%filelen% skip=%skip% seek=0x0 buf=%mdbuf% buflen=%mdbuflen% > nul
if %mode%==mdread2mdwrite && call :cleanmem "%mdwrite%" "%callsect%"
if %mode%==mdread2mdwrite && if exist filelen && if not %filelen%<=0x2 &; raw dd if=(md)%mdread%+%callsect% of=(md)%mdwrite%+%callsect% bs=1 count=%filelen% skip=%skip% seek=0x0 buf=%mdbuf% buflen=%mdbuflen% > nul
if %mode%==mdreadinsertEOL && call :cleanmem "%mdwrite%" "%callsect%" &; set /A filelen=%skip%+%filelen% &; raw dd if=(md)%mdread%+%callsect% of=(md)%mdwrite%+%callsect% bs=1 count=%filelen% skip=0x0 seek=0x0 buf=%mdbuf% buflen=%mdbuflen% > nul
if %mode%==mdreadinsertEOL && raw write --offset=%filelen% (md)%mdwrite%+%callsect% \x0D\x0A > nul
if %mode%==mdreadinsertEOL && set /A seekEOL=%filelen%+2 &; raw dd if=(md)%mdread%+%callsect% of=(md)%mdwrite%+%callsect% bs=1 skip=%filelen% seek=%seekEOL% buf=%mdbuf% buflen=%mdbuflen% > nul
if %mode%==mdreadinsertEOL && set mode=mdwritefull2mdread
if %mode%==mdwrite2mdread && call :fileleng "%mdwrite%" "%callsect%" "0x0" &; set /A filelenW=%filelen% &; set /A seekR=%skip%+%filelenW% && if not %filelenW%<=%roomleft% && set "message=%highcol%Not enough space in memory to paste in %file%, max 255.5 KB" && set mode=EXIT
if %mode%==mdwrite2mdread && call :fileleng "%mdread%" "%callsect%" "%skip%" &; set /A filelenR=%filelen% &; set /A seekR=%skip%+%filelenW%
if %mode%==mdwrite2mdread && if %skip%>=0x2 &; raw dd if=(md)%mdread%+%callsect% of=(md)%mddraft%+%callsect% bs=1 count=%skip% buf=%mdbuf% buflen=%mdbuflen% > nul
if %mode%==mdwrite2mdread && if %filelenR%>=0x2 &; raw dd if=(md)%mdread%+%callsect% of=(md)%mddraft%+%callsect% bs=1 count=%filelenR% skip=%skip% seek=%seekR% buf=%mdbuf% buflen=%mdbuflen% > nul
if %mode%==mdwrite2mdread && if %filelenW%>=0x2 &; raw dd if=(md)%mdwrite%+%callsect% of=(md)%mddraft%+%callsect% bs=1 count=%filelenW% seek=%skip% buf=%mdbuf% buflen=%mdbuflen% > nul
if %mode%==mdwrite2mdread && if not %skip%>=0x2 if not %filelenR%>=0x2 if not %filelenW%>=0x2 || set mode=mddraftfull2mdread
if %mode%==mdreadfull2mdwrite && call :cleanmem "%mdwrite%" "%callsect%"
if %mode%==mdreadfull2mdwrite && raw dd if=(md)%mdread%+%callsect% of=(md)%mdwrite%+%callsect% count=%callsect% buf=%mdbuf% buflen=%mdbuflen% > nul
if %mode%==mdwritefull2mdread && call :cleanmem "%mdread%" "%callsect%"
if %mode%==mdwritefull2mdread && raw dd if=(md)%mdwrite%+%callsect% of=(md)%mdread%+%callsect% count=%callsect% buf=%mdbuf% buflen=%mdbuflen% > nul
if %mode%==mdbase22mdread && if not %roomleft%>=0x600 && set "message=%highcol%Not enough space in %file%, 1536 Bytes needed" && set mode=EXIT
if %mode%==mdbase22mdread && set /A length=%filelen% &; set /A skipR=%seek% &; set /A seekR=%skipR%+%length% && set /A skipdq=%skip%
if %mode%==mdbase22mdread && if %skipR%>=0x2 &; raw dd if=(md)%mdread%+%callsect% of=(md)%mddraft%+%callsect% bs=1 count=%skipR% buf=%mdbuf% buflen=%mdbuflen% > nul
if %mode%==mdbase22mdread && call :fileleng "%mdread%" "%callsect%" "%skipR%" &; set /A filelenR=%filelen%
if %mode%==mdbase22mdread && if %filelenR%>=0x2 &; raw dd if=(md)%mdread%+%callsect% of=(md)%mddraft%+%callsect% bs=1 count=%filelenR% skip=%skipR% seek=%seekR% buf=%mdbuf% buflen=%mdbuflen% > nul
if %mode%==mdbase22mdread && if %edit%==E && cat --locate=\x0D\x0A (md)%mdread%+%callsect% > nul &; if %@retval%==1 && if %lastline%==1 && echo -n > (md)%mddraft%+%callsect%
#BAD????#if %mode%==mdbase22mdread && if %edit%==E && cat --locate=\x0D\x0A (md)%mdread%+%callsect% > nul &; if %@retval%==1 && echo -n > (md)%mddraft%+%callsect%
if %mode%==mdbase22mdread && if %length%>=0x2 &; raw dd if=(md)%mdbase2%+3 of=(md)%mddraft%+%callsect% bs=1 count=%length% skip=%skipdq% seek=%skipR% buf=%mdbuf% buflen=%mdbuflen% > nul
if %mode%==mdbase22mdread && echo -n > (md)%mdbase2%+3
if %mode%==mdbase22mdread && if not %skipR%>=0x2 if not %filelenR%>=0x2 if not %length%>=0x2 || set mode=mddraftfull2mdread
if %mode%==mdreadcutselection && set /A seek=%skip%+%filelen% &; call :fileleng "%mdread%" "%callsect%" "%seek%"
if %mode%==mdreadcutselection && if %skip%>=0x2 &; raw dd if=(md)%mdread%+%callsect% of=(md)%mddraft%+%callsect% bs=1 count=%skip% buf=%mdbuf% buflen=%mdbuflen% > nul
if %mode%==mdreadcutselection && if %filelen%>=0x2 &; raw dd if=(md)%mdread%+%callsect% of=(md)%mddraft%+%callsect% bs=1 count=%filelen% skip=%seek% seek=%skip% buf=%mdbuf% buflen=%mdbuflen% > nul
if %mode%==mdreadcutselection && if not %skip%>=0x2 if not %filelen%>=0x2 || set mode=mddraftfull2mdread
if %mode%==mdreadroomselection && set /A seek=%skip%+%filelen% &; call :fileleng "%mdread%" "%callsect%" "%skip%"
if %mode%==mdreadroomselection && if %skip%>=0x2 &; raw dd if=(md)%mdread%+%callsect% of=(md)%mddraft%+%callsect% bs=1 count=%skip% buf=%mdbuf% buflen=%mdbuflen% > nul
if %mode%==mdreadroomselection && if %filelen%>=0x2 &; raw dd if=(md)%mdread%+%callsect% of=(md)%mddraft%+%callsect% bs=1 count=%filelen% skip=%skip% seek=%seek% buf=%mdbuf% buflen=%mdbuflen% > nul
if %mode%==mdreadroomselection && if not %skip%>=0x2 if not %filelen%>=0x2 || set mode=mddraftfull2mdread
if %mode%==mdreadfull2mddraft && call :cleanmem "%mddraft%" "%callsect%"
if %mode%==mdreadfull2mddraft && raw dd if=(md)%mdread%+%callsect% of=(md)%mddraft%+%callsect% count=%callsect% buf=%mdbuf% buflen=%mdbuflen% > nul
if %mode%==mddraftfull2mdread && call :cleanmem "%mdread%" "%callsect%"
if %mode%==mddraftfull2mdread && raw dd if=(md)%mddraft%+%callsect% of=(md)%mdread%+%callsect% count=%callsect% buf=%mdbuf% buflen=%mdbuflen% > nul && set changed=Y
endlocal && set changed=%changed% && set "message=%message%" && set zeros=%zeros% && goto :eof

:cleanmem
setlocal && set *
set /A basemd=%~1
set /A memrange=%~2
set /A skipmem=%~3
set /A basemd=%basemd% * 0x200 + %skipmem%
set /A memrange=%memrange% * 0x200 - %skipmem%
call Fn.24 %basemd% 0x00 %memrange%
endlocal && goto :eof

:cleanline
setlocal && set * && set col=%col% && set highcol=%highcol% && set lowcol=%lowcol% && set vmax=%vmax%
set /a x0=%~1 && set /a x1=%~1
set x2=%~2
if not exist x2 && set /a x2=%x1%
if "%~3"=="" && set color=$[] ! set color=%~3
:loopcleanline
if not "%~3"=="CLEANEND" && call Fn.5 0 %x1% ! call Fn.5 79 %x1%
if not "%~3"=="CLEANEND" && echo -n -e %color%\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20 && if "%~3"=="$[0x00]" && echo -n -e %~3\x20 ! echo -n -e $[]\x20
set /a x1=%x1%+1
if %x1%<=%x2% && goto :loopcleanline
if not %x2%>=29 && call Fn.5 0 %x0%
endlocal && goto :eof

:header
setlocal && set function= && set message= && set filelen= && set zeros=
set "function=%~1"
if not exist file && cat --hex --locate=\x00 --length=1 (md)%mdread%+%callsect% > nul || set file=UNTITLED
if not "%function%"=="SOURCE" if not "%function%"=="BROWSE" if not "%function%"=="DEVICE" if not "%function%"=="HELP" if not "%function%"=="INFO" || set file=
set "message=%~2" &; if "%message:~-1,1%"=="/" && if not "%~3"=="UNTITLED" && set file=
if exist file && if not %function%==CHECK && if not %function%==VALIDATE && call :fileleng "%mdread%" "%callsect%" &; set /a filelen=%filelen% &; if exist filelen && if not %EOL%==\x0D\x0A && cat --locate=\x0D (md)%mdread%+%callsect% > nul &; set /a filelen=%filelen%-%@retval%
if exist filelen &; if %filelen%>=0x1 && set filelen=%filelen% ! set filelen=
if exist filelen &; if %EOL%==\x0D\x0A && set filetype=DOS ! if %EOL%==\x0A && set filetype=UNIX ! if %EOL%==\x0D && set filetype=MAC ! set filetype=
if exist file &; if %file%==UNTITLED && set "file= %file%" ! set "file=%file%" &; set "title=%device%%%path%%%file%" &; if %changed%==Y && set function=*%function%
if exist message && set title=%message% && if not "%~3"=="" && set "title=%message% %~3"
if not %edit%==M if not %edit%==XX || if not %function%==OPEN && if not %function%==DEVICE && if not %function%==PATH && if not "%function%"=="SAVE AS" && if not %function%==SAVE && set function=FILE
echo -P:0000 -n $[]--------------------------------------------------------------------------------
echo -P:0200 -n $[]--------------------------------------------------------------------------------
if exist filelen &; if %filelen%<=999 && set filesize=%filelen% ! if %filelen%<=9999 && set filesize=%filelen:~0,1%,%filelen:~-3,3% ! if %filelen%<=99999 && set filesize=%filelen:~0,2%,%filelen:~-3,3% ! if %filelen%<=999999 && set filesize=%filelen:~0,3%,%filelen:~-3,3%
if exist filelen && set "fultitle=%function% %title% %filetype% %filesize%" &; set /a titlelen=%@retval%
if not exist filelen && set "fultitle=%function% %title%" &; set /a titlelen=%@retval%
if %titlelen%<=74 && set /a offset=80-%titlelen%/2 ! set "fultitle=%fultitle:~0,35%...%fultitle:~-36,36%"
if %titlelen%<=74 && call Fn.5 %offset% 2 ! call Fn.5 1 2
echo -n $[]%fultitle%
endlocal && set zeros=%zeros%
goto :eof

:footer
setlocal && set * && set col=%col% && set highcol=%highcol% && set lowcol=%lowcol% && set vmax=%vmax% && set "message=%~1"
echo -P:2400 -n $[]-------------------------------------------------------------------------------
if exist message &; %message%
endlocal && goto :eof

:open
setlocal && set * && set mdbase=%mdbase% && set mdread=%mdread% && set callsect=%callsect% && set col=%col% && set vmax=%vmax% && set highcol=%highcol% && set lowcol=%lowcol% && set menu=%menu% && set edit=%edit% && set device=%device% && set "path=%path%" && set "file=%file%" && set changed=%changed% && set EOL=%EOL% && set openfile=%openfile% && set donefile=%donefile% && set gotoline=%gotoline%
if %edit%==XX && set menu=E
if %write%==XX && set menu=W
call :footer
:openmenu
call :cleanline "3" "23"
if exist file && call :header "OPEN" "current: %device%%%path%%%file%"
if not exist file && call :header "OPEN" "UNTITLED folder: %device%%%path%"
setlocal && set * && set openfile=%openfile% && set mdbase=%mdbase% && set gotoline=%gotoline% && set device=%device% && set "path=%path%" && set "file=%file%" && set highcol=%highcol%
if %openfile%>=0 && set /A mdfile=%mdbase%+30 && set c=%openfile% && set textcol=$[] && set numfile=0
set "path=%path%" &; set /a pathlen=%@retval%
call Fn.5 0 3
:loopopenmenu
if not "%~1"=="LASTRUN" && cat --skip=18 (md)%mdfile%+1 | set open=
if %pathlen%<=16 &; if exist gotoline && cat --locatei=%device:~0,16% (md)%mdfile%+1 > nul && cat --locatei=%path:~0,16% (md)%mdfile%+1 > nul && cat --locatei=%file:~0,16% (md)%mdfile%+1 > nul && cat --locate=gotoline= (md)%mdfile%+1 > nul && cat --locate=gotoline= --replace=gotoline=%gotoline%\x20>\x20nul\x0D\x0A\x00\x00\x00 (md)%mdfile%+1 > nul &; if not "%~1"=="LASTRUN" && set gotoline= ! if not %numfile%==0 && set history=N
if %pathlen%>=17 &; if exist gotoline && cat --locatei=%device:~0,16% (md)%mdfile%+1 > nul && cat --locatei=%path:~16,16% (md)%mdfile%+1 > nul && cat --locatei=%path:~0,16% (md)%mdfile%+1 > nul && cat --locatei=%file:~0,16% (md)%mdfile%+1 > nul && cat --locate=gotoline= (md)%mdfile%+1 > nul && cat --locate=gotoline= --replace=gotoline=%gotoline%\x20>\x20nul\x0D\x0A\x00\x00\x00 (md)%mdfile%+1 > nul &; if not "%~1"=="LASTRUN" && set gotoline= ! if not %numfile%==0 && set history=N
if %pathlen%<=16 &; if exist gotoline && cat --locatei=%device:~0,16% (md)%mdfile%+1 > nul && cat --locatei=%path:~0,16% (md)%mdfile%+1 > nul && cat --locatei=%file:~0,16% (md)%mdfile%+1 > nul && cat --locate=gotoline= (md)%mdfile%+1 > nul || echo -e set\x20/a\x20gotoline=%gotoline%\x20>\x20nul\x0D\x0A >> (md)%mdfile%+1 &; if not "%~1"=="LASTRUN" && set gotoline= ! if not %numfile%==0 && set history=N
if %pathlen%>=17 &; if exist gotoline && cat --locatei=%device:~0,16% (md)%mdfile%+1 > nul && cat --locatei=%path:~16,16% (md)%mdfile%+1 > nul && cat --locatei=%path:~0,16% (md)%mdfile%+1 > nul && cat --locatei=%file:~0,16% (md)%mdfile%+1 > nul && cat --locate=gotoline= (md)%mdfile%+1 > nul || echo -e set\x20/a\x20gotoline=%gotoline%\x20>\x20nul\x0D\x0A >> (md)%mdfile%+1 &; if not "%~1"=="LASTRUN" && set gotoline= ! if not %numfile%==0 && set history=N
if "%~1"=="LASTRUN" && set /a c=%c%-1 &; if not %history%==N && if %c%>=0 && set /A mdfile=%mdfile%+1 && goto :loopopenmenu ! goto :eof
%open:~1,-1% ;; set /a c=%c%-1 &; if %c%>=0 && set /A mdfile=%mdfile%+1 && set /a numfile=%numfile%+1 && goto :loopopenmenu
endlocal && set gotoline=%gotoline%
set key= && set openmenu= && set cursorB= && set tryagain= && set nogetfil=
echo -P:2467 -n -%lowcol%Help: F1$[]-- && call :cleanline "1"
if exist message && call :footer && echo -P:2403 -n %message% &; if not /i "%message:~0,4%"=="save" if not /i "%message:~0,17%"=="file is not saved" || set message=
if exist message1 && call :footer "call Fn.5 3 24" &; %message1% &; set message1=
call :Fn.5 0 1 && set openmenu=zyx && set keycode= &; echo -n $[] %highcol%F$[]ile %highcol%P$[]ath %highcol%B$[]rowse %highcol%D$[]evice %highcol%V$[]olumes %highcol%M$[]enu && call :Fn.5 0 99 && pause --wait=180 --test-key &; set /A keycode=%@retval% &; call :keycodes "%keycode%" "openmenu" &; set keycode= &; if not %openmenu%==F1 && call :cleanline "1" ! set openmenu=%openmenu% &; if %openmenu%==zyx && set openmenu=F
call :footer && call Fn.5 0 3
if %openmenu%==B &; call :browsels "BROWSE" &; if exist choice && set openmenu=M && if not exist gotoline && set gotoline=1
if %openmenu%==F &; call :openfile &; if %tryagain%==Y && goto :openmenu ! set openmenu=M && set nogetfil=
if %openmenu%==D &; call :opendevice "OPEN" &; call :cleanline "3" "23" && call Fn.5 0 3
if %openmenu%==V && call :showdev && call :footer
if %openmenu%==P &; call :openpath "OPEN"
checkrange 0:9 calc %openmenu% > nul && set /A mdfile=%mdbase%+30+%openmenu% &; call (md)%mdfile%+1 && call :footer "call Fn.5 0 24" &; call :Fn.5 3 24 && set nogetfil=Y && call :checkfile &; if exist file && set openmenu=M ! if %tryagain%==Y && goto :openmenu
if %openmenu%==M && endlocal && set device=%device% && set "path=%path%" && set "file=%file%" && set EOL=%EOL% && set openfile=%openfile% && set donefile=%donefile% && set gotoline=%gotoline% && set edit=%edit% && set changed=%changed% && goto :eof
if %openmenu%==F1 && call :cleanline "3" "23" && call :Fn.5 0 3 && setlocal && call :help "OPEN" &; endlocal && call :cleanline "3" "23" && set openmenu=
goto :openmenu

:browsels
setlocal && set * && set mdbase=%mdbase% && set mdread=%mdread% && set callsect=%callsect% && set col=%col% && set vmax=%vmax% && set highcol=%highcol% && set lowcol=%lowcol% && set menu=%menu% && set edit=%edit% && set device=%device% && set "path=%path%" && set "file=%file%" && set changed=%changed% && set EOL=%EOL% && set openfile=%openfile% && set donefile=%donefile% && set gotoline=%gotoline%
set /A mdbuf=%callsect% + 1 * 6 + %mdread% * 0x200 && set /A mdbuflen=256 * 0x400 &; call Fn.24 %mdbuf% 0x00 %mdbuflen%
set /A mdls=%mdread%+%callsect%+1 &; echo -n > (md)%mdls%+255
set /A mdls2=%mdls%+0x100 &; echo -n > (md)%mdls2%+255
set oldevice=%device% && set "oldpath=%path%" && set "oldfile=%file%" && set file= && set oldgoto=%gotoline% && set gotoline=
cat --locate=\x4E\x54\x46\x53\x20\x20\x20\x20 --length=8 --skip=3 %device%+1 > nul && set NTFS=Y
if %col:~0,1%==F && set spacecol=$[0xF7] ! set spacecol=$[0x%col:~0,1%%%col:~0,1%]
:browselsmenu
set "oldpath2=%path%"
call :header "BROWSE" "%device%%%path%" && call :cleanline "3" "23" && call :cleanline "1" && echo -n $[] Browsing... && call Fn.5 0 3
if not "%path:~-1,1%"=="/" && set "path=%path%/"
if exist choice && if %l%==0 && if %parent%==Y && cat --locate=\x0A (md)%mdls2%+255 > nul &; set /a c=%@retval% && raw dd if=(md)%mdls2%+255 of=(md)%mdls%+255 buf=%mdbuf% buflen=%mdbuflen% > nul && echo -n > (md)%mdls2%+255 && set dirs=%olddirs% && set files=%oldfiles% && set olddirs= && set oldfiles= && set parent= && goto :looplsend
if exist choice && if %l%>=1 && if not "%path%"=="%oldpath%" && raw dd if=(md)%mdls%+255 of=(md)%mdls2%+255 buf=%mdbuf% buflen=%mdbuflen% > nul && set olddirs=%dirs% && set oldfiles=%files% && set parent=Y
echo -n > (md)%mdls%+255
if not "%path%"=="/" && pause --wait=0 $[]0%spacecol% %highcol%%%path:~0,-1% > (md)%mdls%+255 && raw cat --locate=/ (md)%mdls%+255 > nul &; set /a slashnum=%@retval% &; if %slashnum%==1 && pause --wait=0 $[]0%spacecol% %highcol%/ > (md)%mdls%+255
if not "%path%"=="/" && if %slashnum%>=2 && raw cat --locate=/ (md)%mdls%+255 > nul &; set /a slashpos=%?% &; set /a slashpos=%slashpos%-19 &; call pause --wait=0 $[]0%spacecol% %highcol%%%^path:~0,%slashpos%%% > (md)%mdls%+255
set c=1
set dirs=0 && set files=0
call :footer && echo -P:2403 -n -e %lowcol%Folders: 0 Files: 0\x20
set mode=D && ls %device%%%path% | call :loopls
set mode=F && ls %device%%%path% | call :loopls
:looplsend
set p=1 && set foundnum= && set skipend= && set foundvar= && set prezero= && set choice=
set l=1 && if not "%path%"=="/" && raw cat --locate=$[]0%spacecol%\x20 (md)%mdls%+255 > nul && set l=0
raw cat --locate=\x00 (md)%mdls%+255 > nul &; set /a skipend=%?%
if not exist skipend && raw cat --locate=\x0A (md)%mdls%+255 > nul &; set /a skipend=%?%
:loopmd
set f=%p% && set mode=F
if %l%<=%c% && raw cat --locate=$[]%l%$[0x%col:~0,1% (md)%mdls%+255 > nul &; set /a foundnum=%?%
if exist foundnum && raw cat --skip=%foundnum% (md)%mdls%+255 | set foundvar=
if exist foundnum && if exist foundvar && raw cat --skip=%foundnum% --locate=%spacecol%\x20%highcol% --length=22 (md)%mdls%+255 > nul && set mode=D
if exist foundnum && if exist foundvar &; if %l%<=9 && set prezero=000 ! if %l%<=99 && set prezero=00 ! if %l%<=999 && set prezero=0 ! if %l%<=9999 && set prezero=
if exist foundnum && if exist foundvar && if exist choice && echo -n > (md)%mdbase%+1 && pause --wait=0 %foundvar% > (md)%mdbase%+1 && raw cat --locate=\x5Ct --number=1 (md)%mdbase%+1 > nul &; set /a namelen=%?% &; raw cat --length=%namelen% (md)%mdbase%+1 | set foundvar= &; if "%foundvar:~-4,4%"=="\x20" && set "foundvar=%foundvar:~0,-4%"
if %mode%==D && if exist foundnum && if exist foundvar && if exist choice && if %l%==0 && set choice=%prezero%%%foundvar% &; set "path=%choice:~22%" && set file= && goto :browselsmenu
if %mode%==D && if exist foundnum && if exist foundvar && if exist choice && if %l%>=1 && set choice=%prezero%%%foundvar% &; if "%path:~-1,1%"=="/" && set "path=%path%%%choice:~22%" ! set "path=%path%/%choice:~22%" &; call :checkpath "OPEN" "%~1" &; if "%path%"=="%oldpath2%" && set file= && set empty= && set choice= && set l= && call :Fn.5 0 3 && set lsmenu= && goto :lsmenu ! if not %SFN%==N && goto :browselsmenu ! set "path=%oldpath2%" && goto :browselsmenu
if %mode%==F && if exist foundnum && if exist foundvar && if exist choice && if %l%>=1 && set choice=%prezero%%%foundvar% &; set "file=%choice:~22%" &; if "%path:~-1,1%"=="/" && set "path=%path%" ! if not "%path:~-1,1%"=="/" && set "path=%path%/" &; call :checkfile "BROWSE" "%~1" &; set /a l=%e%-1 &; if not exist file && goto :lsmenu ! endlocal && set device=%device% && set "path=%path%" && set "file=%file%" && set choice=%choice% && set EOL=%EOL% && set openfile=%openfile% && set donefile=%donefile% && set changed=%changed% && set gotoline= && goto :eof
if exist foundnum && if exist foundvar && if %l%>=1 && if exist prezero && echo -e %lowcol%%%prezero%%%foundvar%
if exist foundnum && if exist foundvar && if %l%>=1 && if not exist prezero && echo -e %foundvar%
if exist foundnum && if exist foundvar && if %l%==0 && echo -e %lowcol%%%prezero%%%highcol%%0 ..
if %p%==21 && set p=0 && goto :lsmenu
if exist foundnum && if not %foundnum%>=%skipend% && set /a l=%l%+1 && set /a p=%p%+1 && set foundnum= && set foundvar= && goto :loopmd
:lsmenu
if %l%<=%c% && set /a e=%l%+1 &; raw cat --locate=$[]%e%$[0x%col:~0,1% (md)%mdls%+255 > nul || set /a foundnum=%skipend%
if "%path%"=="/" &; if %c%<=21 && if %l%<=21 && set "echomsg=C/Enter" ! if not %c%<=21 && if %l%<=21 && set "echomsg=C/Enter PageDown End" ! if not %c%<=21 && if not %l%<=21 && if not %foundnum%>=%skipend% && set "echomsg=C/Enter PageDown/Up Home/End" ! if not %c%<=21 && if not %l%<=21 && if %foundnum%>=%skipend% && set "echomsg=C/Enter PageUp Home"
if not "%path%"=="/" &; if %c%<=21 && if %l%<=21 && set "echomsg=C/Enter B/Backspace" ! if not %c%<=21 && if %l%<=21 && set "echomsg=C/Enter B/Backspace PageDown End" ! if not %c%<=21 && if not %l%<=21 && if not %foundnum%>=%skipend% && set "echomsg=C/Enter B/Backspace PageDown/Up Home/End" ! if not %c%<=21 && if not %l%<=21 && if %foundnum%>=%skipend% && set "echomsg=C/Enter B/Backspace PageUp Home"
call :header "BROWSE" "%device%%%path%" && call :footer "call Fn.5 0 24" &; if not exist message1 && echo -P:2403 -n -e %lowcol%Folders: %dirs% Files: %files% <=255.5KB %echomsg% ! if exist choice && call :Fn.5 3 24 && %message1% && pause --wait=5 && set message1= && call :footer "call Fn.5 0 24" && echo -P:2403 -n %lowcol%Folders: %dirs% Files: %files% <=255.5KB %echomsg%
#NOTGOOD#call :header "BROWSE" "%device%%%path%" && call :footer "call Fn.5 0 24" &; echo -P:2403 -n -e %lowcol%Folders: %dirs% Files: %files% <=255.5KB %echomsg% && if exist choice && if exist message1 && call :footer "call Fn.5 3 24" &; %message1% && pause --wait=5 && set message1= && call :footer "call Fn.5 0 24" && echo -P:2403 -n %lowcol%Folders: %dirs% Files: %files% <=255.5KB  C/Enter D/PageDown U/PageUp H/Home E/End ! echo -P:2403 -n -e %lowcol%Folders: %dirs% Files: %files% <=255.5KB C/Enter B/Backspace D/PageDown U/PageUp H/Home E/End && if exist choice && if exist message1 && call :Fn.5 3 24 &; %message1% && pause --wait=7 && set message1= && call :footer "call Fn.5 0 24" && echo -P:2403 -n %lowcol%Folders: %dirs% Files: %files% <=255.5KB %echomsg%
call :Fn.5 0 1 && echo -n -e $[] %highcol%C$[]hoose\x20\x20\x20\x20
if %c%<=21 && if %l%<=21 && if not %foundnum%>=%skipend% &; if "%path%"=="/" && echo -P:0108 -n -e %highcol%M$[]enu\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20 ! echo -P:0108 -n -e %highcol%C$[]hoose %highcol%B$[]ack %highcol%M$[]enu\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20 &; set lsmenu= && call :Fn.5 0 99 && pause --test-key --wait=180 &; set /A keycode=%@retval% &; call :keycodes "%keycode%" "lsmenu" &; call :cleanline "1" &; if %lsmenu%==D && set lsmenu= ! if %lsmenu%==U && set lsmenu= ! if %lsmenu%==zyx && set lsmenu=C
if not %c%<=21 && if %l%<=21 && if not %foundnum%>=%skipend% &; if "%path%"=="/" && echo -P:0108 -n -e %highcol%D$[]own %highcol%E$[]nd %highcol%M$[]enu\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20 ! echo -P:0108 -n -e %highcol%B$[]ack %highcol%D$[]own %highcol%E$[]nd %highcol%M$[]enu\x20\x20\x20\x20\x20\x20\x20\x20 &; set lsmenu= && call :Fn.5 0 99 && pause --test-key --wait=180 &; set /A keycode=%@retval% &; call :keycodes "%keycode%" "lsmenu" &; call :cleanline "1" &; if not %lsmenu%==U if not %lsmenu%==H || set lsmenu= ! if %lsmenu%==zyx && set lsmenu=C
if not %l%<=21 && if not %foundnum%>=%skipend% &; if "%path%"=="/" && echo -P:0108 -n -e %highcol%D$[]own %highcol%U$[]p %highcol%H$[]ome %highcol%E$[]nd %highcol%M$[]enu\x20\x20\x20\x20\x20 ! echo -P:0108 -n -e %highcol%B$[]ack %highcol%D$[]own %highcol%U$[]p %highcol%H$[]ome %highcol%E$[]nd %highcol%M$[]enu &; set lsmenu= && call :Fn.5 0 99 && pause --test-key --wait=180 &; set /A keycode=%@retval% &; call :keycodes "%keycode%" "lsmenu" &; call :cleanline "1" &; if %lsmenu%==zyx && set lsmenu=C
if %l%<=21 && if %foundnum%>=%skipend% &; if "%path%"=="/" && echo -P:0108 -n -e %highcol%M$[]enu\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20 ! echo -P:0108 -n -e %highcol%B$[]ack %highcol%M$[]enu\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20 &; set lsmenu= && call :Fn.5 0 99 && pause --test-key --wait=180 &; set /A keycode=%@retval% &; call :keycodes "%keycode%" "lsmenu" &; call :cleanline "1" &; if not %lsmenu%==D if not %lsmenu%==U || set lsmenu= ! if %lsmenu%==zyx && set lsmenu=C
if not %l%<=21 && if %foundnum%>=%skipend% &; if "%path%"=="/" && echo -P:0108 -n -e %highcol%U$[]p %highcol%H$[]ome %highcol%M$[]enu\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20 ! echo -P:0108 -n -e %highcol%B$[]ack %highcol%U$[]p %highcol%H$[]ome %highcol%M$[]enu\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20 &; set lsmenu= && call :Fn.5 0 99 && pause --test-key --wait=180 &; set /A keycode=%@retval% &; call :keycodes "%keycode%" "lsmenu" &; call :cleanline "1" &; if not %lsmenu%==D if not %lsmenu%==E || set lsmenu= ! if %lsmenu%==zyx && set lsmenu=C
if %lsmenu%==M && if not exist file && if /i %device%==%oldevice% && if /i "%path%"=="%oldpath%" && set "file=%oldfile%" && set gotoline=%oldgoto%
#OLD#if %lsmenu%==M && if not exist file &; if not "%~1"=="SAVEAS" && set "path=%oldpath%" && set "file=%oldfile%"
if %lsmenu%==M && endlocal && set device=%device% && set "path=%path%" && set "file=%file%" && set edit=%edit% && set EOL=%EOL% && set changed=%changed% && set tryagain=%tryagain% && set gotoline=%gotoline% && call :footer && goto :eof
if %lsmenu%==C && if %dirs%==0 && if %files%==0 && set lsmenu=
set choice= && if %lsmenu%==C && call :footer && call :Fn.5 0 1 && echo -P:2403 -n %lowcol%Press Escape to cancel && set /p "choice= Give number > " &; set /a l=%choice% && set foundnum= && set foundvar= && call :cleanline "1" &; if "%~1"=="SAVEAS" && goto :loopmd ! echo -n $[] Loading... && goto :loopmd
if %lsmenu%==B && set choice=0 &; set l=%choice% && set foundnum= && set foundvar= && goto :loopmd
if not %lsmenu%==C if not %lsmenu%==B || if not exist choice && goto :lsmenu
if %lsmenu%==D && if exist foundnum && if not %foundnum%>=%skipend% && call :cleanline "3" "23" && call Fn.5 0 3
if %lsmenu%==E && if exist foundnum && if not %foundnum%>=%skipend% && if "%path%"=="/" && set /a l=%c% - 1 / 21 * 21 &; set /a e=%l%+1 &; set p=0 && set f=21 && call :cleanline "3" "23" && call Fn.5 0 3
if %lsmenu%==E && if exist foundnum && if not %foundnum%>=%skipend% && if not "%path%"=="/" && set /a l=%c% / 21 * 21 - 1 &; set /a e=%l%+1 &; set p=0 && set f=21 && call :cleanline "3" "23" && call Fn.5 0 3
if %lsmenu%==H && if not %l%<=21 &; if "%path%"=="/" && set l=1 && set p=1 && set e= ! set l=0 && set p=1 && set e= &; call :cleanline "3" "23" && call :Fn.5 0 3 && set foundnum= && set foundvar= &; goto :loopmd
if %lsmenu%==U && if not %l%<=21 && set /a l=%l%-20-%f% && call :cleanline "3" "23" && call :Fn.5 0 3 && set p=1 && set foundnum= && set foundvar= &; goto :loopmd
if not %lsmenu%==D && if not %lsmenu%==U && if not %lsmenu%==C && if not %lsmenu%==M && if not %lsmenu%==H && if not %lsmenu%==E && goto :lsmenu
if exist foundnum && if not %foundnum%>=%skipend% && set /a l=%l%+1 && set /a p=%p%+1 && set foundnum= && set foundvar= && call :cleanline "3" "23" && call :Fn.5 0 3 && goto :loopmd
goto :lsmenu

:loopls
if "%1"=="" && goto :eof
#OLD#if %c%==2851 && echo -P:2470 -n c=%c% && pause && goto :eof
raw cat --skip=130510 --locate=\x00 --length=3 (md)%mdls%+255 > nul || goto :eof
#OLD#raw cat --skip=110000 --locate=\x00 --length=3 (md)%mdls%+210 > nul || echo -P:2403 -n c=%c% && goto :eof
set filesize= && debug msg=1
raw cat --length=0 %device%%%path%%%1 | set filesize=
debug msg=0
if %mode%==F && if not exist filesize && shift && goto :loopls
if exist filesize && set /a filesize=%filesize:~12% &; if %filesize%==0 &; if not %NTFS%==Y && shift && goto :loopls ! if not %mode%==D && shift && goto :loopls
if %mode%==D && if %filesize%>=1 && shift && goto :loopls
if %mode%==D && call :checksfn FILE "%~1" Q &; if %SFN%==N && shift && set SFN= && goto :loopls
if %mode%==D && set /a dirs=%dirs%+1 &; pause --wait=0 $[]%c%%%spacecol% %highcol%%%~1 >> (md)%mdls%+255 && echo -P:2403 -n -e %lowcol%Folders: %dirs% Files: %files%\x20 && set /a c=%c%+1 && shift && goto :loopls
if not %filesize%<=0x3FDFF && shift && goto :loopls
call :checksfn FILE "%~1" Q &; if %SFN%==N && shift && set SFN= && goto :loopls
set "FILE=%~1" &; if %@retval%<=9 && set space=\t\x20\t ! set space=\x20\t
if %mode%==F && set /a files=%files%+1 &; pause --wait=0 $[]%c%%%spacecol% $[0x%col%]%~1%space%%%filesize% >> (md)%mdls%+255 && echo -P:2403 -n -e %lowcol%Folders: %dirs% Files: %files%\x20 && set /a c=%c%+1 && shift && goto :loopls
shift && goto :loopls

:openfile
setlocal
set "oldfile=%file%" && set "oldpath=%path%"
if exist file && set /A mdbase1=%mdbase%+10
if exist file && echo -n > (md)%mdbase1%+3
if exist file && set "file=%file%" &; set /a length=%@retval%+2
if exist file && pause --wait=0 %file% > (md)%mdbase1%+3
if exist file && cat --locate=\x0A\x00 --replace=\x0D\x0A --length=%length% (md)%mdbase1%+3 > nul
if exist file && if not %length%<=2 && call :keybuff "%pathlen%"
if exist file && if "%~1"=="SAVEAS" && if not %length%<=2 && call :Key2Bios "0x4800"
call :Fn.5 0 1 && call :footer && echo -P:2403 -n %lowcol%Press Escape to leave dialog
set file=zyx &; set /p /u "file= Give 8+3 FILE-name > " && call :cleanline "1"
if "%file%"=="zyx" && echo -P:2403 -n Abort: file-name not given, try again && endlocal && set tryagain=Y && goto :eof
call :checkfile "%~1"
if not exist file && endlocal && set device=%device% && set "path=%path%" && set "file=%file%" && set EOL=%EOL% && set openfile=%openfile% && set donefile=%donefile% && set gotoline=%gotoline% && set changed=%changed% && set tryagain=Y && set "message1=%message1%" && goto :eof
if exist file && endlocal && set device=%device% && set "path=%path%" && set "file=%file%" && set EOL=%EOL% && set openfile=%openfile% && set donefile=%donefile% && set gotoline=%gotoline% && set changed=%changed% && set tryagain=%tryagain% && goto :eof

:checkfile
setlocal
set /A mdbuf=%callsect% + 1 * 6 + %mdread% * 0x200 && set /A mdbuflen=256 * 0x400 &; call Fn.24 %mdbuf% 0x00 %mdbuflen%
set oldEOL=%EOL% && set oldgoto=%gotoline%
if not "%~1"=="BROWSE" && if exist file && set SFN= && call :checksfn "FILE" "%file%" &; if %SFN%==N && echo -n %highcol%. Press a key to continue... && pause --wait=180 && endlocal && set SFN=%SFN% && set choice= && set tryagain=Y && goto :eof
if not "%~1"=="SAVEAS" if not "%~2"=="SAVEAS" || endlocal && set tryagain=%tryagain% && set "file=%file%" && set "path=%path%" && goto :eof
if exist file && if not exist %device%%%path%%%file% && setlocal && set "path=%path%" &; if %@retval%>=31 && set "path=%path:~0,14%..%path:~-14,14%" ! set "path=%path%" &; echo -P:2403 -n %highcol%Abort: file %device%%%path%%%file% not exist && pause --wait=4 && endlocal && set file= && set tryagain=Y
if exist file && raw cat --locate=\x00 --number=1 %device%%%path%%%file% > nul && setlocal && set "path=%path%" &; if %@retval%>=31 && set "path=%path:~0,14%..%path:~-14,14%" ! set "path=%path%" &; echo -P:2403 -n %highcol%Abort: %device%%%path%%%file% has zeros (00) && pause --wait=4 && endlocal && set file= && set tryagain=Y
if exist file && set /A mdbackup=%callsect% + 1 * 3 + %mdread% &; call :cleanmem "%mdbackup%" "%callsect%" && raw dd if=(md)%mdread%+%callsect% of=(md)%mdbackup%+%callsect% buf=%mdbuf% buflen=%mdbuflen% > nul &; cmp (md)%mdread%+%callsect% (md)%mdbackup%+%callsect% > nul && set success=Y ! set success= && set file= && if exist oldfile && endlocal && set tryagain=Y && set "message1=Error: bad backup in memory, try again" && goto :eof
if %success%==Y && set success= && call :cleanmem "%mdread%" "%callsect%" && call :readfile &; if exist message1 && set file= && if exist oldfile && call :cleanmem "%mdread%" "%callsect%" &; raw dd if=(md)%mdbackup%+%callsect% of=(md)%mdread%+%callsect% buf=%mdbuf% buflen=%mdbuflen% > nul && cmp (md)%mdbackup%+%callsect% (md)%mdread%+%callsect% > nul && endlocal && set tryagain=Y && set "message1=%message1%" && goto :eof ! endlocal && set tryagain=Y && set "message1=echo -n %highcol%Error: Something wrong, close FATTEXT.G4B, some backups on (fd99)" && goto :eof
if exist file && set changed= && set message1= && set EOL= &; call :validate &; if exist file && if exist message1 && call :Fn.5 3 24 &; %message1% && set file= && set tryagain=Y
setlocal && set fullfile= && set /A mdfile=%mdbase%+30 && set c=%openfile%
:loopcheckhistory
if exist file && if exist openfile && cat --skip=50 (md)%mdfile%+1 | set fullfile= &; set "fullfile=%fullfile:~0,-1%" &; if /i "%fullfile%"=="%device%%%path%%%file%" && set nogetfil=Y
if exist file && if not %nogetfil%==Y && if %c%>=0 && set /a c=%c%-1 && set /A mdfile=%mdfile%+1 && set fullfile= && goto :loopcheckhistory
endlocal && set nogetfil=%nogetfil%
if exist file && if not %device%==(fd99) && if not %nogetfil%==Y && call :getfile "%device%" "%path%" "%file%"
#NONEED#if exist oldfile &; if exist file if not %tryagain%==Y || raw dd if=(md)%mdbackup%+%callsect% of=(md)%mdread%+%callsect% buf=%mdbuf% buflen=%mdbuflen% > nul && set EOL=%oldEOL% && set gotoline=%oldgoto%
endlocal && set device=%device% && set "path=%path%" && set "file=%file%" && set EOL=%EOL% && set openfile=%openfile% && set donefile=%donefile% && set gotoline=%gotoline% && set changed=%changed% && set "message1=%message1%" && set tryagain=%tryagain% && goto :eof

:openpath
setlocal
set oldpath= && set oldfile= &; set "oldpath=%path%" && set "oldfile=%file%" && if "%~1"=="OPEN" && set file=
set /A mdbase1=%mdbase%+10
echo -n > (md)%mdbase1%+3
set "path=%path%" &; set /a length=%@retval%+2
pause --wait=0 %path% > (md)%mdbase1%+3
cat --locate=\x0A\x00 --replace=\x0D\x0A --length=%length% (md)%mdbase1%+3 > nul
if not %length%<=2 && call :keybuff "%pathlen%"
if not %length%<=2 && call :Key2Bios "0x4800"
set path=
call :Fn.5 0 1 && call :footer && echo -P:2403 -n %lowcol%Press Escape to leave dialog
set /p /u "path= Give 8+3 directory-name(s) (ESC to go back) > " && call :cleanline "1"
if not "%path%"=="%oldpath%" if exist path || endlocal && set "path=%oldpath%" && set "file=%oldfile%" && goto :eof
set tryagain= &; call :checkpath "%~1" "%~2" &; if %tryagain%==Y && endlocal && set tryagain=%tryagain% && goto :eof
endlocal && set "path=%path%" && set "file=%file%" && goto :eof

:checkpath
setlocal
set "path=%path%" &; if %@retval%>=31 && set "msgpath=%path:~0,14%..%path:~-14,14%" ! set "msgpath=%path%"
call :footer "call Fn.5 3 24"
if not "%path%"=="/" && if not "%path:~0,1%"=="/" && set "path=/%path%"
if not "%path%"=="/" && if "%path:~-1,1%"=="/" && set "path=%path:~0,-1%"
#-# now for 'file' only, maybe better output SFN=Y/N? Setlocal/endlocal needed; or goto :noSFN and rename file to argSFN...
if not "%path%"=="/" && if not "%~2"=="BROWSE" && set SFN= && call :checksfn "PATH" "%path%" &; if %SFN%==N && echo -n %highcol%. Press a key to continue... && pause && endlocal && set SFN=%SFN% && set "path=%oldpath%" && set tryagain=Y && goto :eof
if not "%path%"=="%oldpath%" && if not "%path%"=="/" && if not "%path:~-1,1%"=="/" && set "path=%path%/"
if not %NTFS%==Y && if not "%path%"=="%oldpath2%" && if not "%path%"=="/" && if not "%~1"=="SAVEAS" && set emtpy= && ls %device%%%path% > nul || echo -P:2403 -n %highcol%%%device%%%msgpath% empty. Press key to continue && pause --wait=7 && endlocal && set empty=Y && set "path=%oldpath2%" && goto :eof
if %NTFS%==Y && if not "%path%"=="%oldpath2%" && if not "%path%"=="/" && if not "%~1"=="SAVEAS" && set emtpy= && ls %device%%%path% > nul || echo -P:2403 -n %highcol%%%device%%%msgpath% empty/ zerobyte file. Press key... && pause --wait=7 && endlocal && set empty=Y && set "path=%oldpath2%" && goto :eof
call :footer "call Fn.5 3 24"
if "%path%"=="%oldpath%" && set "file=%oldfile%" &; if "%~2"=="BROWSE" if "%~1"=="OPEN" |; setlocal && set "path=%path%" &; if %@retval%>=31 && set "path=%path:~0,14%..%path:~-14,14%" ! set "path=%path%" &; echo -P:2403 -n %highcol%Unchanged: PATH=%path% Press a key to continue... && pause --wait=4 && endlocal &; set tryagain=Y
set oldpath= &; if not "%path:~-1,1%"=="/" && set "path=%path%/"
endlocal && set "path=%path%" && set "file=%file%" && set tryagain=%tryagain% && set empty=%empty% && goto :eof

:opendevice
setlocal
if not exist oldevice && set oldevice=%device% && set "oldpath=%path%" && set "oldfile=%file%" && set file= && set path=/
set /A mdbase1=%mdbase%+10
echo -n > (md)%mdbase1%+3
set "device=%device%" &; set /a length=%@retval%+2
pause --wait=0 %device% > (md)%mdbase1%+3
cat --locate=\x0A\x00 --replace=\x0D\x0A --length=%length% (md)%mdbase1%+3 > nul
if not %length%<=2 && call :keybuff "%pathlen%"
#NOTHANDY!#if not %length%<=2 && call :Key2Bios "0x4800"
call :Fn.5 0 1 && call :footer && echo -P:2403 -n %lowcol%Press Escape to leave dialog
set device=zyx
set /p /l "device= Give DEVICE-name > " && call :cleanline "1"
if not %device%==%oldevice% if exist device || endlocal && set device=%oldevice% && set "path=%oldpath%" && set "file=%oldfile%" && goto :eof
set tryagain= &; call :checkdevice "%~1" &; if %tryagain%==Y && endlocal && set tryagain=%tryagain% && goto :eof
endlocal && set device=%device% && set "path=%path%" && set "file=%file%" && goto :eof

:checkdevice
setlocal && set * && set col=%col% && set highcol=%highcol% && set lowcol=%lowcol% && set vmax=%vmax% && set device=%device% && set "path=%path%" && set "file=%file%" && set oldevice=%oldevice% && set "oldpath=%oldpath%" && set "oldfile=%oldfile%"
call :footer
if %device%==zyx && set device= && echo -P:2403 -n %highcol%DEVICE %oldevice% is not changed && endlocal && set device=%oldevice% && set "path=%oldpath%" && set "file=%oldfile%" && goto :eof
set "root=%@root%" && root %device% > nul || echo -P:2403 -n %highcol%DEVICE %device% doesn't exist, try again. Press a key to continue... && pause --wait=180 && endlocal && set tryagain=Y && goto :eof
root %root% > nul
if "%~1"=="OPEN" && set file=
set path=/ && call :footer && echo -P:2403 -n New Device: %device%
if exist device && endlocal && set device=%device% && set "path=%path%" && set "file=%file%" && goto :eof
endlocal && set device=%root% && set path=/ && set file= && goto :eof

:showdev
setlocal && set * && set col=%col% && set highcol=%highcol% && set lowcol=%lowcol% && set vmax=%vmax% && set mdbase=%mdbase%
call :Fn.5 0 3 && call :cleanline "3" "23" && call :footer
set /A mdvol=%mdbase%+40 &; echo -n > (md)%mdvol%+4
debug msg=1
vol > (md)%mdvol%+4
debug msg=0
set skip=0 && call Fn.5 0 3
:devloop
set numvols= && set volslen=
cat --skip=%skip% --locate=\x0A (md)%mdvol%+4 > nul &; set /a numvols=%@retval%
if not %numvols%<=20 && cat --skip=%skip% --locate=\x0A --number=20 (md)%mdvol%+4 > nul &; set /a volslen=%?%+1
if not %numvols%<=20 && cat --skip=%skip% --length=%volslen% (md)%mdvol%+4
if %numvols%<=20 && cat --skip=%skip% (md)%mdvol%+4
if not %numvols%<=20 && set /a skip=%volslen% && echo -P:2403 -n %highcol%Press a key to continue... && call :Fn.5 0 99 && pause --wait=180 && call :cleanline "3" "23" && goto :devloop
echo -P:2403 -n %highcol%Press a key to continue... && call :Fn.5 0 99 && pause --wait=180 && call :Fn.5 0 3 && echo -n > (md)%mdvol%+4 && call :footer
endlocal && goto :eof

:saveas
setlocal
if %edit%==XX && set menu=E
if %write%==XX && set menu=W
set oldevice=%device% && set "oldpath=%path%" && set "oldfile=%file%" && set message1=
call :footer "call Fn.5 0 24" && if exist message && echo -P:2403 -n %message% && set message=
:saveasmenu
if %file%==zyx && set file=
if %tryagain%==Y && set device=%oldevice% && set "path=%oldpath%" && set "file=%oldfile%" && set tryagain= ! set tryagain=
if not exist fatdev && call :fatdev "%device%"
if exist message1 && set device=%oldevice% && set "path=%oldpath%" && set "file=%oldfile%"
if exist file && if not "%~1"=="" && call :header "%~1" "%device%%%path%%%file%" && set savecol=%highcol% ! if exist file && if "%~1"=="" && call :header "SAVE AS" "%device%%%path%%%file%" && set savecol=%highcol% ! if not exist file && if "%~1"=="" && call :header "SAVE AS" "folder: %device%%%path%" "UNTITLED" ! if not exist file && if not "%~1"=="" && call :header "%~1" "folder: %device%%%path%" "UNTITLED" &; echo -P:2468 -n %lowcol%Help: F1$[]--- && if not exist file && set savecol=%lowcol%
if %fatdev%==Y && set fatcol=%highcol% ! set fatcol=%lowcol% && set savecol=%lowcol%
if exist file if not "%device%%%path%%%file%"=="%oldevice%%%oldpath%%%oldfile%" |; call :cleanline "1" && set save=zyx && set keycode= &; echo -n -e $[] %highcol%F$[]ile %highcol%P$[]ath %highcol%B$[]rowse %highcol%D$[]evice %fatcol%I$[]nfo %highcol%V$[]olumes %savecol%S$[]ave %highcol%M$[]enu && call :Fn.5 0 99 && pause --wait=180 --test-key &; set /A keycode=%@retval% &; call :keycodes "%keycode%" "save" &; set keycode= &; if not %save%==F1 && call :cleanline "1" ! set save=%save% &; if %save%==zyx && set save=F
if exist file && if not "%device%%%path%%%file%"=="%oldevice%%%oldpath%%%oldfile%" && call :cleanline "1" && set save=zyx && set keycode= &; echo -n -e $[] %savecol%S$[]ave %highcol%F$[]ile %highcol%P$[]ath %highcol%B$[]rowse %highcol%D$[]evice %fatcol%I$[]nfo %highcol%V$[]olumes %highcol%M$[]enu && call :Fn.5 0 99 && pause --wait=180 --test-key &; set /A keycode=%@retval% &; call :keycodes "%keycode%" "save" &; set keycode= &; if not %save%==F1 && call :cleanline "1" ! set save=%save% &; call :footer && if %save%==zyx && set save=S
if %save%==I &; if %fatcol%==%lowcol% && goto :saveasmenu ! call :header "INFO" "current device: %device%" && call :cleanline "3" "23" && call :Fn.5 0 3 && fat info %device% && call :footer && echo -P:2403 -n %highcol%Press a key to continue... && call :Fn.5 0 99 && pause --wait=180 && call :cleanline "3" "23" && call :footer && goto :saveasmenu
if %save%==F && call :openfile "SAVEAS" &; if not %tryagain%==Y if not exist message1 || goto :saveasmenu ! if exist file && if "%~1"=="" && call :header "SAVE AS" "%device%%%path%%%file%" ! if exist file && if not "%~1"=="" && call :header "%~1" "%device%%%path%%%file%" ! set "file=%oldfile%" && goto :saveasmenu
if %save%==B && call :browsels "SAVEAS" "BROWSE" &; call :cleanline "3" "23" &; if not %tryagain%==Y if not exist message1 || goto :saveasmenu ! if exist file && if not %file%==%oldfile% && if "%~1"=="" && call :header "SAVE AS" "%device%%%path%%%file%" && set save=F ! if exist file && if not %file%==%oldfile% && call :header "%~1" "%device%%%path%%%file%" && set save=F
if %save%==D && call :opendevice "SAVEAS" &; if %device%==%oldevice% && goto :saveasmenu ! call :fatdev "%device%" && call :cleanline "3" "23" && goto :saveasmenu
if %save%==V && call :showdev &; call :cleanline "3" "23" && goto :saveasmenu
if %save%==P && call :openpath "SAVEAS" &; if not "%path%"=="%oldpath%" && if not "%path%"=="/" && if %fatdev%==Y && call :makepath "%path%" &; setlocal && set "path=%path%" &; if %@retval%>=46 && set "path=%path:~0,14%..%path:~-29,29%" ! set "path=%path%" &; if %tryagain%==Y && echo -P:2403 -n %highcol%Abort: %path% not made, try again... && endlocal && set "message=%highcol%Abort: %path% not made, try again..." && goto :saveasmenu ! echo -P:2403 -n %highcol%New Path: %path% && endlocal && set "message=%highcol%New Path: %path%" && goto :saveasmenu
if %save%==M && endlocal && set device=%oldevice% && set "path=%oldpath%" && set "file=%oldfile%" && goto :eof
if %save%==F1 && call :cleanline "3" "23" && call :Fn.5 0 3 && setlocal && call :help "SAVE" &; endlocal && call :cleanline "3" "23" && set save=
if %save%==F5 && setlocal && call :refresh &; endlocal && call :footer && set save=
if not %save%==S && goto :saveasmenu ! if %savecol%==%lowcol% && goto :saveasmenu
if %tryagain%==Y && goto :saveasmenu ! if not exist file && goto :saveasmenu
set replace= &; if not %file%==%oldfile% && set nogetfil= ! set nogetfil=Y
endlocal && set device=%device% && set "path=%path%" && set "file=%file%" && set nogetfil=%nogetfil% && set oldevice=%oldevice% && set "oldpath=%oldpath%" && set "oldfile=%oldfile%" && set fatdev=%fatdev% && freeKB=%freeKB%
goto :saveas2
:save
if exist file && call :header "SAVE" "%device%%%path%%%file%" ! call :header "SAVE AS" "UNTITLED folder: %device%%%path%" && set replace= && goto :saveas
if exist message && call :footer "call Fn.5 0 24" && echo -P:2403 -n %message% && set message=
set oldevice=%device% && set oldpath=%path% && set oldfile=%file% && set SFN= && set nogetfil=Y
if exist file && call :checksfn "FILE" "%file%" &; if %SFN%==N && set SFN= && echo -n %highcol%No 8+3 file-name present && set "file=%oldfile%" && set nogetfil= && goto :saveas
:saveas2
setlocal
set "path=%path%" &; if %@retval%>=31 && set "msgpath=%path:~0,14%..%path:~-14,14%" ! set "msgpath=%path%"
call :footer "call Fn.5 3 24" && echo -n %highcol%File will be saved to %device%%%msgpath%%%file%
call :cleanline "1" && set save=zyx && set keycode= &; echo -n -e $[] %highcol%Y$[]es %highcol%N$[]o && call :Fn.5 0 99 && pause --wait=180 --test-key &; set /A keycode=%@retval% &; call :keycodes "%keycode%" "save" &; set keycode= && call :cleanline "1"
call :footer "call Fn.5 3 24"
if %save%==zyx && set save=Y
if %save%==N && endlocal && set device=%oldevice% && set "path=%oldpath%" && set "file=%oldfile%" && set changed=%changed% && set "message=%highcol%File is not saved (by user)" && goto :eof
if not %save%==Y && endlocal && set device=%oldevice% && set "path=%oldpath%" && set "file=%oldfile%" && goto :saveas2
if not exist replace && if exist %device%%%path%%%file% && echo -n %highcol%%%device%%%msgpath%%%file% exists
call :cleanline "1"
if %fatdev%==Y && if exist %device%%%path%%%file% && if not exist replace && set keycode= &; echo -n -e $[] %highcol%N$[]ew %highcol%R$[]eplace %highcol%M$[]enu && call :Fn.5 0 99 && pause --test-key --wait=180 &; set /A keycode=%@retval% &; call :keycodes "%keycode%" "replace" &; set keycode= && call :cleanline "1"
if exist %device%%%path%%%file% && if not exist replace && set replace= && set keycode= &; echo -n -e $[] %highcol%O$[]verwrite %highcol%M$[]enu && call :Fn.5 0 99 && pause --test-key --wait=180 &; set /A keycode=%@retval% &; call :keycodes "%keycode%" "replace" &; set keycode= && call :cleanline "1"
if %fatdev%==Y && if exist %device%%%path%%%file% && if %replace%==zyx && set replace=N
call :footer "call Fn.5 0 24" &; call Fn.5 3 24
if exist %device%%%path%%%file% && if %replace%==N && set "message=%highcol%Again: %device%%%msgpath%%%file% is not overwritten" &; endlocal && set device=%oldevice% && set "path=%oldpath%" && set "file=%oldfile%" && set "message=%message%" && goto :saveas
if exist %device%%%path%%%file% && if not %replace%==R && set "message=%highcol%Abort: %device%%%msgpath%%%file% is not overwritten" &; endlocal && set device=%oldevice% && set "path=%oldpath%" && set "file=%oldfile%" && set "message=%message%" && goto :eof
call :ddwrite
if %saved%==1 && if %openfile%>=0 && if not "%device%%%path%%%file%"=="%oldevice%%%oldpath%%%oldfile%" && set nogetfil= && setlocal && set /A mdfile=%mdbase%+30 && set gotoline=1 && set /a c=%openfile% && set textcol=$[] && set "path=%path%" &; set /a pathlen=%@retval% && set numfile=1 && call :loopopenmenu "LASTRUN" &; if %history%==N && endlocal && set nogetfil=Y ! endlocal && set nogetfil= &; if not exist gotoline && set gotoline=1
if %saved%==1 && if not "%device%%%path%%%file%"=="%oldevice%%%oldpath%%%oldfile%" && if exist file && if not %device%==(fd99) && if not %nogetfil%==Y && call :getfile "%device%" "%path%" "%file%"
if not %saved%==1 && set device=%oldevice% && set "path=%oldpath%" && set "file=%oldfile%"
endlocal && set device=%device% && set "path=%path%" && set "file=%file%" && set changed=%changed% && set "message=%message%" && set openfile=%openfile% && set donefile=%donefile% && set zeros=%zeros% && goto :eof

:fatdev
setlocal && set * && set mdbase=%mdbase%
set device=%~1
echo -n > (md)%mdbase%+4
debug msg=1
if not exist device && vol > (md)%mdbase%+4 > nul
if exist device && vol %device% > (md)%mdbase%+1 > nul
debug msg=0
if exist device && cat --locatei=exfat (md)%mdbase%+1 > nul || cat --locatei=fat (md)%mdbase%+1 > nul && set fatdev=Y
if exist device && echo -n > (md)%mdbase%+1
if exist device && errorcheck off
if exist device && if %fatdev%==Y &; fat info %device% > (md)%mdbase%+1
if exist device && cat --locate="drive space.\x0A" (md)%mdbase%+1 > nul &; set /A devspace=%?%+13
if exist device && cat --skip=%devspace% --locate=\x20KB\x20 (md)%mdbase%+1 > nul &; set /A KB=%?%
if exist device && if exist KB && set /A freelen=%KB%-%devspace%
if exist device && if exist freelen && cat --skip=%devspace% --length=%freelen% (md)%mdbase%+1 | set /a freeKB=
endlocal && set fatdev=%fatdev% && set freeKB=%freeKB% && goto :eof

:makepath
setlocal
set "path=%~1"
echo "%path%" > (md)%mdbase%+1
cat --locate=/ (md)%mdbase%+1 > nul &; set /a numslash=%@retval%
if %numslash%>=18 && endlocal && set "message=%highcol%No new path made: path too deep" && set tryagain=Y && goto :eof
#NOTGOOD#if %numslash%>=21 && endlocal && set "message=No new path made: path too deep" && set tryagain=Y && goto :eof
cat --locate=/ --replace=\x20 (md)%mdbase%+1 > nul
cat --locate=\x22 --replace=\x20 (md)%mdbase%+1 > nul
set newpath=/
cat (md)%mdbase%+1 | call :makedirectory
errorcheck off
if "%path%"=="%newpath%" && set "path=%newpath%" ! set tryagain=Y
if not %tryagain%==Y && fat dir %device%%%path:~-1,1% > nul || set tryagain=Y
endlocal && set "path=%path%" && set tryagain=%tryagain%
goto :eof

:makedirectory
if "%1"=="" && goto :eof
errorcheck off
fat dir %device%%%newpath%%%1 > nul && set "newpath=%newpath%%%1/" && shift && goto :makedirectory
fat mkdir %device%%%newpath%%%1 > nul || set tryagain=Y && goto :eof
set "newpath=%newpath%%%1/" && shift
goto :makedirectory

:ddwrite
call :Fn.5 0 24 && set saved= &; setlocal
setlocal && set * && set mdbase=%mdbase% &; call :fatdev "(fd99)" &; if exist fatdev && if %freeKB%>=512 && endlocal && set backup=2 ! if exist fatdev && if %freeKB%>=256 && endlocal && set backup=1 ! endlocal && set backup=
if exist fatdev if exist freeKB || call :fatdev "%device%"
if not exist fatdev && endlocal && set "message=%highcol%Abort: %device% is not a FAT-device, no saving possible" && goto :eof
set "path=%path%" &; if %@retval%>=31 && set "msgpath=%path:~0,14%..%path:~-14,14%" ! set "msgpath=%path%"
set /A mdbackup=%callsect% + 1 * 3 + %mdread% ;; call :cleanmem "%mdbackup%" "%callsect%"
call :fileleng "%mdread%" "%callsect%" &; set /a filelen=%filelen% &; if not %filelen%>=0x2 && endlocal && set "message=%highcol%Abort: %device%%%msgpath%%%file% not >= 1 byte" && goto :eof
cat --locate=\x00 --length=%filelen% (md)%mdread%+%callsect% > nul &; set /a zerolen=%?%+1 &; endlocal && set "message=mdread is corrupted, contains zero's at %zerolen% Key..." && goto :eof
if not %filelen%<=0x3FDFF && endlocal && set "message=%highcol%Abort: size is above 261631 bytes (255.5 KB)" && goto :eof
set filelen0=0 && if exist %device%%%path%%%file% && raw cat --length=0 %device%%%path%%%file% > nul &; set /a filelen0=%@retval%
if exist freeKB &; if %freeKB%>=256k && set /a freebyte=%freeKB% * 0x400 ! set /a freebyte=%freeKB% * 0x400 + %filelen0%
if not %filelen%<=%freebyte% && endlocal && set "message=%highcol%Not enough space on %device%; only %freeKB% KB left!" && goto :eof
set /A mdbuf=%callsect% + 1 * 6 + %mdread% * 0x200 && set /A mdbuflen=256 * 0x400 &; call Fn.24 %mdbuf% 0x00 %mdbuflen%
set success= &; raw dd if=(md)%mdread%+%callsect% of=(md)%mdbackup%+%callsect% bs=1 count=%filelen% buf=%mdbuf% buflen=%mdbuflen% > nul && cmp (md)%mdread%+%callsect%,%filelen% (md)%mdbackup%+%callsect%,%filelen% > nul && set success=Y ! raw dd if=(md)%mdread%+%callsect% of=(md)%mdbackup%+%callsect% bs=1 count=%filelen% buf=%mdbuf% buflen=%mdbuflen% > nul && cmp (md)%mdread%+%callsect%,%filelen% (md)%mdbackup%+%callsect%,%filelen% > nul && set success=Y ! raw dd if=(md)%mdread%+%callsect% of=(md)%mdbackup%+%callsect% bs=1 count=%filelen% buf=%mdbuf% buflen=%mdbuflen% > nul && cmp (md)%mdread%+%callsect%,%filelen% (md)%mdbackup%+%callsect%,%filelen% > nul && set success=Y
if not %success%==Y && endlocal && set "message=%highcol%Something wrong, backup your work immediately - some backups on (fd99)" && goto :eof ! set success=
if not %EOL%==\x0D\x0A && set success= && call :linefeed &; if %success%==Y && call :fileleng "%mdread%" "%callsect%" "%EOL%" &; set /a filelen=%filelen% &; if exist zeros && set success= ! if not %filelen%>=0x1 && endlocal && set "message=%highcol%Abort: %device%%%msgpath%%%file% not >= 1 byte" && goto :eof
if not %EOL%==\x0D\x0A &; if not %success%==Y &; raw dd if=(md)%mdbackup%+%callsect% of=(md)%mdread%+%callsect% buf=%mdbuf% buflen=%mdbuflen% > nul && cmp (md)%mdbackup%+%callsect% (md)%mdread%+%callsect% > nul ! raw dd if=(md)%mdbackup%+%callsect% of=(md)%mdread%+%callsect% buf=%mdbuf% buflen=%mdbuflen% > nul && cmp (md)%mdbackup%+%callsect% (md)%mdread%+%callsect% > nul ! raw dd if=(md)%mdbackup%+%callsect% of=(md)%mdread%+%callsect% buf=%mdbuf% buflen=%mdbuflen% > nul && cmp (md)%mdbackup%+%callsect% (md)%mdread%+%callsect% > nul &; endlocal && set "message=%highcol%Something wrong, backup your work immediately - some backups on (fd99)" && goto :eof
errorcheck off
if exist %device%%%path%%%file% && if %filelen0%>=0x1 && if %backup%>=1 &; fat copy /o %device%%%path%%%file% (fd99)/lastsave/%file% > nul && cmp %device%%%path%%%file% (fd99)/lastsave/%file% > nul || set backup=
if %backup%==2 && if exist (fd99)/TEMP && fat del (fd99)/TEMP > nul || set backup=1
if %backup%==2 && fat mkfile size=%filelen% (fd99)/TEMP > nul && echo -n > (fd99)/TEMP && raw dd if=(md)%mdread%+%callsect% of=(fd99)/TEMP bs=1 count=%filelen% buf=%mdbuf% buflen=%mdbuflen% > nul && cmp (md)%mdread%+%callsect%,%filelen% (fd99)/TEMP > nul && set backup=3
set r=0 && set filelen2=
:makefileloop
errorcheck off
if %backup%==3 if %freeKB%>=256k || if exist %device%%%path%%%file% && fat del %device%%%path%%%file% > nul || set saved=2
if %backup%==3 && fat copy /o (fd99)/TEMP %device%%%path%%%file% > nul && cmp (fd99)/TEMP %device%%%path%%%file% > nul && set saved=1 ! set saved=0
if not %backup%==3 && fat mkfile size=%filelen% %device%%%path%%%file% > nul &; echo -n > %device%%%path%%%file% && raw cat --length=0 %device%%%path%%%file% > nul &; set /a filelen2=%@retval%
if not %backup%==3 && if %filelen%==%filelen2% &; raw dd if=(md)%mdread%+%callsect% of=%device%%%path%%%file% bs=1 count=%filelen% buf=%mdbuf% buflen=%mdbuflen% > nul && cmp (md)%mdread%+%callsect%,%filelen% %device%%%path%%%file% > nul && set saved=1 ! set saved=0
if not %saved%==1 && if %r%<=3 && set /a r=%r%+1 && set saved= && goto :makefileloop ! set r= && set filelen2=
if not exist %device%%%path%%%file% && set saved=3 &; if not %edit:~0,4%==Ctrl && call :footer && echo -P:2403 -n Abort: %highcol%%%device%%%msgpath%%%file% does not exist! && pause --wait=3 && set "message=%highcol%Abort: %device%%%msgpath%%%file% does not exist!" ! set "message=%highcol%Abort: %device%%%path%%%file% does not exist!"
if exist %device%%%path%%%file% && raw cat --length=0 %device%%%path%%%file% > nul &; set /a filelen=%@retval% &; if %filelen%<=0 && set saved=2
if %saved%==2 && set changed= && set "message=%highcol%Cannot save: %device%%%msgpath%%%file% not >=1 Byte" &; if not %edit:~0,4%==Ctrl && call :footer "call Fn.5 0 24" && echo -P:2403 -n %message% && pause --wait=3
if %saved%==1 && set changed= &; if not %edit:~0,6%==Ctrl+B && set "message=%highcol%Saved to file %device%%%msgpath%%%file%" ! set "message=%highcol%Back up to file %device%%%msgpath%%%file%"
if %saved%==0 && set "message=%highcol%Error: bad saving to %device%%%msgpath%%%file%" &; if not %edit:~0,4%==Ctrl && call :footer "call Fn.5 0 24" && echo -P:2403 -n %message% && pause --wait=3
if %saved%==0 && cmp %device%%%path%%%file% (fd99)/lastsave/%file% > nul || set saved=3
if not %EOL%==\x0D\x0A && call :fileleng "%mdbackup%" "%callsect%" &; set /a filelen=%filelen%
#BAD#if not %EOL%==\x0D\x0A && if %zeros%==1 && set saved=4 && call :footer "call Fn.5 0 24" && echo -P:2401 -n %highcol%Memory backup corrupted, contains zeros, check your work. Key... && pause
if not %EOL%==\x0D\x0A && if %filelen%>=0x2 && call :cleanmem "%mdread%" "%callsect%" && raw dd if=(md)%mdbackup%+%callsect% of=(md)%mdread%+%callsect% bs=1 count=%filelen% buf=%mdbuf% buflen=%mdbuflen% > nul && cmp (md)%mdread%+%callsect%,%filelen% (md)%mdbackup%+%callsect%,%filelen% > nul && set success=Y
if not %EOL%==\x0D\x0A && if %zeros%==1 && set success= && call :footer "call Fn.5 0 24" && echo -P:2401 -n %highcol%Memory backup corrupted, contains zeros, check your work. Key... && pause
if not %EOL%==\x0D\x0A && if not %success%==Y && if %backup%==3 && setlocal && set device=(fd99) && set "path=/" && set "file=TEMP" && set message= &; call :checkfile &; if not exist message && endlocal && set success=Y && set saved=0 && set changed= ! endlocal
if not %EOL%==\x0D\x0A && if %filelen%>=0x2 &; if not %success%==Y && set "message=%highcol%Something wrong, backup your work immediately" && endlocal && set "message=%message%" && set saved=0 && goto :eof ! set success=
if %saved%==3 && errorcheck off
if %saved%==3 && if not %replace%==R &; fat del %device%%%path%%%file% > nul || if not %edit:~0,4%==Ctrl && call :footer "call Fn.5 0 24" && echo -P:2403 -n %highcol%Can not modify files on %device% && pause --wait=3 && set "message=%highcol%Can not modify files on %device%" && set saved=0 ! set "message=%highcol%Can not modify files on %device%" && set saved=0
if %saved%==3 && if not %edit:~0,6%==Ctrl+B && if not %replace%==R && if %backup%>=1 &; fat copy /o (fd99)/lastsave/%file% %device%%%path%%%file% > nul && cmp (fd99)/lastsave/%file% %device%%%path%%%file% > nul && set changed= && call :footer "call Fn.5 0 24" && echo -P:2403 -n Bad saving: %device%%%msgpath%%%file% restored && pause --wait=3 && set "message=%highcol%Bad saving: %device%%%msgpath%%%file% restored" ! call :footer "call Fn.5 0 24" && echo -P:2403 -n Cannot restore %device%%%msgpath%%%file% (backup!) && pause --wait=7 && set "message=%highcol%Cannot restore %device%%%msgpath%%%file% (backup!)" && set saved=0
endlocal && set device=%device% && set "path=%path%" && set "file=%file%" && set changed=%changed% && set "message=%message%" && set openfile=%openfile% && set donefile=%donefile% && set saved=%saved% && set zeros=%zeros% && goto :eof

:fileleng
#-# modeFL is base sector in memory; sectFL is length; skipFL is starting offset; EOL is end-of-file marker; filelen is last EOL entry; Locate last zero's and replace with EOL+00 in case of writing to existing file; locatenum: if not exist FILE is empty or none-text; final filelen +2 to include last CR+LF
setlocal && set *
set /A modeFL=%~1
set /A sectFL=%~2
set skipFL=%~3 &; if %skipFL:~0,2%==0x && set /A skipFL=%skipFL% ! if "%skipFL:~-4,2%"=="\x" && set skipFL= && set EOL=%~3
if not exist EOL && set EOL=%~4 &; if not exist EOL && set EOL=\x0D\x0A
if not exist skipFL && set /A skipFL=0
raw cat --skip=%skipFL% --locate=%EOL% (md)%modeFL%+%sectFL% > nul &; set /A filelen=%?%
raw cat --locate=\x00 --number=1 (md)%modeFL%+%sectFL% > nul &; set /A zerolen=%?%
if exist zerolen && if not %filelen%<=%zerolen% && call :footer "call Fn.5 0 24" && echo -P:2402 -n mdread is corrupted, zero's after %zerolen% Key to continue... && pause && set zeros=1
raw cat --skip=%skipFL% --locate=%EOL% (md)%modeFL%+%sectFL% > nul &; set /A locatnum=%@retval%
if %EOL%==\x0D\x0A &; if %locatnum%>=1 && set /A filelen=%filelen%+0x2 ! set filelen=0x0
if not %EOL%==\x0D\x0A &; if %locatnum%>=1 && set /A filelen=%filelen%+0x1 > nul ! set filelen=0x0
endlocal && set filelen=%filelen% && set zeros=%zeros% && goto :eof

:convert
setlocal
set oldevice=%device% && set "oldpath=%path%" && set "oldfile=%file%" && set oldEOL=%EOL%
if exist file && call :header "CONVERT" "%device%%%path%%%file%"
if not exist file && call :header "CONVERT" "UNTITLED folder: %device%%%path%"
:convmenu
set unicol=%highcol% && set maccol=%highcol% && set doscol=%highcol% &; if %oldEOL%==\x0D\x0A && set doscol=%lowcol% ! if %oldEOL%==\x0A && set unicol=%lowcol% ! if %oldEOL%==\x0D && set maccol=%lowcol%
call :footer "call Fn.5 0 24" && echo -P:2468 -n %lowcol%Help: F1$[]---
call :cleanline "1" && set convert=zyx && set keycode= &; echo -n $[] %highcol%B$[]ack %unicol%U$[]nix %maccol%M$[]ac %doscol%D$[]os && call :Fn.5 0 99 && pause --wait=180 --test-key &; set /A keycode=%@retval% &; call :keycodes "%keycode%" "convert" &; set keycode= &; if not %convert%==F1 && call :cleanline "1" ! set convert=%convert% &; call :footer "call Fn.5 0 24" && if %convert%==zyx && set convert=B
if %convert%==B && endlocal && set EOL=%oldEOL% && goto :eof
if %convert%==F1 && call :cleanline "3" "23" && call :Fn.5 0 3 && setlocal && call :help "CONVERT" &; endlocal && call :cleanline "3" "23" && set convert=
if %convert%==D && if %oldEOL%==\x0D\x0A && set convert= ! if %convert%==U && if %oldEOL%==\x0A && set convert= ! if %convert%==M && if %oldEOL%==\x0D && set convert=
if not %convert%==U && if not %convert%==M && if not %convert%==D && goto :convmenu
if %convert%==D && set EOL=\x0D\x0A &; call :header "CONVERT to" "MS-DOS TEXT FORMAT" && call :cleanline "1" && echo -n $[] Saving... && call :footer "call Fn.5 0 24" && echo -P:2403 -n %highcol%Convert to MS-DOS text (Carriage Return+Line Feed)? && set continue=zyx &; call :cleanline "1" && call :Fn.5 0 1 && echo -n $[] %highcol%Y$[]es %highcol%N$[]o && call :Fn.5 0 99 && pause --test-key --wait=180 &; set /A keycode=%@retval%&0xffff > nul &; call :keycodes "%keycode%" "continue" &; set keycode= && call :cleanline "1" &; if not %continue%==zyx && if not %continue%==Y && set EOL=%oldEOL% && goto :convmenu ! set continue= && echo -P:2403 -n %lowcol%Converting to MS-DOS text (Carriage Return+Line Feed)
#ORG#if %convert%==D && set EOL=\x0D\x0A &; call :header "CONVERT to" "MS-DOS TEXT FORMAT" && call :footer "call Fn.5 0 24" && echo -P:2403 -n %highcol%Convert to MS-DOS text (Carriage Return+Line Feed)? && set continue=zyx &; call :cleanline "1" && call :Fn.5 0 1 && echo -n $[] %highcol%Y$[]es %highcol%N$[]o && call :Fn.5 0 99 && pause --test-key --wait=180 &; set /A keycode=%@retval%&0xffff > nul &; call :keycodes "%keycode%" "continue" &; set keycode= && call :cleanline "1" &; if not %continue%==zyx && if not %continue%==Y && set EOL=%oldEOL% && goto :convmenu ! set continue= && echo -P:2403 -n %lowcol%Converting to MS-DOS text (Carriage Return+Line Feed)
if %convert%==U && set EOL=\x0A &; call :header "CONVERT to" "UNIX TEXT FORMAT" && call :footer "call Fn.5 0 24" && echo -P:2403 -n %highcol%Convert to Unix text (Line Feed only)? && set continue=zyx &; call :cleanline "1" && call :Fn.5 0 1 && echo -n $[] %highcol%Y$[]es %highcol%N$[]o && call :Fn.5 0 99 && pause --test-key --wait=180 &; set /A keycode=%@retval%&0xffff > nul &; call :keycodes "%keycode%" "continue" &; set keycode= && call :cleanline "1" &; if not %continue%==zyx && if not %continue%==Y && set EOL=%oldEOL% && goto :convmenu ! set continue= && echo -P:2403 -n %lowcol%Converting to Unix text (Line Feed only)
if %convert%==M && set EOL=\x0D &; call :header "CONVERT to" "MAC TEXT FORMAT" && call :footer "call Fn.5 0 24" && echo -P:2403 -n %highcol%Convert to Mac text (Carriage Return only)? && set continue=zyx &; call :cleanline "1" && call :Fn.5 0 1 && echo -n $[] %highcol%Y$[]es %highcol%N$[]o && call :Fn.5 0 99 && pause --test-key --wait=180 &; set /A keycode=%@retval%&0xffff > nul &; call :keycodes "%keycode%" "continue" &; set keycode= && call :cleanline "1" &; if not %continue%==zyx && if not %continue%==Y && set EOL=%oldEOL% && goto :convmenu ! set continue= && echo -P:2403 -n %lowcol%Converting to Mac text (Carriage Return only)
if exist file && call :ddwrite
if not exist file && set saved=1
if %convert%==D &; if %saved%==1 && set "message=%highcol%Converted to MS-DOS text (Line Feed+Carriage Return)" ! set "message=%highcol%Conversion aborted" && set EOL=%oldEOL% && set device=%oldevice% && set "path=%oldpath%" && set "file=%oldfile%"
if %convert%==U &; if %saved%==1 && set "message=%highcol%Converted to Unix text (Line Feed only)" ! set "message=%highcol%Conversion aborted" && set EOL=%oldEOL% && set device=%oldevice% && set "path=%oldpath%" && set "file=%oldfile%"
if %convert%==M &; if %saved%==1 && set "message=%highcol%Converted to Mac text (Carriage Return only)" ! set "message=%highcol%Conversion aborted" && set EOL=%oldEOL% && set device=%oldevice% && set "path=%oldpath%" && set "file=%oldfile%"
call :footer "call Fn.5 3 24" && echo -n %message% && set saved= &; endlocal && set "message=%message%" && set EOL=%EOL% && set changed=%changed% && set device=%device% && set "path=%path%" && set "file=%file%" && set saved=%saved% && goto :eof

:linefeed
if %EOL%==\x0D\x0A && goto :eof
setlocal && set * && set col=%col% && set mdread=%mdread% && set callsect=%callsect% && set EOL=%EOL% && set convert=%convert% && set highcol=%highcol%
set /A mdbuf=%callsect% + 1 * 6 + %mdread% * 0x200 && set /A mdbuflen=256 * 0x400 &; call Fn.24 %mdbuf% 0x00 %mdbuflen%
set /A mddraft=%callsect% + 1 * 2 + %mdread% &; call :cleanmem "%mddraft%" "%callsect%"
if exist convert && call :cleanline "1" && echo -P:0101 -n Number of lines converted: 0
if "%EOL%"=="\x0A" && cat --locate=\x0D --replace=\x0A (md)%mdread%+%callsect% > nul &; set /a num0D0A=%@retval%
if "%EOL%"=="\x0D" && cat --locate=\x0A --replace=\x0D (md)%mdread%+%callsect% > nul &; set /a num0D0A=%@retval%
set skip=0 && set seek=0 && set c=0
call :looplinefeed
if "%EOL%"=="\x0A" && cat --locate=\x0A (md)%mddraft%+%callsect% > nul &; set /a num0A=%@retval%
if "%EOL%"=="\x0D" && cat --locate=\x0D (md)%mddraft%+%callsect% > nul &; set /a num0D=%@retval%
if "%EOL%"=="\x0A" && if %num0A%==%num0D0A% && set success=Y ! if "%EOL%"=="\x0D" && if %num0D%==%num0D0A% && set success=Y
if %success%==Y && set success= && call :cleanmem "%mdread%" "%callsect%" &; raw dd if=(md)%mddraft%+%callsect% of=(md)%mdread%+%callsect% buf=%mdbuf% buflen=%mdbuflen% > nul && cmp (md)%mddraft%+%callsect% (md)%mdread%+%callsect% > nul && set success=Y
if %success%==Y && call :cleanline "1" && echo -n $[] Saving...
endlocal && set success=%success%
goto :eof

:looplinefeed
cat --skip=%skip% --locate=%EOL% --number=1 (md)%mdread%+%callsect% > nul &; set /A length=%?%-%skip%+1 &; if %length%>=1 && raw dd if=(md)%mdread%+%callsect% of=(md)%mddraft%+%callsect% bs=1 count=%length% skip=%skip% seek=%seek% buf=%mdbuf% buflen=%mdbuflen% > nul && set /a c=%c%+1
if not exist length && goto :eof
if exist convert && call :Fn.5 28 1 && echo -n %c% && call Fn.5 0 99
set /A skip=%skip%+%length%+1 && set /A seek=%seek%+%length% && set length=
goto :looplinefeed

:checksfn
setlocal && set * && set col=%col% && set highcol=%highcol% && set lowcol=%lowcol% && set vmax=%vmax% && set mdbase=%mdbase%
set "path=%path:~1%" && set skip0A=0 && set name= && set ext= && set sfn=
if "%~3"=="Q" && set "NULL= > nul"
echo -n > (md)%mdbase%+1
if "%~1"=="FILE" && set "file=%~2" && set test=file && shift &; call :pathchecksfn "%file%" &; endlocal && set SFN=%SFN% && goto :eof
if "%~1"=="PATH" && set "path=%~2" && set test=path && shift
:loopchecksfn
pause --wait=0 %path% > (md)%mdbase%+1 && cat --locate=\x2F --replace=\x0A (md)%mdbase%+1 > nul
set file= &; cat --skip=%skip0A% (md)%mdbase%+1 | set file=
cat --locate=\x20 (md)%mdbase%+1 > nul && set SFN=N && set file= && echo -n %highcol%Spaces in 8+3 %test%name not allowed here%NULL%
if exist file && call :pathchecksfn %file% "PATH"
pause --wait=0 %path% > (md)%mdbase%+1 && cat --locate=\x2F --replace=\x0A (md)%mdbase%+1 > nul
if not %SFN%==N && set /a skip0A=%skip0A%+1 &; cat --skip=%skip0A% --locate=\x0A --number=1 (md)%mdbase%+1 > nul &; set /a length0A=%?% &; set /a skip0A=%length0A% &; goto :loopchecksfn
endlocal && set SFN=%SFN% && goto :eof
:pathchecksfn
setlocal
if not exist NULL && call :footer "call Fn.5 3 24"
echo -n > (md)%mdbase%+1
pause --wait=0 "%file%" > (md)%mdbase%+1
if %file%==! && set SFN=N && echo -n %highcol%'!' in 8+3 %test%name not allowed here%NULL% &; endlocal && set SFN=%SFN% && goto :eof
cat --locate=\x20 (md)%mdbase%+1 > nul && set SFN=N && echo -n %highcol%Spaces in 8+3 %test%name not allowed here%NULL% &; endlocal && set SFN=%SFN% && goto :eof
cat --locate=/ (md)%mdbase%+1 > nul && set SFN=N && echo -n %highcol%/ in 8+3 %test%name is forbidden%NULL% &; endlocal && set SFN=%SFN% && goto :eof
cat --locate=! (md)%mdbase%+1 > nul && set SFN=N && echo -n %highcol%'!' in 8+3 %test%name not allowed here%NULL% &; endlocal && set SFN=%SFN% && goto :eof
echo -n > (md)%mdbase%+1
set "name=%~n1" && set "ext=%~x1" && set "file=%~nx1"
if not exist name && set SFN=N && echo -n %highcol%Name-part of file-name is missing%NULL% &; endlocal && set SFN=%SFN% && goto :eof
set "file=%file%" ;; set /a sfn=%@retval%
if %sfn%>=13 && set SFN=N && echo -n %highcol%%%test%name >=13 chars%NULL% &; endlocal && set SFN=%SFN% && goto :eof
set sfn= && set "name=%name%" ;; set /a sfn=%@retval%
if %sfn%==0 && set SFN=N && echo -n %highcol%Name-part is missing%NULL% &; endlocal && set SFN=%SFN% && goto :eof
if %sfn%>=9 && set SFN=N && echo -n %highcol%Name-part >=9 chars%NULL% &; endlocal && set SFN=%SFN% && goto :eof
set sfn= && set "ext=%ext%" ;; set /a sfn=%@retval%
if %sfn%==1 && if %ext:~0,1%==. && set SFN=N && echo -n %highcol%Extension-part is missing after '.'%NULL% &; endlocal && set SFN=%SFN% && goto :eof
if %sfn%>=2 && if not %ext:~0,1%==. && set SFN=N && echo -n %highcol%Extension is invalid%NULL% &; endlocal && set SFN=%SFN% && goto :eof
if %sfn%>=5 && set SFN=N && echo -n %highcol%Extension >=4 chars%NULL% &; endlocal && set SFN=%SFN% && goto :eof
echo -n > (md)%mdbase%+1 && raw write (md)%mdbase%+1 %name%\x00 > nul
cat --locate=. (md)%mdbase%+1 > nul && set SFN=N && echo -n %highcol%'.' in 8 char of name-part is forbidden%NULL% &; endlocal && set SFN=%SFN% && goto :eof
echo -n > (md)%mdbase%+1 && raw write (md)%mdbase%+1 %file%\x00 > nul
#-# 8+3 nogo: double-qoute * + , \ / : ; < ">" ? % '!' [ ] | = and 'spaces' (but '-' allowed!)
cat --locate=\x22 (md)%mdbase%+1 > nul && set SFN=N && echo -n %highcol%Double-quote in 8+3 %test%name is forbidden%NULL% && set dq=Y &; endlocal && set SFN=%SFN% && goto :eof
cat --locate=* (md)%mdbase%+1 > nul && set SFN=N && echo -n %highcol%* in 8+3 %test%name is forbidden%NULL% &; endlocal && set SFN=%SFN% && goto :eof
cat --locate=+ (md)%mdbase%+1 > nul && set SFN=N && echo -n %highcol%+ in 8+3 %test%name is forbidden%NULL% &; endlocal && set SFN=%SFN% && goto :eof
cat --locate=, (md)%mdbase%+1 > nul && set SFN=N && echo -n %highcol%, in 8+3 %test%name is forbidden%NULL% &; endlocal && set SFN=%SFN% && goto :eof
cat --locate=\ (md)%mdbase%+1 > nul && set SFN=N && echo -n %highcol%\ in 8+3 %test%name is forbidden%NULL% &; endlocal && set SFN=%SFN% && goto :eof
cat --locate=/ (md)%mdbase%+1 > nul && set SFN=N && echo -n %highcol%/ in 8+3 %test%name is forbidden%NULL% &; endlocal && set SFN=%SFN% && goto :eof
cat --locate=: (md)%mdbase%+1 > nul && set SFN=N && echo -n %highcol%':' in 8+3 %test%name is forbidden%NULL% &; endlocal && set SFN=%SFN% && goto :eof
cat --locate=; (md)%mdbase%+1 > nul && set SFN=N && echo -n %highcol%; in 8+3 %test%name is forbidden%NULL% &; endlocal && set SFN=%SFN% && goto :eof
cat --locate=< (md)%mdbase%+1 > nul && set SFN=N && echo -n %highcol%< in 8+3 %test%name is forbidden%NULL% &; endlocal && set SFN=%SFN% && goto :eof
cat --locate=> (md)%mdbase%+1 > nul && set SFN=N && echo -n %highcol%> in 8+3 %test%name is forbidden%NULL% &; endlocal && set SFN=%SFN% && goto :eof
cat --locate=? (md)%mdbase%+1 > nul && set SFN=N && echo -n %highcol%? in 8+3 %test%name is forbidden%NULL% &; endlocal && set SFN=%SFN% && goto :eof
cat --locate=! (md)%mdbase%+1 > nul && set SFN=N && echo -n %highcol%'!' in 8+3 %test%name not allowed here%NULL% &; endlocal && set SFN=%SFN% && goto :eof
cat --locate=% (md)%mdbase%+1 > nul && set SFN=N && echo -n %highcol%'%' in 8+3 %test%name not allowed here%NULL% &; endlocal && set SFN=%SFN% && goto :eof
cat --locate=[ (md)%mdbase%+1 > nul && set SFN=N && echo -n %highcol%[ in 8+3 %test%name is forbidden%NULL% &; endlocal && set SFN=%SFN% && goto :eof
cat --locate=] (md)%mdbase%+1 > nul && set SFN=N && echo -n %highcol%] in 8+3 %test%name is forbidden%NULL% &; endlocal && set SFN=%SFN% && goto :eof
cat --locate=| (md)%mdbase%+1 > nul && set SFN=N && echo -n %highcol%| in 8+3 %test%name is forbidden%NULL% &; endlocal && set SFN=%SFN% && goto :eof
cat --locate== (md)%mdbase%+1 > nul && set SFN=N && echo -n %highcol%Equality-sign in 8+3 %test%name is forbidden%NULL% &; endlocal && set SFN=%SFN% && goto :eof
cat (md)%mdbase%+1 | set file=
set sfn= && set "file=%file%" ;; set /a sfn=%@retval%
if %sfn%==1 && if %file%==. && set SFN=N && echo -n %highcol%Name and extension missing%NULL% &; endlocal && set SFN=%SFN% && goto :eof
if "%~2"=="PATH" && goto :eof
if exist file && if "%file:~-1,1%"=="." && set "file=%file:~0,-1%"
echo -n > (md)%mdbase%+1
endlocal && set SFN=%SFN% && goto :eof

:Fn.5
call Fn.5 %~1 %~2
goto :eof

:help
if "%~1"=="" && call :cleanline "1" && call :header "HELP" "GENERAL"
if %col:~0,1%==F && set invcol=$[0x0F] ! if %col:~0,1%==E && set invcol=$[0x4E] ! set invcol=$[0xF%col:~0,1%]
if "%~1"=="" && echo -P:0101 -n %highcol%FATTEXT.G4B v1.0 (20230319), by deomsh && call Fn.5 0 3
if "%~1"=="" && echo -e -n \x20$[]Function: Write and Edit text-files, Save on fat-devices only - Filesize max\n\x20 261631 Bytes (MS-DOS type). Grubutil 'fat' needed. Installed memory >= 72 M\n\x20Use: FATTEXT.G4B [/MDBASE:address]\n      FATTEXT.G4B [/MDBASE:address] [[DEVICE/]PATH/]FILE\n      FATTEXT.G4B /\x3F\n
if "%~1"=="" && echo -e -n \x20Switch: Change start address memory in use, >=0x3000 (default), 0x1000 sectors\n\x20Remarks: Without device/ path, file on/ from root - '/' not mandatory\n\x20\x20\x20Names 8+3 only only, End Of Line Marker: MS-DOS, Unix or Mac Type\n\x20\x20Settings saved to FATTEXT.DAT, OR some variables not erased after closing\n\x20\x20Zero's in file refused (hex: '00'), warning if detected in file while in\n\x20\x20\x20memory, backup file if still possible\n
if "%~1"=="" && echo -e -n \x20\x20Backups found on (fd99), original files in root, last savings in 'LASTSAVE'\n\x20\x20or file TEMP. After a crash, copy backups from (fd99) with Grubutil 'fat'\n\x20\x20Virtual floppy in use: (fd99), unmapped if exists already!\n\x20\x20Grubutil FAT needed in (bd), (bd)/boot/grub, (bd)/grub, (bd)/g4dll or on root\n\x20\x20Original status of debug, pager, graphicsmode and color restored afterwards\n
if "%~1"=="" && echo -e -n \x20Tricks: Use ArrowUp for editing, all single edited/copied/cut lines in History\n\x20\x20Underscore is placeholder for ONE starting space BEFORE ALL other chars: %invcol%_$[]\n\x20\x20\x20spaces in between and after other chars accepted normally\n\x20\x20Replace is active after a Find, to insert new replace-string use Ctrl+R\n\x20\x20To start with color-preset use menu-item Graphics in Main Menu
if "%~1"=="" && call :footer "call Fn.5 1 24" && echo -n -e %invcol%Press a key to continue && call :Fn.5 0 99 && pause --wait=240 && call :cleanline "3" "23" && call :footer && call :header "HELP" "MAIN MENU" && call :cleanline "1" && echo -P:0101 -n %highcol%FATTEXT.G4B v1.0 && call :Fn.5 0 3
if "%~1"=="MAIN" && call :cleanline "3" "23"
if not "%~1"=="" if not "%~1"=="MAIN" || echo -e \x20%highcol%Main Menu:$[] Highlighted keys only - Edit comes first if file exists\n\x20%highcol%N$[]ew: New empty file - save-dialog if unsaved changes detected in existing file\n\x20%highcol%W$[]rite: Write, starting at end of existing file - more info: see submenu Write\n\x20%highcol%E$[]dit: Edit existing file - more info: see submenu Edit\n\x20%highcol%O$[]pen: Open file (or Ctrl+O) - more info: see submenu Open\n\x20%highcol%S$[]ave: Save to active file (or Ctrl+S) - if UNTITLED Save As\n\x20%highcol%A$[]s: Save to a different file - more info: see submenu Save As\n\x20%highcol%C$[]onvert: Export and saving to Unix-text or Mac-text (MS-DOS-text default)\n\x20%highcol%B$[]ackup: Backup file, same file name afterwards (or Ctrl+B) - more info: see\n\x20\x20submenu Save As
if not "%~1"=="" if not "%~1"=="MAIN" || echo -e \x20%highcol%G$[]raphics: Toggle textmode/ graphicsmode (640x480), change text/background\n\x20\x20color (28 presets)\n\x20%highcol%R$[]efresh: Refresh screen (or F5)\n\x20%highcol%H$[]elp: View full Help\n\x20%highcol%Q$[]uit: Save-dialog if unsaved changes detected in existing file (or Alt+F4)\n\n\x20$[]Menu's not case-sensitive, first char greyed out if menu-item not active\n\x20\x20Use Enter in menu's for utmost left choice too
if not "%~1"=="MAIN" if not "%~1"=="" |; call :footer "call Fn.5 1 24" && echo -n -e %invcol%Press a key to continue && call :Fn.5 0 99 && pause --wait=240 && call :cleanline "3" "23" &; if "%~1"=="MAIN" && call :footer && goto :eof ! call :header "HELP" "EDIT MENU" && call :footer && call :Fn.5 0 3
if "%~1"=="EDIT" && call :cleanline "3" "23" && call Fn.5 0 3
if "%~1"=="" && echo -e \x20%highcol%Edit Menu$[] Cursor: ArrowUp/Down (B/V=Space), PageUp/Down (U/T), Home/End (H/L)
if not "%~1"=="" if not "%~1"=="EDIT" || echo -e \x20%highcol%A$[]dd: Insert new line BELOW active line - Enter can be used too\n\x20%highcol%I$[]ns: Insert new line ABOVE active line\n\x20%highcol%E$[]dit: Edit active line, max 510 chars, lines above 467 chars split - see Join\n\x20%highcol%W$[]rite: Start writing BELOW active line - more info: see submenu Write
if not "%~1"=="" if not "%~1"=="EDIT" || echo -e \x20%highcol%J$[]oin: Unite active line with line ABOVE (or Backspace)\n\x20%highcol%S$[]el: Select line-range - Dialog (or NumlockOff+Shift+ArrowUp/Down or Ctrl+A)\n\x20\x20View selection: PageDown, PageUp, End and Home - deselect: other keys (not C)\n\x20%highcol%C$[]opy: Active line OR copy selected line-range (or Ctrl+C)\n\x20%highcol%X$[]ut: Cut active line OR cut selected line-range (or Ctrl+X)
if not "%~1"=="" if not "%~1"=="EDIT" || echo -e \x20%highcol%P$[]aste: Paste copied/cut lines ABOVE active line (or Ctrl+V)\n\x20%highcol%G$[]oto: Goto line-number (or Ctrl+G)\n\x20%highcol%F$[]ind: Search string, only in active line and below, max. 80 chars (or Ctrl+F)\n\x20\x20Cheat: underscore is starting space. Alt+F case-sensitive search + underscore\n\x20%highcol%N$[]ext: Find next if available (total number is shown) - F3 can be used too\n\x20%highcol%D$[]el: Delete active line(s) OR delete highlighted found search-string (or Del)\n\x20\x20Ctrl+Del: always delete whole line\n\x20%highcol%R$[]eplace: Replace found string with new string (max 510 chars) - same replace\n\x20\x20possible after found next instance. Use Ctrl+R too insert new replace-string\n\x20%highcol%M$[]enu: Return to Main Menu (or Escape)\n\x20Ctrl+S to save, Ctrl+O to open file, Ctrl+B to backup file, Alt+F4 to quit
if "%~1"=="EDIT" && echo -e \x20$[]WARNING: do not use TAB while inserting chars - Repair: Escape & F5 to refresh
if "%~1"=="EDIT" && call :footer "call Fn.5 0 24" && echo -P:2401 -n -e %invcol%Press a key to continue && call :Fn.5 0 99 && pause --wait=360 && call :Fn.5 0 3 && call :footer && call :cleanline "3" "23" && goto :eof
if "%~1"=="" && echo -P:2401 -n -e %invcol%Press a key to continue && call :Fn.5 0 99 && pause --wait=240 && call :footer && call :Fn.5 0 3
if "%~1"=="" && call :header "HELP" "WRITE MENU" && call :cleanline "3" "23"
if "%~1"=="WRITE" && call :cleanline "3" "23" && call Fn.5 0 3
if not "%~1"=="" if not "%~1"=="WRITE" || echo -e \x20%highcol%Write Menu:$[] In Write mode cursor is on new line after Enter, moving cursor in\n\x20\x20Edit mode only - full menu only if writing last line\n\x20%highcol%P$[]ass: Make empty line\n\x20%highcol%E$[]dit: Change Write mode to Edit mode\n\x20%highcol%M$[]enu: Go to Main Menu\n\x20%highcol%E$[]nd: If started from Edit mode AND if cursor NOT on last line\n\n\x20$[]WARNING: do not use TAB while inserting chars - undo: Escape & F5 to refresh
if not "%~1"=="" if not "%~1"=="WRITE" || echo -P:2400 -n -%invcol%Press a key to continue && call :Fn.5 0 99 && pause --wait=240 && call :Fn.5 0 3 && call :footer && if "%~1"=="WRITE" && goto :eof
if "%~1"=="" && call :header "HELP" "OPEN MENU" && call :footer && call :cleanline "3" "23"
if "%~1"=="OPEN" && call :cleanline "3" "23" && call Fn.5 0 3
if not "%~1"=="" if not "%~1"=="OPEN" || echo -e \x20%highcol%Open Menu:$[] History is shown, max entries: 0-9. Give number to open entry\n\x20%highcol%F$[]ile: Dialog to give filename (8+3 only), max 255.5 KB - no Device or Path\n\x20\x20allowed here (Long File Names refused)\n\x20%highcol%P$[]ath: Dialog to give full path (Directories 8+3 only) - no Device or File\n\x20\x20allowed here (Long File Names refused)\n\x20%highcol%B$[]rowse: Browse for sub-directories/ files on 'active' Device (if Path changed,\n\x20\x20File 'UNTITLED' - only files <= 255.5 KB showed (Long Files Names refused)\n\x20%highcol%D$[]evice: Dialog to change Device (afterwards Path '/', File 'UNTITLED' - no\n\x20\x20File or Path allowed here)\n\x20%highcol%V$[]olumes: All available Volumes shown with some info (to select Device use\n\x20\x20menu-item 'Device')\n\x20%highcol%M$[]enu: Go back to former Menu (if no choices made, original Device/Path/File\n\x20\x20will be restored)\n\n\x20$[]WARNING: do not use TAB while inserting chars - undo with Escape
if not "%~1"=="" if not "%~1"=="OPEN" || echo -P:2400 -n -%invcol%Press a key to continue && call :Fn.5 0 99 && pause --wait=240 && call :Fn.5 0 3 && call :footer && if "%~1"=="OPEN" && goto :eof
if "%~1"=="" && call :header "HELP" "SAVE MENU" && call :footer && call :cleanline "3" "23"
if "%~1"=="SAVE" && call :cleanline "3" "23" && call Fn.5 0 3
if not "%~1"=="" if not "%~1"=="SAVE" || echo -e \x20%highcol%Save As/ Backup Menu (FAT only):$[] Use 8+3 File/ Directory names (LFN refused)\n\x20%highcol%F$[]ile: Dialog to give filename (no Device or Path allowed here)\n\x20%highcol%P$[]ath: Dialog to give full path - made if needed (no Device or File allowed)\n\x20%highcol%B$[]rowse: Browse for sub-directories/ files on 'active' Device (if Path changed,\n\x20\x20 - only files <= 255.5 KB showed)\n\x20%highcol%D$[]evice: Dialog to change Device (no File or Path allowed), afterwards Path '/'\n\x20%highcol%I$[]nfo: Shows info for FAT-devices\n\x20%highcol%V$[]olumes: All available Volumes shown with some info (to select Device use\n\x20\x20menu-item 'Device')\n\x20%highcol%S$[]ave: Save file (greyed out for not-FAT devices) - first if filename changed\n\x20%highcol%M$[]enu: Go back to former Menu (if no choices made, original Device/Path/File\n\x20\x20will be restored)\n\n\x20$[]WARNING: do not use TAB while inserting chars - undo: Escape & F5 to refresh
if not "%~1"=="" if not "%~1"=="SAVE" || echo -P:2400 -n -%invcol%Press a key to continue && call :Fn.5 0 99 && pause --wait=240 && call :Fn.5 0 3 && call :footer && if "%~1"=="SAVE" && goto :eof
if "%~1"=="" && call :header "HELP" "CONVERT MENU" && call :footer && call :cleanline "3" "23"
if "%~1"=="CONVERT" && call :cleanline "3" "23" && call Fn.5 0 3
if not "%~1"=="" if not "%~1"=="CONVERT" || echo -e \x20%highcol%Convert Menu:$[] Change End Of Line Marker to Unix, Mac or MS-DOS type (default)\n\x20%highcol%B$[]ack: Go back to former menu \n\x20%highcol%U$[]nix: Change End Of Line Marker to Unix type - Line Feed (0A)\n\x20%highcol%M$[]ac: Change End Of Line Marker to Mac type - Carriage Return (0D)\n\x20%highcol%D$[]os: Change End Of Line Marker to MS-DOS type - Carriage Return + Line Feed\n\x20\x20(0D0A)\n\n\x20WARNING: Conversion will immediately saved to file (FAT only)\n\x20\x20Exception: file UNTITLED (new, unsaved file) - not if real file name
if not "%~1"=="" if not "%~1"=="CONVERT" || echo -P:2400 -n -%invcol%Press a key to continue && call :Fn.5 0 99 && pause --wait=240 && call :Fn.5 0 3 && call :footer && if "%~1"=="CONVERT" && goto :eof
if "%~1"=="" && call :header "HELP" "GRAPHICS MENU" && call :footer && call :cleanline "3" "23"
if "%~1"=="GRAPHICS" && call :cleanline "3" "23" && call Fn.5 0 3
if not "%~1"=="" if not "%~1"=="GRAPHICS" || echo -e \x20%highcol%Graphics Menu:$[] Change color and graphics mode\n\x20%highcol%M$[]enu: Go back to main menu \n\x20%highcol%T$[]extmode: Change to text mode 80x25\n\x20%highcol%G$[]raphicsmode: Change to graphics mode 640x480 - only 80x25 used!\n\x20%highcol%C$[]olor: Change text and or background color: 28 presets only\n\n\x20$[]WARNING: do not use TAB while inserting number - undo with Escape
if not "%~1"=="" if not "%~1"=="GRAPHICS" || echo -P:2400 -n -%invcol%Press a key to continue && call :Fn.5 0 99 && pause --wait=240 && call :Fn.5 0 3 && call :footer && if "%~1"=="GRAPHICS" && goto :eof
if not exist vmax && call (md)0x220+1 && echo -n > (md)0x220+3 && clear && debug msg=3 ! call :cleanline "3" "23" && call :footer
goto :eof

:eov
if exist NHistory && set /A mdnhist=0x3000+45 && set /A mdhistbk=0x3000+46 &; cat --skip=2 --locate=\x00 --length=1 (md)%mdhistbk%+16 > nul || raw dd if=(md)%mdhistbk%+16 of=(md)0x0+0x1F63 bs=1 count=8000 seek=0x3EA4C0 > nul && raw dd if=(md)%mdnhist%+1 of=(md)0x0+0x1D00 bs=1 count=4 seek=%NHistory% > nul
if not %changed%==Y && echo -n > (md)%mdbase%+30 && set /A worksect=0x100-30-9 && set /A mdbase2=%mdbase%+40 && set /A mddraft=%callsect% + 1 * 2 + %mdread% && set /A mdbackup=%callsect% + 1 * 3 + %mdread% && set /A mdwrite=%callsect% + 1 * 4 + %mdread% &; call :cleanmem "%mdbase2%" "%worksect%" && call :cleanmem "%mdread%" "%callsect%" && call :cleanmem "%mddraft%" "%callsect%" && call :cleanmem "%mdbackup%" "%callsect%" && call :cleanmem "%mddraft%" "%callsect%" && call :cleanmem "%mdwrite%" "%callsect%"
if %changed%==Y && if exist message1 && clear &; %message1%
if %changed%==Y && if exist message && clear && echo %message%
if %zeros%==1 && set changed=Y
if %changed%==Y && debug msg=3
if %changed%==Y && clear && echo %highcol%Crash detected: some backups on (fd99) && echo && echo device: (fd99) && echo && fat dir (fd99)/ && echo && fat dir (fd99)/LASTSAVE && endlocal && goto :eof
if %openfile%>=0 && set /A mdfile=%mdbase%+30 > nul && setlocal && set c=%openfile% && set textcol=$[] && set "path=%path%" &; set /a pathlen=%@retval% && set numfile=0 && call :loopopenmenu "LASTRUN" &; endlocal
if %openfile%>=1 && set /A mdfile=%mdbase%+30 > nul &; cat --locate=!BAT --length=4 (md)%mdfile%+1 > nul && setlocal && call (md)%mdfile%+1 && set gotoline=1 && set /A mdfile=%mdbase%+31 && set /a c=%openfile%-1 && set textcol=$[] && set "path=%path%" &; set /a pathlen=%@retval% && set numfile=1 && call :loopopenmenu "LASTRUN" &; endlocal && set history=%history%
debug msg=3
call (md)0x220+1 && echo -n > (md)0x220+3 && clear && call Fn.5 0 0
if %vmax%==29 && set grsts=0x142 ! set grsts=0x3
errorcheck off
if exist %oldevice%%%oldpath%fattext.dat && cat --length=0 %oldevice%%%oldpath%fattext.dat > nul &; if not %@retval%==5120 && fat del %oldevice%%%oldpath%fattext.dat > nul
if not exist %oldevice%%%oldpath%fattext.dat && fat mkfile size=5120 %oldevice%%%oldpath%fattext.dat > nul
if not %history%==N && cat --locate=!BAT --length=4 (md)%mdfile%+1 > nul &; if not exist donefile && set histnum=1 ! if not %donefile%>=9 && set /a histnum=%donefile%+1 > nul ! set histnum=1
if exist histnum && cat --locate=0\x25textcol\x25 --replace=%histnum%\x25textcol\x25 (md)%mdfile%+1 > nul && set /A mdtarget=%mdbase%+30+%histnum% > nul &; raw dd if=(md)%mdfile%+1 of=(md)%mdtarget%+1 > nul && set donefile=%histnum% && set histnum= && set mdtarget=
if exist %oldevice%%%oldpath%fattext.dat && cat --length=0 %oldevice%%%oldpath%fattext.dat > nul &; if %@retval%>=5120 && echo -n > %oldevice%%%oldpath%fattext.dat && cat --locate=\x00 --length=1 %oldevice%%%oldpath%fattext.dat > nul && pause --wait=0 ?BAT > %oldevice%%%oldpath%fattext.dat && pause --wait=0 set "oldfile=%device%%%path%%%file%" >> %oldevice%%%oldpath%fattext.dat && pause --wait=0 set oldgoto=%gotoline% >> %oldevice%%%oldpath%fattext.dat && pause --wait=0 graphicsmode %grsts% >> %oldevice%%%oldpath%fattext.dat && pause --wait=0 set vmax=%vmax% >> %oldevice%%%oldpath%fattext.dat && pause --wait=0 set col=%col% >> %oldevice%%%oldpath%fattext.dat && pause --wait=0 set donefile=%donefile% >> %oldevice%%%oldpath%fattext.dat && cat --locate="?BAT" --length=4 %oldevice%%%oldpath%fattext.dat > nul && cat --locate="set col=" %oldevice%%%oldpath%fattext.dat > nul && set doneini=Y
if %doneini%==Y && set /A mdfile2=%mdbase%+31 > nul &; cat --locate=!BAT --length=4 (md)%mdfile2%+9 > nul && raw dd if=(md)%mdfile2%+9 of=%oldevice%%%oldpath%fattext.dat seek=1 > nul
if %doneini%==Y && echo -n > (md)%mdfile%+10 ! echo -n > (md)%mdfile%+1
if exist message1 &; %message1% && echo
if exist message && echo %message%
if %doneini%==Y && endlocal && set col= && set oldgoto= && set oldfile= && set texthist= && set donefile= ! endlocal && set col=%col% && set oldgoto=%gotoline% && set "oldfile=%device%%%path%%%file%" && set donefile=%donefile% && set texthist=Y
delmod fat
